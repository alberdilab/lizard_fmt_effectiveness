[["index.html", "AlberdiLab | Martin-Bideguren et al. 2024 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2024 Study title to be added Garazi Martin-Bideguren1, Carlos Cabido2, Antton Alberdi3 and Ostaizka Aizpurua4 Last update: 2025-02-23 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/lizard_fmt_effectiveness.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) #library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(ANCOMBC) library(lme4) library(nlme) library(hilldiv) library(emmeans) library(Maaslin2) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Copenhagen antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Remove antibiotics and transplant samples #Counts_raw columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;, &quot;AFU87&quot;, &quot;AFU88&quot;, &quot;AFU91&quot;, &quot;AFU92&quot;, &quot;AFU93&quot;, &quot;AFU94&quot;, &quot;AFU98&quot;, &quot;AFU95&quot;, &quot;AFU99&quot;, &quot;AFU96&quot;, &quot;AFV02&quot;, &quot;AFU97&quot;, &quot;AFV03&quot;, &quot;AFV04&quot;, &quot;AFV01&quot;, &quot;AFV05&quot;, &quot;AFV06&quot;, &quot;AFV07&quot;, &quot;AFV08&quot;, &quot;AFV09&quot;, &quot;AFV10&quot;, &quot;AFV11&quot;, &quot;AFV12&quot;, &quot;AFV14&quot;, &quot;AFV15&quot;, &quot;AFV16&quot;, &quot;AFV17&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(time_point != &quot;0_Wild&quot;)%&gt;% filter(Tube_code != &quot;AD16&quot;) %&gt;% filter(Tube_code != &quot;AD23&quot;) %&gt;% filter(Tube_code != &quot;AD25&quot;) %&gt;% filter(Tube_code != &quot;AD91&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;, &quot;AFU87&quot;, &quot;AFU88&quot;, &quot;AFU91&quot;, &quot;AFU92&quot;, &quot;AFU93&quot;, &quot;AFU94&quot;, &quot;AFU98&quot;, &quot;AFU95&quot;, &quot;AFU99&quot;, &quot;AFU96&quot;, &quot;AFV02&quot;, &quot;AFU97&quot;, &quot;AFV03&quot;, &quot;AFV04&quot;, &quot;AFV01&quot;, &quot;AFV05&quot;, &quot;AFV06&quot;, &quot;AFV07&quot;, &quot;AFV08&quot;, &quot;AFV09&quot;, &quot;AFV10&quot;, &quot;AFV11&quot;, &quot;AFV12&quot;, &quot;AFV14&quot;, &quot;AFV15&quot;, &quot;AFV16&quot;, &quot;AFV17&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) ##Removal of samples of individual LI1_2nd_6 #Counts_raw columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata&lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AFV13&quot;) %&gt;% filter(Tube_code != &quot;AD06&quot;) %&gt;% filter(Tube_code != &quot;AD31&quot;) %&gt;% filter(Tube_code != &quot;AE03&quot;) %&gt;% filter(Tube_code != &quot;AF12&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts&lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats&lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, phylum_colors, data_stats, file = &quot;data/data.Rdata&quot;) save(genome_gifts, file = &quot;data/gifts.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics data_stats$raw_reads %&gt;% sum() [1] 4064677112 data_stats$raw_reads %&gt;% mean() [1] 28827497 data_stats$raw_reads %&gt;% sd() [1] 14079396 3.2 DNA fractions #Overall data_stats %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.448 0.213 data_stats %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% filter(time_point!=&quot;0_Wild&quot;) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% filter(time_point!=&quot;0_Wild&quot;) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, species, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_edy0fs87x08t2ktelpug, .table th.tinytable_css_edy0fs87x08t2ktelpug { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5tuj92topq42wdglds2j, .table th.tinytable_css_5tuj92topq42wdglds2j { border-bottom: solid #d3d8dc 0.1em; } sample damr time_point species type AC79 1.0000000 1_Acclimation Podarcis_muralis Control AC80 1.0000000 1_Acclimation Podarcis_muralis Treatment AC81 0.9813013 1_Acclimation Podarcis_muralis Treatment AC82 0.7490771 1_Acclimation Podarcis_muralis Treatment AC83 1.0000000 1_Acclimation Podarcis_muralis Control AC84 1.0000000 1_Acclimation Podarcis_muralis Control AC85 0.8363777 1_Acclimation Podarcis_muralis Control AC86 0.8800275 1_Acclimation Podarcis_muralis Control AC87 0.9672854 1_Acclimation Podarcis_muralis Treatment AC88 0.3142108 1_Acclimation Podarcis_muralis Control AC89 0.9338962 1_Acclimation Podarcis_muralis Treatment AC90 1.0000000 1_Acclimation Podarcis_muralis Control AC91 1.0000000 1_Acclimation Podarcis_muralis Control AC92 1.0000000 1_Acclimation Podarcis_muralis Control AC93 1.0000000 1_Acclimation Podarcis_muralis Treatment AC94 0.9159348 1_Acclimation Podarcis_muralis Treatment AC95 0.9239904 1_Acclimation Podarcis_muralis Treatment AC96 0.9425962 1_Acclimation Podarcis_muralis Treatment AC97 0.9394886 1_Acclimation Podarcis_liolepis Hot_control AC98 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AC99 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD01 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD02 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD03 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD04 0.8896057 1_Acclimation Podarcis_liolepis Hot_control AD05 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD07 0.9515379 1_Acclimation Podarcis_liolepis Hot_control AD08 0.7045003 2_Antibiotics Podarcis_muralis Control AD09 1.0000000 2_Antibiotics Podarcis_muralis Control AD10 0.9598720 2_Antibiotics Podarcis_muralis Control AD11 0.6230176 2_Antibiotics Podarcis_muralis Control AD12 0.7487463 2_Antibiotics Podarcis_muralis Control AD13 1.0000000 2_Antibiotics Podarcis_muralis Control AD14 0.4536529 2_Antibiotics Podarcis_muralis Control AD15 1.0000000 2_Antibiotics Podarcis_muralis Control AD17 0.8774871 2_Antibiotics Podarcis_muralis Treatment AD18 0.4991585 2_Antibiotics Podarcis_muralis Treatment AD19 0.4060523 2_Antibiotics Podarcis_muralis Treatment AD20 0.5227482 2_Antibiotics Podarcis_muralis Treatment AD21 0.6551882 2_Antibiotics Podarcis_muralis Treatment AD22 0.9106725 2_Antibiotics Podarcis_muralis Treatment AD24 0.5972915 2_Antibiotics Podarcis_muralis Treatment AD26 0.9204825 2_Antibiotics Podarcis_liolepis Hot_control AD27 0.5215059 2_Antibiotics Podarcis_liolepis Hot_control AD28 0.8180607 2_Antibiotics Podarcis_liolepis Hot_control AD29 0.7175978 2_Antibiotics Podarcis_liolepis Hot_control AD30 0.9937574 2_Antibiotics Podarcis_liolepis Hot_control AD32 0.6710817 2_Antibiotics Podarcis_liolepis Hot_control AD33 0.6778368 2_Antibiotics Podarcis_liolepis Hot_control AD34 0.4642326 2_Antibiotics Podarcis_liolepis Hot_control AD36 0.8288365 3_Transplant1 Podarcis_muralis Control AD37 0.9530848 3_Transplant1 Podarcis_muralis Control AD38 0.9247925 3_Transplant1 Podarcis_muralis Control AD39 1.0000000 3_Transplant1 Podarcis_muralis Control AD40 0.9991552 3_Transplant1 Podarcis_muralis Control AD41 0.9550964 3_Transplant1 Podarcis_muralis Control AD42 1.0000000 3_Transplant1 Podarcis_muralis Control AD43 1.0000000 3_Transplant1 Podarcis_muralis Control AD44 0.9108807 3_Transplant1 Podarcis_muralis Control AD46 0.8708468 3_Transplant1 Podarcis_muralis Treatment AD47 0.8328653 3_Transplant1 Podarcis_muralis Treatment AD49 0.8940294 3_Transplant1 Podarcis_muralis Treatment AD50 0.8757711 3_Transplant1 Podarcis_muralis Treatment AD51 0.8479193 3_Transplant1 Podarcis_muralis Treatment AD52 0.8596870 3_Transplant1 Podarcis_muralis Treatment AD53 0.8528974 3_Transplant1 Podarcis_muralis Treatment AD54 1.0000000 3_Transplant1 Podarcis_liolepis Hot_control AD55 1.0000000 4_Transplant2 Podarcis_muralis Control AD56 0.9327538 4_Transplant2 Podarcis_muralis Control AD57 1.0000000 4_Transplant2 Podarcis_muralis Control AD58 1.0000000 4_Transplant2 Podarcis_muralis Control AD59 1.0000000 4_Transplant2 Podarcis_muralis Control AD60 0.7988844 4_Transplant2 Podarcis_muralis Control AD61 1.0000000 4_Transplant2 Podarcis_muralis Control AD62 1.0000000 4_Transplant2 Podarcis_muralis Control AD63 0.8992048 4_Transplant2 Podarcis_muralis Control AD65 1.0000000 4_Transplant2 Podarcis_muralis Treatment AD66 0.8821027 4_Transplant2 Podarcis_muralis Treatment AD68 0.8820274 4_Transplant2 Podarcis_muralis Treatment AD70 0.9590793 4_Transplant2 Podarcis_muralis Treatment AD71 0.8360540 4_Transplant2 Podarcis_muralis Treatment AD72 0.8835253 4_Transplant2 Podarcis_muralis Treatment AD73 1.0000000 4_Transplant2 Podarcis_liolepis Hot_control AD74 0.9017271 5_Post-FMT1 Podarcis_muralis Control AD75 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD76 0.9862581 5_Post-FMT1 Podarcis_muralis Treatment AD77 0.8963376 5_Post-FMT1 Podarcis_muralis Treatment AD78 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD79 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD80 0.8808155 5_Post-FMT1 Podarcis_muralis Treatment AD81 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD82 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD83 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD84 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD85 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD86 0.9889084 5_Post-FMT1 Podarcis_muralis Control AD87 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD88 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD89 0.9562489 5_Post-FMT1 Podarcis_muralis Control AD90 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD93 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AD94 0.7947750 5_Post-FMT1 Podarcis_liolepis Hot_control AD95 0.9506977 5_Post-FMT1 Podarcis_liolepis Hot_control AD96 0.9171413 5_Post-FMT1 Podarcis_liolepis Hot_control AD97 0.9257685 5_Post-FMT1 Podarcis_liolepis Hot_control AD98 0.9048349 5_Post-FMT1 Podarcis_liolepis Hot_control AD99 0.9966152 5_Post-FMT1 Podarcis_liolepis Hot_control AE01 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE02 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE04 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE05 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE06 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE07 0.7797794 6_Post-FMT2 Podarcis_muralis Control AE08 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE09 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE91 0.9259146 6_Post-FMT2 Podarcis_muralis Treatment AE92 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE93 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE94 0.9152960 6_Post-FMT2 Podarcis_muralis Treatment AE95 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE96 0.7786112 6_Post-FMT2 Podarcis_muralis Treatment AE97 0.9365037 6_Post-FMT2 Podarcis_muralis Control AE98 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE99 0.8513354 6_Post-FMT2 Podarcis_muralis Treatment AF01 0.9046369 6_Post-FMT2 Podarcis_muralis Treatment AF02 1.0000000 6_Post-FMT2 Podarcis_muralis Control AF03 0.9030087 6_Post-FMT2 Podarcis_muralis Treatment AF04 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF05 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF06 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF07 0.9526443 6_Post-FMT2 Podarcis_liolepis Hot_control AF08 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF09 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF10 0.9716162 6_Post-FMT2 Podarcis_liolepis Hot_control AF11 0.9654152 6_Post-FMT2 Podarcis_liolepis Hot_control AF13 0.8818742 6_Post-FMT2 Podarcis_liolepis Hot_control "],["diversity-analysis.html", "Chapter 4 Diversity analysis 4.1 Calculate diversities 4.2 Does the antibiotic administration change the microbial community? 4.3 Does antibiotic administration remove the differences found in the two populations? 4.4 Are the microbial communities similar in both donor samples? 4.5 Does the donor sample maintain the microbial community found in acclimation? 4.6 Is the donor sample microbiota different to recipient microbiota? 4.7 Does FMT change the microbial community over time? 4.8 Do FMT change the microbial community compared to antibiotics and acclimation? 4.9 Is the gut microbiota similar to the donor after FMT?", " Chapter 4 Diversity analysis load(&quot;data/data.Rdata&quot;) load(&quot;data/gifts.Rdata&quot;) load(&quot;data/beta_19022025.Rdata&quot;) genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% select(where(~ sum(.) &gt; 0)) %&gt;% select(-AC85) %&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) table &lt;- genome_counts_filt %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;) master_table &lt;- sample_metadata %&gt;% mutate(sample=Tube_code) %&gt;% mutate(Tube_code=str_remove_all(Tube_code, &quot;_a&quot;)) %&gt;% filter(Tube_code %in% table$sample) %&gt;% mutate(treatment = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point))%&gt;% left_join(., table, by=join_by(&quot;Tube_code&quot; ==&quot;sample&quot;)) sample_metadata &lt;- master_table %&gt;% select(1:13) genome_counts_filt &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0)))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_counts_filtering &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0))) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) match_data(genome_counts_filtering,genome_tree) genome_metadata &lt;- genome_metadata %&gt;% filter(genome %in% genome_counts_filt$genome) 4.1 Calculate diversities 4.1.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] genome_counts_filt1 &lt;- genome_counts_filt1 %&gt;% remove_rownames() %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% rownames_to_column(., &quot;genome&quot;) dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt1 %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample))%&gt;% full_join(functional, by = join_by(sample == sample)) treatment_colors &lt;- c(&#39;#008080&#39;, &quot;#d57d2c&quot;) 4.1.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) beta_q1f &lt;- genome_counts_filt1 %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) save(beta_q0n, beta_q1n, beta_q1p, beta_q1f, file = &quot;data/beta_19022025.Rdata&quot;) 4.2 Does the antibiotic administration change the microbial community? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;) ) 4.2.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;) ) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(neutral ~ time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.0048) ( log ) Formula: neutral ~ time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 223.7 229.6 -107.9 215.7 28 Scaled residuals: Min 1Q Median 3Q Max -1.4630 -0.6452 -0.1754 0.6566 2.6564 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.07822 0.2797 Number of obs: 32, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 2.9152 0.1558 18.72 &lt; 2e-16 *** time_point2_Antibiotics -0.9432 0.2144 -4.40 1.08e-05 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pnt2_Ant -0.538 Neutral Model_neutral &lt;- lme(fixed = neutral ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 225.017 230.6218 -108.5085 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.238645 7.593502 Fixed effects: neutral ~ time_point Value Std.Error DF t-value p-value (Intercept) 19.29561 2.000903 17 9.643449 0e+00 time_point2_Antibiotics -11.58649 2.716098 13 -4.265859 9e-04 Correlation: (Intr) time_point2_Antibiotics -0.631 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.86139926 -0.51381109 -0.09492589 0.56226694 1.96603543 Number of Observations: 32 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 138.9014 144.5062 -65.45072 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.046827 1.691404 Fixed effects: phylogenetic ~ time_point Value Std.Error DF t-value p-value (Intercept) 5.461590 0.4814205 17 11.344740 0.0000 time_point2_Antibiotics -0.811302 0.6097318 13 -1.330588 0.2062 Correlation: (Intr) time_point2_Antibiotics -0.584 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.65239178 -0.50119332 -0.03450314 0.42332882 1.59503693 Number of Observations: 32 Number of Groups: 18 Functional Model_funct &lt;- lme(fixed = functional ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_funct) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -14.95179 -9.346998 11.47589 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.203543e-06 0.1504954 Fixed effects: functional ~ time_point Value Std.Error DF t-value p-value (Intercept) 1.4855915 0.03650050 17 40.70058 0.0000 time_point2_Antibiotics -0.0344778 0.05331239 13 -0.64671 0.5291 Correlation: (Intr) time_point2_Antibiotics -0.685 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.2430042 -0.5618554 0.2917987 0.6160260 2.0402200 Number of Observations: 32 Number of Groups: 18 4.2.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.013523 0.0135230 2.0312 999 0.17 Residuals 30 0.199726 0.0066575 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_jyd8jw37fydkoqeiaat7, .table th.tinytable_css_jyd8jw37fydkoqeiaat7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_f2qpimkdfw05kh8s67j8, .table th.tinytable_css_f2qpimkdfw05kh8s67j8 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.575038 0.1307754 4.513519 0.001 Residual 30 10.468804 0.8692246 NA NA Total 31 12.043842 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03475 0.034752 2.5153 999 0.105 Residuals 30 0.41450 0.013817 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_rm7rd9gt98gnf4rwfl6w, .table th.tinytable_css_rm7rd9gt98gnf4rwfl6w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_hmifn5teq5rk14iv6aar, .table th.tinytable_css_hmifn5teq5rk14iv6aar { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.778963 0.1605587 5.738054 0.001 Residual 30 9.300869 0.8394413 NA NA Total 31 11.079832 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.31299 0.312989 16.486 999 0.002 ** Residuals 30 0.56954 0.018985 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_t9zwjfzp4plnrnqen1bi, .table th.tinytable_css_t9zwjfzp4plnrnqen1bi { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3x2kzjryxiws16twci5f, .table th.tinytable_css_3x2kzjryxiws16twci5f { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.569966 0.2885492 12.16735 0.001 Residual 30 3.870929 0.7114508 NA NA Total 31 5.440895 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.18537 0.185373 4.9261 999 0.026 * Residuals 30 1.12892 0.037631 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(func ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_p86n0iwo5ycnnxumeebn, .table th.tinytable_css_p86n0iwo5ycnnxumeebn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fofp8rsr9ggg0cyl8qvb, .table th.tinytable_css_fofp8rsr9ggg0cyl8qvb { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.121064 0.361186 16.96203 0.001 Residual 30 1.982777 0.638814 NA NA Total 31 3.103841 1.000000 NA NA 4.2.3 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;1_Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;2_Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 9 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 43 2 p__Bacteroidota 15 3 p__Bacillota 8 4 p__Pseudomonadota 8 5 p__Cyanobacteriota 3 6 p__Verrucomicrobiota 2 7 p__Bacillota_B 1 8 p__Bacillota_C 1 9 p__Fusobacteriota 1 Antibiotics structural_zeros %&gt;% filter(present==&quot;antibiotics&quot;) %&gt;% select(1,5:10) # A tibble: 4 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_7:bin_000003 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 2 LI1_2nd_7:bin_000001 p__Bacillota_A c__Clostridia o__Clostridiales f__Clostridiaceae g__Sarcina s__ 3 AH1_2nd_7:bin_000055 p__Bacillota c__Bacilli o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma s__ 4 AH1_2nd_13:bin_000025 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 4.2.4 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_antib_accl.Rdata&quot;) load(&quot;data/ancombc_antib_accl.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_time_point2_Antibiotics, p_time_point2_Antibiotics) %&gt;% filter(p_time_point2_Antibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_point2_Antibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point2_Antibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point2_Antibiotics, y=forcats::fct_reorder(genome,lfc_time_point2_Antibiotics), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 14 2 Bacillota_A 4 3 Bacillota 2 4 Campylobacterota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Campylobacterota Helicobacter_J 2 Bacillota_A 3 Bacteroidota Bacteroides 4 Bacteroidota Odoribacter 5 Bacteroidota Bacteroides 6 Bacillota Coprobacillus 7 Bacillota 8 Bacteroidota Phocaeicola 9 Bacteroidota Bacteroides 10 Bacteroidota Phocaeicola 11 Bacteroidota Odoribacter 12 Bacteroidota Bacteroides 13 Bacteroidota Bacteroides 14 Bacteroidota Parabacteroides 15 Bacteroidota 16 Bacteroidota Parabacteroides 17 Bacillota_A 18 Bacteroidota Alistipes 19 Bacillota_A 20 Bacillota_A 21 Bacteroidota Odoribacter ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(genus, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) genus sample_count 1 6 2 Bacteroides 5 3 Odoribacter 3 4 Parabacteroides 2 5 Phocaeicola 2 6 Alistipes 1 7 Coprobacillus 1 8 Helicobacter_J 1 4.2.5 Differences in the functional capacity GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.2.5.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.331 0.0319 2 Antibiotics 0.244 0.134 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94311, p-value = 0.09179 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 190, p-value = 0.01768 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Antibiotics)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Antibiotics&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) 4.2.5.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.329 0.0319 2 Antibiotics 0.255 0.126 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.95731, p-value = 0.2316 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 188, p-value = 0.02195 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_z49bwdgm9ew3dwcum3hv, .table th.tinytable_css_z49bwdgm9ew3dwcum3hv { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_h21a4bo9gil69w8hpe2k, .table th.tinytable_css_h21a4bo9gil69w8hpe2k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Code_function Acclimation Antibiotics Function Difference treatment B06 0.68059020 0.47329940 Organic anion biosynthesis 0.20729080 Acclimation B02 0.59930820 0.41576970 Amino acid biosynthesis 0.18353850 Acclimation D02 0.38530780 0.20616790 Polysaccharide degradation 0.17913990 Acclimation S03 0.27145162 0.09403129 Spore 0.17742033 Acclimation B01 0.84159250 0.69078390 Nucleic acid biosynthesis 0.15080860 Acclimation B07 0.44505530 0.30423320 Vitamin biosynthesis 0.14082210 Acclimation B08 0.44618700 0.32094170 Aromatic compound biosynthesis 0.12524530 Acclimation D09 0.25519710 0.13446900 Antibiotic degradation 0.12072810 Acclimation B04 0.54481600 0.42941310 SCFA biosynthesis 0.11540290 Acclimation D03 0.29173710 0.20687250 Sugar degradation 0.08486460 Acclimation D05 0.28853330 0.22270070 Amino acid degradation 0.06583260 Acclimation B10 0.05960097 0.03635236 Antibiotic biosynthesis 0.02324861 Acclimation 4.3 Does antibiotic administration remove the differences found in the two populations? 4.3.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point == &quot;2_Antibiotics&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(time_point == &quot;2_Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.3.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;2_Antibiotics&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;2_Antibiotics&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.015319 0.0153186 6.8764 999 0.021 * Residuals 21 0.046782 0.0022277 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_q8fyphkm3x1gnqgz8xnc, .table th.tinytable_css_q8fyphkm3x1gnqgz8xnc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_59oj13ommmuwfxgo471z, .table th.tinytable_css_59oj13ommmuwfxgo471z { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.356644 0.1527052 3.784762 0.001 Residual 21 7.527428 0.8472948 NA NA Total 22 8.884073 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.030536 0.0305358 3.8593 999 0.061 . Residuals 21 0.166158 0.0079123 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tkdn636se38sj3w7ot6v, .table th.tinytable_css_tkdn636se38sj3w7ot6v { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8ebtzzckmc6c5xwp2u9y, .table th.tinytable_css_8ebtzzckmc6c5xwp2u9y { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.785669 0.2085055 5.532084 0.001 Residual 21 6.778468 0.7914945 NA NA Total 22 8.564137 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.012041 0.012041 0.9898 999 0.332 Residuals 21 0.255459 0.012165 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_kadhlmcjax4xzcgnsk93, .table th.tinytable_css_kadhlmcjax4xzcgnsk93 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_exvkmem8nh2wa1yl8w9w, .table th.tinytable_css_exvkmem8nh2wa1yl8w9w { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.8963254 0.1888758 4.889993 0.001 Residual 21 3.8492558 0.8111242 NA NA Total 22 4.7455811 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01804 0.018038 0.439 999 0.495 Residuals 21 0.86285 0.041088 adonis2(func ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_r20ha8rplf6c2gct90rl, .table th.tinytable_css_r20ha8rplf6c2gct90rl { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_310jdvdkl2n7n2wu67er, .table th.tinytable_css_310jdvdkl2n7n2wu67er { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.0184644 0.0098378 0.2086464 0.704 Residual 21 1.8584184 0.9901622 NA NA Total 22 1.8768828 1.0000000 NA NA 4.4 Are the microbial communities similar in both donor samples? samples_to_keep &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;3_Transplant1&quot;, &quot;4_Transplant2&quot;))%&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;3_Transplant1&quot;, &quot;4_Transplant2&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;3_Transplant1&quot;, &quot;4_Transplant2&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000151 0.0001514 0.0181 999 0.905 Residuals 13 0.108675 0.0083596 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zdbqersh8viw3yzeba44, .table th.tinytable_css_zdbqersh8viw3yzeba44 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_p2l9gmdsfe2qxsqsl5u7, .table th.tinytable_css_p2l9gmdsfe2qxsqsl5u7 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.06781753 0.02960432 0.3965972 0.979 Residual 13 2.22298047 0.97039568 NA NA Total 14 2.29079799 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00067 0.0006698 0.0523 999 0.801 Residuals 13 0.16645 0.0128035 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_h4xfp2iipbgt6eg3c96t, .table th.tinytable_css_h4xfp2iipbgt6eg3c96t { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_dsce3qnfapdzclv6j2ia, .table th.tinytable_css_dsce3qnfapdzclv6j2ia { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.09261373 0.03872219 0.523666 0.804 Residual 13 2.29913452 0.96127781 NA NA Total 14 2.39174825 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00371 0.0037095 0.3076 999 0.635 Residuals 13 0.15676 0.0120588 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_sbzncpp0ospfkad8ou37, .table th.tinytable_css_sbzncpp0ospfkad8ou37 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_aeqjd9usgly4f0651l3j, .table th.tinytable_css_aeqjd9usgly4f0651l3j { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.009763176 0.01920889 0.2546063 0.853 Residual 13 0.498500276 0.98079111 NA NA Total 14 0.508263452 1.00000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.013298 0.0132975 1.5346 999 0.217 Residuals 13 0.112644 0.0086649 adonis2(func ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_y0ccv8y4mncx2kyiqapo, .table th.tinytable_css_y0ccv8y4mncx2kyiqapo { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9walsvcgtjvuka95ppcx, .table th.tinytable_css_9walsvcgtjvuka95ppcx { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 -0.003102642 -0.01647707 -0.2107297 0.812 Residual 13 0.191403206 1.01647707 NA NA Total 14 0.188300564 1.00000000 NA NA 4.5 Does the donor sample maintain the microbial community found in acclimation? 4.5.1 Alpha diversity sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Transplant1&quot;, &quot;Transplant2&quot;) ~ &quot;Transplant&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.5.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.008956 0.0089559 1.5113 999 0.272 Residuals 22 0.130368 0.0059258 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_i2vmcepibsunvc6zswzk, .table th.tinytable_css_i2vmcepibsunvc6zswzk { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_fj4zaazm9n28gbcud0pt, .table th.tinytable_css_fj4zaazm9n28gbcud0pt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2644898 0.06349573 1.491617 0.103 Residual 22 3.9009835 0.93650427 NA NA Total 23 4.1654732 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000794 0.0007940 0.0884 999 0.798 Residuals 22 0.197689 0.0089859 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_meqo745scz553davulof, .table th.tinytable_css_meqo745scz553davulof { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_56toc0gp98rosf6l61bq, .table th.tinytable_css_56toc0gp98rosf6l61bq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3163831 0.07591112 1.807234 0.059 Residual 22 3.8514266 0.92408888 NA NA Total 23 4.1678097 1.00000000 NA NA neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + # scale_color_manual(values = treatment_colors,labels=c(&quot;Cold_wet&quot; = &quot;Cold wet&quot;, &quot;Hot_dry&quot; = &quot;Hot dry&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002011 0.0020114 0.2582 999 0.693 Residuals 22 0.171393 0.0077906 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xviapd6i4wlwyjua2ggh, .table th.tinytable_css_xviapd6i4wlwyjua2ggh { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ip01vewemy3toy7a0fjk, .table th.tinytable_css_ip01vewemy3toy7a0fjk { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.0409768 0.05601243 1.305392 0.286 Residual 22 0.6905894 0.94398757 NA NA Total 23 0.7315662 1.00000000 NA NA phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000522 0.0005217 0.052 999 0.828 Residuals 22 0.220603 0.0100274 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_jelg7su3glzrcew7bzcz, .table th.tinytable_css_jelg7su3glzrcew7bzcz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ciqoqvpwe7yuphdoqmsm, .table th.tinytable_css_ciqoqvpwe7yuphdoqmsm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.08891682 0.2161114 6.065212 0.046 Residual 22 0.32252296 0.7838886 NA NA Total 23 0.41143978 1.0000000 NA NA func %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;Cold_wet&quot; = &quot;Cold wet&quot;, &quot;Hot_dry&quot; = &quot;Hot dry&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) 4.6 Is the donor sample microbiota different to recipient microbiota? 4.6.1 Alpha diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.6.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.12878 0.128776 13.013 999 0.001 *** Residuals 20 0.19792 0.009896 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_erlw7rzletsrqvwhvqcm, .table th.tinytable_css_erlw7rzletsrqvwhvqcm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_al15nkj6xt6zcuyx4zje, .table th.tinytable_css_al15nkj6xt6zcuyx4zje { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.76810 0.2746704 7.573672 0.001 Residual 20 4.66907 0.7253296 NA NA Total 21 6.43717 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.071939 0.071939 5.5113 999 0.038 * Residuals 20 0.261057 0.013053 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_w3ftuosxh4sdd1erh6kj, .table th.tinytable_css_w3ftuosxh4sdd1erh6kj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_eaf0fxjcb9esmlp77xke, .table th.tinytable_css_eaf0fxjcb9esmlp77xke { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 2.109391 0.3208221 9.447366 0.001 Residual 20 4.465565 0.6791779 NA NA Total 21 6.574956 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04724 0.047241 2.6056 999 0.111 Residuals 20 0.36261 0.018131 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_oild2qy9u61v13p10qwu, .table th.tinytable_css_oild2qy9u61v13p10qwu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_e8da9h7twhyygimubqyy, .table th.tinytable_css_e8da9h7twhyygimubqyy { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3764016 0.2391132 6.285119 0.001 Residual 20 1.1977547 0.7608868 NA NA Total 21 1.5741563 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000158 0.0001578 0.0131 999 0.9 Residuals 20 0.240836 0.0120418 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_n9m6oyvtta92levdy5j7, .table th.tinytable_css_n9m6oyvtta92levdy5j7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_c1civjg0n59nmeshkk2w, .table th.tinytable_css_c1civjg0n59nmeshkk2w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.07897425 0.1809165 4.417536 0.084 Residual 20 0.35754884 0.8190835 NA NA Total 21 0.43652308 1.0000000 NA NA 4.7 Does FMT change the microbial community over time? 4.7.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Post-FMT1&quot;,&quot;Post-FMT2&quot;) ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot; )) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Model_rich &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Model_rich) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.3157) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 171.5 174.8 -81.7 163.5 13 Scaled residuals: Min 1Q Median 3Q Max -1.72426 -0.71683 -0.08993 0.38000 1.84050 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0 0 Number of obs: 17, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9416 0.1772 22.247 &lt;2e-16 *** treatmentPost-FMT2 0.4080 0.2420 1.686 0.0918 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) trtmnP-FMT2 -0.732 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 129.347 132.1792 -60.6735 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.521142 11.47471 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 24.81671 4.241888 8 5.850393 0.0004 treatmentPost-FMT2 15.06479 5.589803 7 2.695048 0.0309 Correlation: (Intr) treatmentPost-FMT2 -0.701 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.75054530 -0.55659466 -0.07097174 0.51610612 1.27053535 Number of Observations: 17 Number of Groups: 9 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 56.51921 59.35141 -24.25961 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7091595 0.8466237 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 4.192894 0.3867555 8 10.841199 0.0000 treatmentPost-FMT2 0.939941 0.4163443 7 2.257606 0.0585 Correlation: (Intr) treatmentPost-FMT2 -0.582 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.1453262 -0.5912067 -0.1412005 0.4845880 2.3194143 Number of Observations: 17 Number of Groups: 9 Functional Model_funct &lt;- lme(fixed = functional ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_funct) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -32.8173 -29.9851 20.40865 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.0619285 0.03018711 Fixed effects: functional ~ treatment Value Std.Error DF t-value p-value (Intercept) 1.4883350 0.02345764 8 63.44777 0.0000 treatmentPost-FMT2 0.0323233 0.01501285 7 2.15304 0.0683 Correlation: (Intr) treatmentPost-FMT2 -0.352 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.08983687 -0.66983137 -0.03874894 0.52553040 1.62217086 Number of Observations: 17 Number of Groups: 9 4.7.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.017295 0.0172950 2.8289 999 0.111 Residuals 15 0.091706 0.0061137 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ocskudn5cup4epkf1vsu, .table th.tinytable_css_ocskudn5cup4epkf1vsu { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9xcs9gfa56qnl9ns4skh, .table th.tinytable_css_9xcs9gfa56qnl9ns4skh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3571397 0.07959561 1.297184 0.00390625 Residual 15 4.1297869 0.92040439 NA NA Total 16 4.4869265 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.009753 0.0097526 0.7091 999 0.44 Residuals 15 0.206312 0.0137541 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_8dq3pzlbigo8c1pgfgk1, .table th.tinytable_css_8dq3pzlbigo8c1pgfgk1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_42ak82vgcftts8ycbfuo, .table th.tinytable_css_42ak82vgcftts8ycbfuo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3157079 0.08117526 1.325203 0.00390625 Residual 15 3.5735051 0.91882474 NA NA Total 16 3.8892130 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.010945 0.010944 0.6593 999 0.529 Residuals 15 0.248985 0.016599 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_w7rij4057l458rijtvl9, .table th.tinytable_css_w7rij4057l458rijtvl9 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4nrvjohqfbuy9105h4bv, .table th.tinytable_css_4nrvjohqfbuy9105h4bv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.06393539 0.09448624 1.565182 0.0703125 Residual 15 0.61272811 0.90551376 NA NA Total 16 0.67666350 1.00000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00162 0.0016197 0.1158 999 0.694 Residuals 15 0.20977 0.0139849 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_hhnqawzkgf33nmeavlob, .table th.tinytable_css_hhnqawzkgf33nmeavlob { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_fh2pcxxvjsvph2qfalkm, .table th.tinytable_css_fh2pcxxvjsvph2qfalkm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.02837271 0.07925317 1.291123 0.3203125 Residual 15 0.32962828 0.92074683 NA NA Total 16 0.35800099 1.00000000 NA NA 4.8 Do FMT change the microbial community compared to antibiotics and acclimation? 4.8.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Antibiotics&quot;, &quot;Acclimation&quot;,&quot;Post-FMT1&quot;) ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;Post-FMT1&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + # scale_color_manual(values=treatment_colors)+ # scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness: Problems to calculate Model_rich &lt;- glmer.nb(richness ~ treatment + (1|individual), data = alpha_div_meta) #summary(Model_rich) emmeans(Model_rich, pairwise ~ treatment) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_neutral) emmeans(Model_neutral, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 17.4 3.46 8 9.410 25.4 Antibiotics 8.5 3.91 8 -0.516 17.5 Post-FMT1 24.8 3.67 8 16.296 33.2 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 8.90 4.82 13 1.847 0.1935 Acclimation - (Post-FMT1) -7.36 4.62 13 -1.591 0.2840 Antibiotics - (Post-FMT1) -16.25 4.92 13 -3.301 0.0148 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_phylo) emmeans(Model_phylo, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 5.56 0.514 8 4.38 6.75 Antibiotics 4.33 0.581 8 2.99 5.67 Post-FMT1 4.17 0.544 8 2.92 5.43 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 1.229 0.727 13 1.690 0.2456 Acclimation - (Post-FMT1) 1.387 0.698 13 1.986 0.1549 Antibiotics - (Post-FMT1) 0.158 0.744 13 0.212 0.9755 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Functional Model_funct &lt;- lme(fixed = functional ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_funct) emmeans(Model_funct, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 1.49 0.0437 8 1.39 1.60 Antibiotics 1.47 0.0496 8 1.36 1.58 Post-FMT1 1.49 0.0464 8 1.38 1.60 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 0.02516 0.0661 13 0.380 0.9238 Acclimation - (Post-FMT1) 0.00591 0.0638 13 0.093 0.9953 Antibiotics - (Post-FMT1) -0.01924 0.0679 13 -0.283 0.9569 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates 4.8.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Post-FMT1&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Post-FMT1&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.015456 0.0077280 1.0306 999 0.4 Residuals 21 0.157471 0.0074986 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zrianial4ovfgd6zatux, .table th.tinytable_css_zrianial4ovfgd6zatux { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_oluhypsxn6s5htlqgzb2, .table th.tinytable_css_oluhypsxn6s5htlqgzb2 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.837434 0.201293 2.646248 0.001 Residual 21 7.290723 0.798707 NA NA Total 23 9.128157 1.000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8277738 2.288600 0.1405032 0.001 0.003 * 2 Acclimation vs Post-FMT1 1 0.9551308 2.926054 0.1632291 0.001 0.003 * 3 Antibiotics vs Post-FMT1 1 0.9744543 2.741152 0.1741392 0.003 0.009 * Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.017834 0.0089172 0.5922 999 0.59 Residuals 21 0.316187 0.0150565 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_n0s8fn2pif6stnbae411, .table th.tinytable_css_n0s8fn2pif6stnbae411 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3xahyjn4469cv25texqg, .table th.tinytable_css_3xahyjn4469cv25texqg { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 2.356335 0.2697712 3.879056 0.001 Residual 21 6.378232 0.7302288 NA NA Total 23 8.734566 1.0000000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8812272 2.745592 0.1639591 0.001 0.003 * 2 Acclimation vs Post-FMT1 1 1.3127773 4.629826 0.2358567 0.001 0.003 * 3 Antibiotics vs Post-FMT1 1 1.3423457 4.351968 0.2508054 0.001 0.003 * Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.15470 0.077349 2.6532 999 0.098 . Residuals 21 0.61221 0.029153 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_isn8meuyw6xgq77oro94, .table th.tinytable_css_isn8meuyw6xgq77oro94 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_asdsxjy0u3oiom78cfqu, .table th.tinytable_css_asdsxjy0u3oiom78cfqu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.326050 0.3645754 6.024383 0.001 Residual 21 2.311195 0.6354246 NA NA Total 23 3.637246 1.0000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.6891376 5.128491 0.2681074 0.002 0.006 * 2 Acclimation vs Post-FMT1 1 0.2531943 3.273842 0.1791546 0.036 0.108 3 Antibiotics vs Post-FMT1 1 1.0996467 9.041595 0.4102060 0.003 0.009 * Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.23450 0.117249 4.3966 999 0.025 * Residuals 21 0.56003 0.026668 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_wkkrjj7r24h2ejkjbw47, .table th.tinytable_css_wkkrjj7r24h2ejkjbw47 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_kdotipk18qoapqldxtie, .table th.tinytable_css_kdotipk18qoapqldxtie { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.636364 0.5726008 14.0672 0.002 Residual 21 1.221410 0.4273992 NA NA Total 23 2.857774 1.0000000 NA NA pairwise.adonis(func, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 1.11238376 14.789477 0.5137112 0.001 0.003 * 2 Acclimation vs Post-FMT1 1 0.05911164 2.624236 0.1488993 0.137 0.411 3 Antibiotics vs Post-FMT1 1 1.36464611 16.864488 0.5647004 0.001 0.003 * 4.9 Is the gut microbiota similar to the donor after FMT? 4.9.1 Beta diversity sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.11342 0.113420 11.957 999 0.001 *** Residuals 28 0.26559 0.009485 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_8upwyfc74kx4wyz5k1bx, .table th.tinytable_css_8upwyfc74kx4wyz5k1bx { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_8gec1gpzup974tapcwll, .table th.tinytable_css_8gec1gpzup974tapcwll { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.182046 0.154139 5.102365 0.001 Residual 28 6.486654 0.845861 NA NA Total 29 7.668700 1.000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04487 0.044865 3.2331 999 0.079 . Residuals 28 0.38855 0.013877 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_40e7yjbrhmh1qnx5sqrv, .table th.tinytable_css_40e7yjbrhmh1qnx5sqrv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_3fxgpih4ordmy8ukdr1d, .table th.tinytable_css_3fxgpih4ordmy8ukdr1d { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.146508 0.1607364 5.362581 0.001 Residual 28 5.986340 0.8392636 NA NA Total 29 7.132848 1.0000000 NA NA neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + # scale_color_manual(values = treatment_colors) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00008 0.0000787 0.005 999 0.937 Residuals 28 0.43669 0.0155959 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_hjjee4fp5twyvcddv2i1, .table th.tinytable_css_hjjee4fp5twyvcddv2i1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_g8mirhiqbpgxypbk7jhp, .table th.tinytable_css_g8mirhiqbpgxypbk7jhp { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.1296962 0.1018031 3.173567 0.002 Residual 28 1.1442941 0.8981969 NA NA Total 29 1.2739903 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00120 0.001202 0.1035 999 0.744 Residuals 28 0.32533 0.011619 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_yab19adtptjbuje2ueeh, .table th.tinytable_css_yab19adtptjbuje2ueeh { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_26n5u65wd0o7w059lq8z, .table th.tinytable_css_26n5u65wd0o7w059lq8z { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.01544812 0.02751097 0.7920986 0.46 Residual 28 0.54607759 0.97248903 NA NA Total 29 0.56152571 1.00000000 NA NA 4.9.2 Structural zeros FMT_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment == &quot;FMT&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() Transplant_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment ==&quot;Transplant&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_FMT = all(c_across(all_of(FMT_samples)) == 0)) %&gt;% mutate(all_zeros_Transplant = all(c_across(all_of(Transplant_samples)) == 0)) %&gt;% mutate(average_FMT = mean(c_across(all_of(FMT_samples)), na.rm = TRUE)) %&gt;% mutate(average_Transplant = mean(c_across(all_of(Transplant_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_FMT == TRUE || all_zeros_Transplant==TRUE) %&gt;% mutate(present = case_when( all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;Transplant&quot;, !all_zeros_FMT &amp; all_zeros_Transplant ~ &quot;FMT&quot;, !all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;FMT&quot;, average_FMT, average_Transplant)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Structural zeros in each group fmt &lt;- structural_zeros %&gt;% filter(present==&quot;FMT&quot;) %&gt;% count(phylum, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) fmt_f &lt;- structural_zeros %&gt;% filter(present==&quot;FMT&quot;) %&gt;% count(family, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Transplant FMT 1 52 55 Phyla to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_8ynrp0x2zjnay5g3iojn, .table th.tinytable_css_8ynrp0x2zjnay5g3iojn { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2i1kj50wm0jx7izojfx5, .table th.tinytable_css_2i1kj50wm0jx7izojfx5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum Transplant FMT p__Bacillota_A 20 21 p__Bacillota 16 10 p__Pseudomonadota 6 11 p__Bacteroidota 3 6 p__Desulfobacterota 2 2 p__Bacillota_B 1 0 p__Chlamydiota 1 0 p__Cyanobacteriota 1 0 p__Fusobacteriota 1 0 p__Verrucomicrobiota 1 2 p__Actinomycetota 0 1 p__Bacillota_C 0 1 p__Campylobacterota 0 1 Families to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(family, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_f, by=&quot;family&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_tnqmqlrnkpbjp08tkuj5, .table th.tinytable_css_tnqmqlrnkpbjp08tkuj5 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_135isa4m17tc57dslabr, .table th.tinytable_css_135isa4m17tc57dslabr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } family Transplant FMT f__Lachnospiraceae 7 9 f__Erysipelotrichaceae 6 5 f__UBA660 6 0 f__Enterobacteriaceae 5 2 f__CAG-508 3 0 f__Ruminococcaceae 3 3 f__Anaerovoracaceae 2 0 f__Coprobacillaceae 2 0 f__Desulfovibrionaceae 2 2 f__Oscillospiraceae 2 1 f__Tannerellaceae 2 1 f__UBA1242 2 0 f__ 1 3 f__Akkermansiaceae 1 0 f__CAG-239 1 2 f__Chlamydiaceae 1 0 f__Enterococcaceae 1 3 f__Fusobacteriaceae 1 0 f__Gastranaerophilaceae 1 0 f__Marinifilaceae 1 0 f__Mycoplasmoidaceae 1 1 f__Peptococcaceae 1 0 f__Anaerotignaceae 0 2 f__Bacteroidaceae 0 2 f__LL51 0 2 f__UBA3700 0 2 f__Acutalibacteraceae 0 1 f__Arcobacteraceae 0 1 f__CAG-274 0 1 f__CALVMC01 0 1 f__Devosiaceae 0 1 f__Mycobacteriaceae 0 1 f__Pumilibacteraceae 0 1 f__RUG11792 0 1 f__Rhizobiaceae 0 1 f__Rikenellaceae 0 1 f__Sphingobacteriaceae 0 1 f__Streptococcaceae 0 1 f__UBA1997 0 1 f__UBA3830 0 1 f__Weeksellaceae 0 1 4.9.2.1 Functional capacities of the structural zeros #Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% structural_zeros$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) #Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) #Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% filter(genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT-Transplant)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Transplant&quot;,&quot;FMT&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Elevation&quot;) 4.9.3 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_FMT_transplant.Rdata&quot;) load(&quot;data/ancombc_FMT_transplant.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_treatmentTransplant, p_treatmentTransplant) %&gt;% filter(p_treatmentTransplant &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentTransplant) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_treatmentTransplant) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() Differential abundance MAGs in each group fmt_count &lt;- ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&lt;0) %&gt;% count(phylum, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&gt;0) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) phylum Transplant FMT 1 Bacteroidota 13 5 2 Bacillota_A 4 18 3 Bacillota 3 1 4 Campylobacterota 1 1 5 Desulfobacterota 1 2 6 Spirochaetota 1 0 7 Pseudomonadota 0 5 8 Cyanobacteriota 0 2 9 Bacillota_B 0 1 10 Bacillota_C 0 1 ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&gt;0) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Transplant FMT 1 23 36 ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentTransplant, y=forcats::fct_reorder(genome,lfc_treatmentTransplant), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) 4.9.4 Differences in the functional capacities GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.9.4.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT 0.354 0.0255 2 Transplant 0.351 0.0426 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94866, p-value = 0.1557 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 128, p-value = 0.4826 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT-Transplant)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Transplant&quot;,&quot;FMT&quot;)) means_gift &lt;- element_gift_filt %&gt;% select(-treatment) %&gt;% pivot_longer(!sample, names_to = &quot;Elements&quot;, values_to = &quot;abundance&quot;) %&gt;% left_join(sample_metadata, by=join_by(sample==sample)) %&gt;% group_by(treatment, Elements) %&gt;% summarise(mean=mean(abundance)) log_fold &lt;- means_gift %&gt;% group_by(Elements) %&gt;% summarise( logfc_fmt_transplant = log2(mean[treatment == &quot;FMT&quot;] / mean[treatment == &quot;Transplant&quot;]) ) %&gt;% left_join(., difference_table, by=&quot;Elements&quot;) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) log_fold %&gt;% filter(Elements!=&quot;D0611&quot;) %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,logfc_fmt_transplant), y=logfc_fmt_transplant, fill=group_color)) + geom_col() + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Log_fold&quot;)+ labs(fill=&quot;Treatment&quot;) 4.9.4.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT 0.349 0.0221 2 Transplant 0.354 0.0374 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.87186, p-value = 0.001843 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 121, p-value = 0.6801 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
