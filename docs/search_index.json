[["index.html", "AlberdiLab | Martin-Bideguren et al. 2024 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2024 Study title to be added Garazi Martin-Bideguren1, Carlos Cabido2, Antton Alberdi3 and Ostaizka Aizpurua4 Last update: 2025-02-20 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/lizard_fmt_effectiveness.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) #library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(ANCOMBC) library(lme4) library(nlme) library(hilldiv) library(emmeans) library(Maaslin2) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Copenhagen antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Remove antibiotics and transplant samples #Counts_raw columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;, &quot;AFU87&quot;, &quot;AFU88&quot;, &quot;AFU91&quot;, &quot;AFU92&quot;, &quot;AFU93&quot;, &quot;AFU94&quot;, &quot;AFU98&quot;, &quot;AFU95&quot;, &quot;AFU99&quot;, &quot;AFU96&quot;, &quot;AFV02&quot;, &quot;AFU97&quot;, &quot;AFV03&quot;, &quot;AFV04&quot;, &quot;AFV01&quot;, &quot;AFV05&quot;, &quot;AFV06&quot;, &quot;AFV07&quot;, &quot;AFV08&quot;, &quot;AFV09&quot;, &quot;AFV10&quot;, &quot;AFV11&quot;, &quot;AFV12&quot;, &quot;AFV14&quot;, &quot;AFV15&quot;, &quot;AFV16&quot;, &quot;AFV17&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(time_point != &quot;0_Wild&quot;)%&gt;% filter(Tube_code != &quot;AD16&quot;) %&gt;% filter(Tube_code != &quot;AD23&quot;) %&gt;% filter(Tube_code != &quot;AD25&quot;) %&gt;% filter(Tube_code != &quot;AD91&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;, &quot;AFU87&quot;, &quot;AFU88&quot;, &quot;AFU91&quot;, &quot;AFU92&quot;, &quot;AFU93&quot;, &quot;AFU94&quot;, &quot;AFU98&quot;, &quot;AFU95&quot;, &quot;AFU99&quot;, &quot;AFU96&quot;, &quot;AFV02&quot;, &quot;AFU97&quot;, &quot;AFV03&quot;, &quot;AFV04&quot;, &quot;AFV01&quot;, &quot;AFV05&quot;, &quot;AFV06&quot;, &quot;AFV07&quot;, &quot;AFV08&quot;, &quot;AFV09&quot;, &quot;AFV10&quot;, &quot;AFV11&quot;, &quot;AFV12&quot;, &quot;AFV14&quot;, &quot;AFV15&quot;, &quot;AFV16&quot;, &quot;AFV17&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) ##Removal of samples of individual LI1_2nd_6 #Counts_raw columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata&lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AFV13&quot;) %&gt;% filter(Tube_code != &quot;AD06&quot;) %&gt;% filter(Tube_code != &quot;AD31&quot;) %&gt;% filter(Tube_code != &quot;AE03&quot;) %&gt;% filter(Tube_code != &quot;AF12&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts&lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV08&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) %&gt;% filter(sample!= &quot;AFU87&quot;) %&gt;% filter(sample!= &quot;AFU88&quot;) %&gt;% filter(sample!= &quot;AFU91&quot;) %&gt;% filter(sample!= &quot;AFU92&quot;) %&gt;% filter(sample!= &quot;AFU93&quot;) %&gt;% filter(sample!= &quot;AFU94&quot;) %&gt;% filter(sample!= &quot;AFU98&quot;) %&gt;% filter(sample!= &quot;AFU95&quot;) %&gt;% filter(sample!= &quot;AFU99&quot;) %&gt;% filter(sample!= &quot;AFU96&quot;) %&gt;% filter(sample!= &quot;AFV02&quot;) %&gt;% filter(sample!= &quot;AFU97&quot;) %&gt;% filter(sample!= &quot;AFV03&quot;) %&gt;% filter(sample!= &quot;AFV04&quot;) %&gt;% filter(sample!= &quot;AFV01&quot;) %&gt;% filter(sample!= &quot;AFV05&quot;) %&gt;% filter(sample!= &quot;AFV06&quot;) %&gt;% filter(sample!= &quot;AFV07&quot;) %&gt;% filter(sample!= &quot;AFV09&quot;) %&gt;% filter(sample!= &quot;AFV10&quot;) %&gt;% filter(sample!= &quot;AFV11&quot;) %&gt;% filter(sample!= &quot;AFV12&quot;) %&gt;% filter(sample!= &quot;AFV14&quot;) %&gt;% filter(sample!= &quot;AFV15&quot;) %&gt;% filter(sample!= &quot;AFV16&quot;) %&gt;% filter(sample!= &quot;AFV17&quot;) %&gt;% filter(sample!= &quot;AFV13&quot;) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats&lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, phylum_colors, data_stats, file = &quot;data/data.Rdata&quot;) save(genome_gifts, file = &quot;data/gifts.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics data_stats$raw_reads %&gt;% sum() [1] 4064677112 data_stats$raw_reads %&gt;% mean() [1] 28827497 data_stats$raw_reads %&gt;% sd() [1] 14079396 3.2 DNA fractions #Overall data_stats %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.448 0.213 data_stats %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% filter(time_point!=&quot;0_Wild&quot;) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% filter(time_point!=&quot;0_Wild&quot;) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, species, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_hwclegobfb2068zooowx, .table th.tinytable_css_hwclegobfb2068zooowx { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_8qnh8ss50afk459jt85z, .table th.tinytable_css_8qnh8ss50afk459jt85z { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample damr time_point species type AC79 1.0000000 1_Acclimation Podarcis_muralis Control AC80 1.0000000 1_Acclimation Podarcis_muralis Treatment AC81 0.9813013 1_Acclimation Podarcis_muralis Treatment AC82 0.7490771 1_Acclimation Podarcis_muralis Treatment AC83 1.0000000 1_Acclimation Podarcis_muralis Control AC84 1.0000000 1_Acclimation Podarcis_muralis Control AC85 0.8363777 1_Acclimation Podarcis_muralis Control AC86 0.8800275 1_Acclimation Podarcis_muralis Control AC87 0.9672854 1_Acclimation Podarcis_muralis Treatment AC88 0.3142108 1_Acclimation Podarcis_muralis Control AC89 0.9338962 1_Acclimation Podarcis_muralis Treatment AC90 1.0000000 1_Acclimation Podarcis_muralis Control AC91 1.0000000 1_Acclimation Podarcis_muralis Control AC92 1.0000000 1_Acclimation Podarcis_muralis Control AC93 1.0000000 1_Acclimation Podarcis_muralis Treatment AC94 0.9159348 1_Acclimation Podarcis_muralis Treatment AC95 0.9239904 1_Acclimation Podarcis_muralis Treatment AC96 0.9425962 1_Acclimation Podarcis_muralis Treatment AC97 0.9394886 1_Acclimation Podarcis_liolepis Hot_control AC98 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AC99 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD01 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD02 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD03 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD04 0.8896057 1_Acclimation Podarcis_liolepis Hot_control AD05 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD07 0.9515379 1_Acclimation Podarcis_liolepis Hot_control AD08 0.7045003 2_Antibiotics Podarcis_muralis Control AD09 1.0000000 2_Antibiotics Podarcis_muralis Control AD10 0.9598720 2_Antibiotics Podarcis_muralis Control AD11 0.6230176 2_Antibiotics Podarcis_muralis Control AD12 0.7487463 2_Antibiotics Podarcis_muralis Control AD13 1.0000000 2_Antibiotics Podarcis_muralis Control AD14 0.4536529 2_Antibiotics Podarcis_muralis Control AD15 1.0000000 2_Antibiotics Podarcis_muralis Control AD17 0.8774871 2_Antibiotics Podarcis_muralis Treatment AD18 0.4991585 2_Antibiotics Podarcis_muralis Treatment AD19 0.4060523 2_Antibiotics Podarcis_muralis Treatment AD20 0.5227482 2_Antibiotics Podarcis_muralis Treatment AD21 0.6551882 2_Antibiotics Podarcis_muralis Treatment AD22 0.9106725 2_Antibiotics Podarcis_muralis Treatment AD24 0.5972915 2_Antibiotics Podarcis_muralis Treatment AD26 0.9204825 2_Antibiotics Podarcis_liolepis Hot_control AD27 0.5215059 2_Antibiotics Podarcis_liolepis Hot_control AD28 0.8180607 2_Antibiotics Podarcis_liolepis Hot_control AD29 0.7175978 2_Antibiotics Podarcis_liolepis Hot_control AD30 0.9937574 2_Antibiotics Podarcis_liolepis Hot_control AD32 0.6710817 2_Antibiotics Podarcis_liolepis Hot_control AD33 0.6778368 2_Antibiotics Podarcis_liolepis Hot_control AD34 0.4642326 2_Antibiotics Podarcis_liolepis Hot_control AD36 0.8288365 3_Transplant1 Podarcis_muralis Control AD37 0.9530848 3_Transplant1 Podarcis_muralis Control AD38 0.9247925 3_Transplant1 Podarcis_muralis Control AD39 1.0000000 3_Transplant1 Podarcis_muralis Control AD40 0.9991552 3_Transplant1 Podarcis_muralis Control AD41 0.9550964 3_Transplant1 Podarcis_muralis Control AD42 1.0000000 3_Transplant1 Podarcis_muralis Control AD43 1.0000000 3_Transplant1 Podarcis_muralis Control AD44 0.9108807 3_Transplant1 Podarcis_muralis Control AD46 0.8708468 3_Transplant1 Podarcis_muralis Treatment AD47 0.8328653 3_Transplant1 Podarcis_muralis Treatment AD49 0.8940294 3_Transplant1 Podarcis_muralis Treatment AD50 0.8757711 3_Transplant1 Podarcis_muralis Treatment AD51 0.8479193 3_Transplant1 Podarcis_muralis Treatment AD52 0.8596870 3_Transplant1 Podarcis_muralis Treatment AD53 0.8528974 3_Transplant1 Podarcis_muralis Treatment AD54 1.0000000 3_Transplant1 Podarcis_liolepis Hot_control AD55 1.0000000 4_Transplant2 Podarcis_muralis Control AD56 0.9327538 4_Transplant2 Podarcis_muralis Control AD57 1.0000000 4_Transplant2 Podarcis_muralis Control AD58 1.0000000 4_Transplant2 Podarcis_muralis Control AD59 1.0000000 4_Transplant2 Podarcis_muralis Control AD60 0.7988844 4_Transplant2 Podarcis_muralis Control AD61 1.0000000 4_Transplant2 Podarcis_muralis Control AD62 1.0000000 4_Transplant2 Podarcis_muralis Control AD63 0.8992048 4_Transplant2 Podarcis_muralis Control AD65 1.0000000 4_Transplant2 Podarcis_muralis Treatment AD66 0.8821027 4_Transplant2 Podarcis_muralis Treatment AD68 0.8820274 4_Transplant2 Podarcis_muralis Treatment AD70 0.9590793 4_Transplant2 Podarcis_muralis Treatment AD71 0.8360540 4_Transplant2 Podarcis_muralis Treatment AD72 0.8835253 4_Transplant2 Podarcis_muralis Treatment AD73 1.0000000 4_Transplant2 Podarcis_liolepis Hot_control AD74 0.9017271 5_Post-FMT1 Podarcis_muralis Control AD75 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD76 0.9862581 5_Post-FMT1 Podarcis_muralis Treatment AD77 0.8963376 5_Post-FMT1 Podarcis_muralis Treatment AD78 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD79 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD80 0.8808155 5_Post-FMT1 Podarcis_muralis Treatment AD81 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD82 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD83 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD84 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD85 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD86 0.9889084 5_Post-FMT1 Podarcis_muralis Control AD87 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD88 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD89 0.9562489 5_Post-FMT1 Podarcis_muralis Control AD90 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD93 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AD94 0.7947750 5_Post-FMT1 Podarcis_liolepis Hot_control AD95 0.9506977 5_Post-FMT1 Podarcis_liolepis Hot_control AD96 0.9171413 5_Post-FMT1 Podarcis_liolepis Hot_control AD97 0.9257685 5_Post-FMT1 Podarcis_liolepis Hot_control AD98 0.9048349 5_Post-FMT1 Podarcis_liolepis Hot_control AD99 0.9966152 5_Post-FMT1 Podarcis_liolepis Hot_control AE01 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE02 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE04 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE05 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE06 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE07 0.7797794 6_Post-FMT2 Podarcis_muralis Control AE08 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE09 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE91 0.9259146 6_Post-FMT2 Podarcis_muralis Treatment AE92 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE93 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE94 0.9152960 6_Post-FMT2 Podarcis_muralis Treatment AE95 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE96 0.7786112 6_Post-FMT2 Podarcis_muralis Treatment AE97 0.9365037 6_Post-FMT2 Podarcis_muralis Control AE98 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE99 0.8513354 6_Post-FMT2 Podarcis_muralis Treatment AF01 0.9046369 6_Post-FMT2 Podarcis_muralis Treatment AF02 1.0000000 6_Post-FMT2 Podarcis_muralis Control AF03 0.9030087 6_Post-FMT2 Podarcis_muralis Treatment AF04 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF05 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF06 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF07 0.9526443 6_Post-FMT2 Podarcis_liolepis Hot_control AF08 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF09 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF10 0.9716162 6_Post-FMT2 Podarcis_liolepis Hot_control AF11 0.9654152 6_Post-FMT2 Podarcis_liolepis Hot_control AF13 0.8818742 6_Post-FMT2 Podarcis_liolepis Hot_control "],["diversity-analysis.html", "Chapter 4 Diversity analysis 4.1 Calculate diversities 4.2 Does the antibiotic administration change the microbial community? 4.3 Does antibiotic administration remove the differences found in the two populations? 4.4 Are the microbial communities similar in both donor samples? 4.5 Does the donor sample maintain the microbial community found in acclimation? 4.6 Is the donor sample microbiota different to recipient microbiota? 4.7 Do FMT change the microbial community compared to antibiotics and acclimation? How constant is it over time? 4.8 Is the gut microbiota similar to the donor after FMT?", " Chapter 4 Diversity analysis load(&quot;data/data.Rdata&quot;) load(&quot;data/gifts.Rdata&quot;) load(&quot;data/beta_19022025.Rdata&quot;) genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% select(where(~ sum(.) &gt; 0)) %&gt;% select(-AC85) %&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) table &lt;- genome_counts_filt %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;) master_table &lt;- sample_metadata %&gt;% mutate(sample=Tube_code) %&gt;% mutate(Tube_code=str_remove_all(Tube_code, &quot;_a&quot;)) %&gt;% filter(Tube_code %in% table$sample) %&gt;% mutate(treatment = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point))%&gt;% left_join(., table, by=join_by(&quot;Tube_code&quot; ==&quot;sample&quot;)) sample_metadata &lt;- master_table %&gt;% select(1:13) genome_counts_filt &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0)))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_counts_filtering &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0))) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) match_data(genome_counts_filtering,genome_tree) genome_metadata &lt;- genome_metadata %&gt;% filter(genome %in% genome_counts_filt$genome) 4.1 Calculate diversities 4.1.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] genome_counts_filt1 &lt;- genome_counts_filt1 %&gt;% remove_rownames() %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% rownames_to_column(., &quot;genome&quot;) dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt1 %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample))%&gt;% full_join(functional, by = join_by(sample == sample)) treatment_colors &lt;- c(&#39;#008080&#39;, &quot;#d57d2c&quot;) 4.1.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) beta_q1f &lt;- genome_counts_filt1 %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) save(beta_q0n, beta_q1n, beta_q1p, beta_q1f, file = &quot;data/beta_19022025.Rdata&quot;) 4.2 Does the antibiotic administration change the microbial community? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;) ) 4.2.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;) ) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(neutral ~ time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.0048) ( log ) Formula: neutral ~ time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 223.7 229.6 -107.9 215.7 28 Scaled residuals: Min 1Q Median 3Q Max -1.4630 -0.6452 -0.1754 0.6566 2.6564 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.07822 0.2797 Number of obs: 32, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 2.9152 0.1558 18.72 &lt; 2e-16 *** time_point2_Antibiotics -0.9432 0.2144 -4.40 1.08e-05 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pnt2_Ant -0.538 Neutral Model_neutral &lt;- lme(fixed = neutral ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 225.017 230.6218 -108.5085 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.238645 7.593502 Fixed effects: neutral ~ time_point Value Std.Error DF t-value p-value (Intercept) 19.29561 2.000903 17 9.643449 0e+00 time_point2_Antibiotics -11.58649 2.716098 13 -4.265859 9e-04 Correlation: (Intr) time_point2_Antibiotics -0.631 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.86139926 -0.51381109 -0.09492589 0.56226694 1.96603543 Number of Observations: 32 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 138.9014 144.5062 -65.45072 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.046827 1.691404 Fixed effects: phylogenetic ~ time_point Value Std.Error DF t-value p-value (Intercept) 5.461590 0.4814205 17 11.344740 0.0000 time_point2_Antibiotics -0.811302 0.6097318 13 -1.330588 0.2062 Correlation: (Intr) time_point2_Antibiotics -0.584 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.65239178 -0.50119332 -0.03450314 0.42332882 1.59503693 Number of Observations: 32 Number of Groups: 18 Functional Model_funct &lt;- lme(fixed = functional ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_funct) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -14.95179 -9.346998 11.47589 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.203543e-06 0.1504954 Fixed effects: functional ~ time_point Value Std.Error DF t-value p-value (Intercept) 1.4855915 0.03650050 17 40.70058 0.0000 time_point2_Antibiotics -0.0344778 0.05331239 13 -0.64671 0.5291 Correlation: (Intr) time_point2_Antibiotics -0.685 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.2430042 -0.5618554 0.2917987 0.6160260 2.0402200 Number of Observations: 32 Number of Groups: 18 4.2.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.013523 0.0135230 2.0312 999 0.17 Residuals 30 0.199726 0.0066575 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_jyd8jw37fydkoqeiaat7, .table th.tinytable_css_jyd8jw37fydkoqeiaat7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_f2qpimkdfw05kh8s67j8, .table th.tinytable_css_f2qpimkdfw05kh8s67j8 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.575038 0.1307754 4.513519 0.001 Residual 30 10.468804 0.8692246 NA NA Total 31 12.043842 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03475 0.034752 2.5153 999 0.105 Residuals 30 0.41450 0.013817 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_rm7rd9gt98gnf4rwfl6w, .table th.tinytable_css_rm7rd9gt98gnf4rwfl6w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_hmifn5teq5rk14iv6aar, .table th.tinytable_css_hmifn5teq5rk14iv6aar { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.778963 0.1605587 5.738054 0.001 Residual 30 9.300869 0.8394413 NA NA Total 31 11.079832 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.31299 0.312989 16.486 999 0.002 ** Residuals 30 0.56954 0.018985 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_t9zwjfzp4plnrnqen1bi, .table th.tinytable_css_t9zwjfzp4plnrnqen1bi { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3x2kzjryxiws16twci5f, .table th.tinytable_css_3x2kzjryxiws16twci5f { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.569966 0.2885492 12.16735 0.001 Residual 30 3.870929 0.7114508 NA NA Total 31 5.440895 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.18537 0.185373 4.9261 999 0.026 * Residuals 30 1.12892 0.037631 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(func ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_p86n0iwo5ycnnxumeebn, .table th.tinytable_css_p86n0iwo5ycnnxumeebn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fofp8rsr9ggg0cyl8qvb, .table th.tinytable_css_fofp8rsr9ggg0cyl8qvb { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.121064 0.361186 16.96203 0.001 Residual 30 1.982777 0.638814 NA NA Total 31 3.103841 1.000000 NA NA 4.2.3 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;1_Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;2_Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,alpha_div_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) structural_zeros %&gt;% tt() .table td.tinytable_css_z49bwdgm9ew3dwcum3hv, .table th.tinytable_css_z49bwdgm9ew3dwcum3hv { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_h21a4bo9gil69w8hpe2k, .table th.tinytable_css_h21a4bo9gil69w8hpe2k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } genome present average domain phylum class order family genus species completeness contamination length gc AH1_2nd_1:bin_000006 acclimation 27.75879344 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Kineothrix s__ 98.52 4.38 4263353 0.44 AH1_2nd_19:bin_000005 acclimation 27.71177237 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Roseburia s__ 96.12 0.16 3941649 0.42 AH1_2nd_11:bin_000008 acclimation 8.50181529 d__Bacteria p__Verrucomicrobiota c__Verrucomicrobiae o__Verrucomicrobiales f__Akkermansiaceae g__Akkermansia s__ 100.00 0.12 3054831 0.58 AH1_2nd_2:bin_000003 acclimation 6.24496505 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__JAAYNV01 s__ 96.26 0.57 3986897 0.46 AH1_2nd_10:bin_000007 acclimation 3.21522080 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__ g__ s__ 97.46 0.68 3552238 0.29 AH1_2nd_15:bin_000043 acclimation 2.91850064 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides s__ 82.13 3.49 4533334 0.42 AH1_2nd_10:bin_000041 acclimation 2.75158113 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Alistipes s__ 90.68 1.49 2640019 0.58 AH1_2nd_8:bin_000007 acclimation 2.55628861 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma s__ 98.69 1.49 3532503 0.36 AH1_2nd_14:bin_000015 acclimation 1.85438812 d__Bacteria p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ 94.79 0.00 2023163 0.36 AH1_2nd_5:bin_000001 acclimation 1.71167839 d__Bacteria p__Bacillota_C c__Negativicutes o__Selenomonadales f__ g__ s__ 97.03 0.81 3258422 0.51 AH1_2nd_15:bin_000002 acclimation 1.66793538 d__Bacteria p__Cyanobacteriota c__Vampirovibrionia o__Gastranaerophilales f__Gastranaerophilaceae g__Limenecus s__ 99.80 0.87 2111746 0.37 AH1_2nd_20:bin_000004 acclimation 1.52084947 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Roseburia s__ 99.98 0.43 3729496 0.42 AH1_2nd_8:bin_000022 acclimation 1.44024933 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__ s__ 99.47 2.79 3703844 0.39 AH1_2nd_17:bin_000010 acclimation 1.38020659 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Mucinivorans s__ 98.11 0.06 2365004 0.44 AH1_2nd_6:bin_000046 acclimation 1.33290582 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides s__ 95.51 0.00 4060997 0.47 AH1_2nd_5:bin_000054 acclimation 1.29639353 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides s__ 86.35 3.24 5336241 0.43 AH1_2nd_10:bin_000060 acclimation 1.28282841 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__Rickettsiales f__UBA1997 g__ s__ 75.68 2.72 1622419 0.36 AH1_2nd_17:bin_000038 acclimation 1.28019976 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides_G s__ 88.02 3.29 4258067 0.40 AH1_2nd_1:bin_000015 acclimation 1.21746006 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__MGBC136627 s__ 96.63 0.56 3882618 0.33 LI1_2nd_8:bin_000016 acclimation 1.18518665 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Rikenella s__ 96.02 1.33 2860577 0.56 AH1_2nd_14:bin_000005 acclimation 1.15899229 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__ s__ 97.06 0.82 3930509 0.30 AH1_2nd_5:bin_000023 acclimation 1.11830476 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Blautia s__ 99.92 4.00 4954971 0.45 AH1_2nd_8:bin_000051 acclimation 1.11249813 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides s__ 88.60 4.84 5370013 0.42 AH1_2nd_1:bin_000005 acclimation 1.10160011 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__ s__ 99.98 0.17 3566889 0.47 AH1_2nd_11:bin_000009 acclimation 1.07752841 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__RF32 f__CAG-239 g__Scatocola s__ 100.00 1.76 1849363 0.41 AH1_2nd_12:bin_000015 acclimation 1.01566394 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales f__Coprobacillaceae g__Thomasclavelia s__ 100.00 7.76 3794096 0.31 AH1_2nd_1:bin_000001 acclimation 0.90620923 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Tannerellaceae g__Parabacteroides_B s__ 99.56 1.94 4534617 0.51 AH1_2nd_16:bin_000008 acclimation 0.83988056 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__ g__ s__ 98.39 0.14 3874322 0.28 AH1_2nd_18:bin_000039 acclimation 0.81515406 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Alistipes s__ 83.02 4.91 3438621 0.59 LI1_2nd_3:bin_000007 acclimation 0.78321588 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__C-19 s__ 99.84 1.24 3665262 0.36 LI1_2nd_4:bin_000052 acclimation 0.78020775 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Enterocloster s__ 99.08 1.72 5024759 0.48 AH1_2nd_8:bin_000056 acclimation 0.73744989 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides s__ 99.86 6.93 6187276 0.43 AH1_2nd_11:bin_000005 acclimation 0.73319384 d__Bacteria p__Fusobacteriota c__Fusobacteriia o__Fusobacteriales f__Fusobacteriaceae g__Fusobacterium_A s__Fusobacterium_A ulcerans 100.00 0.42 3475684 0.30 AH1_2nd_15:bin_000009 acclimation 0.67106966 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Acetatifactor s__ 99.88 1.83 4195409 0.51 AH1_2nd_10:bin_000044 acclimation 0.67036743 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Enterocloster s__ 88.86 0.53 3623272 0.48 AH1_2nd_13:bin_000011 acclimation 0.66796030 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__RF32 f__CAG-239 g__MGBC133411 s__ 100.00 0.29 1970221 0.43 AH1_2nd_19:bin_000067 acclimation 0.65368249 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides s__Bacteroides ovatus 84.28 7.85 6489524 0.41 LI1_2nd_7:bin_000051 acclimation 0.62672151 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__RGIG4733 s__ 100.00 0.63 4263926 0.43 AH1_2nd_20:bin_000014 acclimation 0.61613264 d__Bacteria p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Citrobacter s__Citrobacter portucalensis 100.00 5.12 5058331 0.52 LI1_2nd_8:bin_000079 acclimation 0.58022986 d__Bacteria p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Citrobacter_A s__Citrobacter_A amalonaticus 86.68 2.66 4365567 0.54 LI1_2nd_7:bin_000074 acclimation 0.56672494 d__Bacteria p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Escherichia s__Escherichia coli 85.29 2.53 4218869 0.51 AH1_2nd_15:bin_000013 acclimation 0.56329192 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Ventrimonas s__ 94.68 4.13 3982738 0.49 LI1_2nd_9:bin_000032 acclimation 0.50410785 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__RF32 f__CAG-239 g__CAZU01 s__ 84.85 3.18 1480478 0.42 AH1_2nd_12:bin_000063 acclimation 0.48236904 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__CHH4-2 s__ 72.15 2.05 3506133 0.42 AH1_2nd_1:bin_000048 acclimation 0.48225233 d__Bacteria p__Bacillota_A c__Clostridia o__Peptostreptococcales f__Anaerovoracaceae g__ s__ 84.38 2.52 3101586 0.52 AH1_2nd_17:bin_000040 acclimation 0.47481021 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__C-19 s__ 82.56 3.61 2775338 0.39 LI1_2nd_4:bin_000041 acclimation 0.46780390 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Clostridium_Q s__ 82.29 2.43 3468101 0.46 LI1_2nd_3:bin_000003 acclimation 0.44520833 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Alistipes s__ 96.30 0.42 3386630 0.60 AH1_2nd_17:bin_000029 acclimation 0.43761029 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__NSJ-61 s__ 100.00 5.48 4195312 0.38 AH1_2nd_19:bin_000024 acclimation 0.42156365 d__Bacteria p__Cyanobacteriota c__Vampirovibrionia o__Gastranaerophilales f__Gastranaerophilaceae g__Limenecus s__ 98.20 2.44 2022010 0.35 AH1_2nd_16:bin_000058 acclimation 0.37432838 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Enterocloster s__ 90.40 6.25 5045955 0.49 AH1_2nd_18:bin_000033 acclimation 0.36815682 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales f__Coprobacillaceae g__Beduini s__ 88.03 8.19 2804064 0.34 AH1_2nd_19:bin_000032 acclimation 0.29609247 d__Bacteria p__Verrucomicrobiota c__Verrucomicrobiae o__Verrucomicrobiales f__Akkermansiaceae g__Akkermansia s__ 99.23 0.22 2810221 0.58 AH1_2nd_12:bin_000019 acclimation 0.29188613 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__ s__ 94.31 3.04 4012826 0.38 AH1_2nd_14:bin_000014 acclimation 0.24438523 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales f__Oscillospiraceae g__Marseille-P3106 s__ 100.00 3.89 2967398 0.63 AH1_2nd_7:bin_000010 acclimation 0.22270400 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__RF32 f__CAG-239 g__CAJLXD01 s__ 99.70 0.09 1948313 0.38 AH1_2nd_11:bin_000028 acclimation 0.21922430 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides s__ 88.14 0.38 4860292 0.45 AH1_2nd_10:bin_000025 acclimation 0.21912044 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__ g__ s__ 97.43 0.00 2960016 0.29 AH1_2nd_19:bin_000053 acclimation 0.17721142 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__CAG-56 s__ 83.11 3.66 3763650 0.44 LI1_2nd_7:bin_000009 acclimation 0.17526817 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales f__Ruminococcaceae g__Anaerotruncus s__ 96.58 2.03 3886582 0.53 LI1_2nd_4:bin_000045 acclimation 0.17101038 d__Bacteria p__Bacillota_A c__Clostridia o__Peptostreptococcales f__Anaerovoracaceae g__IOR16 s__ 83.46 0.03 1971707 0.48 AH1_2nd_5:bin_000037 acclimation 0.17070089 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales f__Oscillospiraceae g__Pseudoflavonifractor s__ 93.35 7.74 3923478 0.58 AH1_2nd_16:bin_000044 acclimation 0.16324929 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Anaerotignaceae g__ s__ 86.49 3.08 2566861 0.31 AH1_2nd_10:bin_000040 acclimation 0.15436421 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales f__Ruminococcaceae g__UBA866 s__ 87.07 3.23 2918899 0.42 AH1_2nd_17:bin_000015 acclimation 0.14334537 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__ s__ 94.91 5.75 3661129 0.40 AH1_2nd_14:bin_000027 acclimation 0.13283754 d__Bacteria p__Bacillota_A c__Clostridia o__Peptostreptococcales f__Anaerovoracaceae g__Emergencia s__ 90.45 3.33 3418882 0.45 AH1_2nd_9:bin_000035 acclimation 0.12396799 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Acetatifactor s__ 94.87 2.52 4469702 0.42 AH1_2nd_17:bin_000019 acclimation 0.11193753 d__Bacteria p__Bacillota_A c__Clostridia o__TANB77 f__CAG-508 g__RGIG8482 s__ 97.13 1.43 1712641 0.29 AH1_2nd_13:bin_000050 acclimation 0.10620904 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales f__Ruminococcaceae g__ s__ 83.17 3.78 2378744 0.47 AH1_2nd_5:bin_000005 acclimation 0.10311747 d__Bacteria p__Bacillota_B c__Peptococcia o__Peptococcales f__Peptococcaceae g__UBA7185 s__ 95.28 4.13 5234436 0.38 AH1_2nd_19:bin_000017 acclimation 0.08487977 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Caccomorpha s__ 92.81 4.49 5611813 0.47 AH1_2nd_19:bin_000072 acclimation 0.08045243 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__ s__ 72.81 6.04 2872249 0.45 LI1_2nd_7:bin_000012 acclimation 0.07841209 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Alistipes s__ 99.56 0.13 2744437 0.56 LI1_2nd_3:bin_000017 acclimation 0.06846687 d__Bacteria p__Bacillota_A c__Clostridia o__TANB77 f__CAG-508 g__CAG-269 s__ 94.80 4.40 1837342 0.29 LI1_2nd_7:bin_000078 acclimation 0.05767633 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Copromonas s__ 73.54 2.35 2955642 0.51 AH1_2nd_7:bin_000060 acclimation 0.05665528 d__Bacteria p__Bacillota_A c__Clostridia o__Eubacteriales f__Eubacteriaceae g__Eubacterium s__ 76.97 3.70 2907989 0.48 AH1_2nd_9:bin_000025 acclimation 0.04208107 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Velocimicrobium s__ 93.42 0.60 4247683 0.33 AH1_2nd_10:bin_000018 acclimation 0.04185084 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__MGBC140009 s__ 96.23 3.71 4232890 0.38 AH1_2nd_12:bin_000059 acclimation 0.04102704 d__Bacteria p__Cyanobacteriota c__Vampirovibrionia o__Gastranaerophilales f__Gastranaerophilaceae g__Limenecus s__ 78.26 1.60 1763328 0.37 AH1_2nd_16:bin_000011 acclimation 0.04096622 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales f__Anaerotignaceae g__ s__ 92.48 0.36 3276013 0.31 AH1_2nd_7:bin_000070 acclimation 0.03870077 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales f__Oscillospiraceae g__Pseudoflavonifractor s__ 78.05 3.55 3014076 0.63 LI1_2nd_7:bin_000045 acclimation 0.03759769 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales f__Acutalibacteraceae g__ s__ 84.40 3.37 3230173 0.48 AH1_2nd_7:bin_000003 antibiotics 13.76900277 d__Bacteria p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 100.00 0.04 3949883 0.38 LI1_2nd_7:bin_000001 antibiotics 4.74525893 d__Bacteria p__Bacillota_A c__Clostridia o__Clostridiales f__Clostridiaceae g__Sarcina s__ 98.33 1.37 3938038 0.28 AH1_2nd_7:bin_000055 antibiotics 0.66198083 d__Bacteria p__Bacillota c__Bacilli o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma s__ 91.57 0.15 923350 0.28 AH1_2nd_13:bin_000025 antibiotics 0.15215953 d__Bacteria p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ 96.82 0.00 2030500 0.41 phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) set.seed(1234) #set seed for reproducibility ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_antib_accl.Rdata&quot;) load(&quot;data/ancombc_antib_accl.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_time_point2_Antibiotics, p_time_point2_Antibiotics) %&gt;% filter(p_time_point2_Antibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_point2_Antibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point2_Antibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point2_Antibiotics, y=forcats::fct_reorder(genome,lfc_time_point2_Antibiotics), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) 4.3 Does antibiotic administration remove the differences found in the two populations? 4.3.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point == &quot;2_Antibiotics&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(time_point == &quot;2_Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.3.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;2_Antibiotics&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;2_Antibiotics&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.015319 0.0153186 6.8764 999 0.021 * Residuals 21 0.046782 0.0022277 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_q8fyphkm3x1gnqgz8xnc, .table th.tinytable_css_q8fyphkm3x1gnqgz8xnc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_59oj13ommmuwfxgo471z, .table th.tinytable_css_59oj13ommmuwfxgo471z { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.356644 0.1527052 3.784762 0.001 Residual 21 7.527428 0.8472948 NA NA Total 22 8.884073 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.030536 0.0305358 3.8593 999 0.061 . Residuals 21 0.166158 0.0079123 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tkdn636se38sj3w7ot6v, .table th.tinytable_css_tkdn636se38sj3w7ot6v { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8ebtzzckmc6c5xwp2u9y, .table th.tinytable_css_8ebtzzckmc6c5xwp2u9y { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.785669 0.2085055 5.532084 0.001 Residual 21 6.778468 0.7914945 NA NA Total 22 8.564137 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.012041 0.012041 0.9898 999 0.332 Residuals 21 0.255459 0.012165 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_kadhlmcjax4xzcgnsk93, .table th.tinytable_css_kadhlmcjax4xzcgnsk93 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_exvkmem8nh2wa1yl8w9w, .table th.tinytable_css_exvkmem8nh2wa1yl8w9w { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.8963254 0.1888758 4.889993 0.001 Residual 21 3.8492558 0.8111242 NA NA Total 22 4.7455811 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01804 0.018038 0.439 999 0.495 Residuals 21 0.86285 0.041088 adonis2(func ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_r20ha8rplf6c2gct90rl, .table th.tinytable_css_r20ha8rplf6c2gct90rl { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_310jdvdkl2n7n2wu67er, .table th.tinytable_css_310jdvdkl2n7n2wu67er { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.0184644 0.0098378 0.2086464 0.704 Residual 21 1.8584184 0.9901622 NA NA Total 22 1.8768828 1.0000000 NA NA 4.4 Are the microbial communities similar in both donor samples? samples_to_keep &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;3_Transplant1&quot;, &quot;4_Transplant2&quot;))%&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;3_Transplant1&quot;, &quot;4_Transplant2&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;3_Transplant1&quot;, &quot;4_Transplant2&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000151 0.0001514 0.0181 999 0.905 Residuals 13 0.108675 0.0083596 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zdbqersh8viw3yzeba44, .table th.tinytable_css_zdbqersh8viw3yzeba44 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_p2l9gmdsfe2qxsqsl5u7, .table th.tinytable_css_p2l9gmdsfe2qxsqsl5u7 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.06781753 0.02960432 0.3965972 0.979 Residual 13 2.22298047 0.97039568 NA NA Total 14 2.29079799 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00067 0.0006698 0.0523 999 0.801 Residuals 13 0.16645 0.0128035 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_h4xfp2iipbgt6eg3c96t, .table th.tinytable_css_h4xfp2iipbgt6eg3c96t { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_dsce3qnfapdzclv6j2ia, .table th.tinytable_css_dsce3qnfapdzclv6j2ia { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.09261373 0.03872219 0.523666 0.804 Residual 13 2.29913452 0.96127781 NA NA Total 14 2.39174825 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00371 0.0037095 0.3076 999 0.635 Residuals 13 0.15676 0.0120588 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_sbzncpp0ospfkad8ou37, .table th.tinytable_css_sbzncpp0ospfkad8ou37 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_aeqjd9usgly4f0651l3j, .table th.tinytable_css_aeqjd9usgly4f0651l3j { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.009763176 0.01920889 0.2546063 0.853 Residual 13 0.498500276 0.98079111 NA NA Total 14 0.508263452 1.00000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.013298 0.0132975 1.5346 999 0.217 Residuals 13 0.112644 0.0086649 adonis2(func ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_y0ccv8y4mncx2kyiqapo, .table th.tinytable_css_y0ccv8y4mncx2kyiqapo { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9walsvcgtjvuka95ppcx, .table th.tinytable_css_9walsvcgtjvuka95ppcx { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 -0.003102642 -0.01647707 -0.2107297 0.812 Residual 13 0.191403206 1.01647707 NA NA Total 14 0.188300564 1.00000000 NA NA 4.5 Does the donor sample maintain the microbial community found in acclimation? sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Transplant1&quot;, &quot;Transplant2&quot;) ~ &quot;Transplant&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.008956 0.0089559 1.5113 999 0.272 Residuals 22 0.130368 0.0059258 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_i2vmcepibsunvc6zswzk, .table th.tinytable_css_i2vmcepibsunvc6zswzk { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_fj4zaazm9n28gbcud0pt, .table th.tinytable_css_fj4zaazm9n28gbcud0pt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2644898 0.06349573 1.491617 0.103 Residual 22 3.9009835 0.93650427 NA NA Total 23 4.1654732 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000794 0.0007940 0.0884 999 0.798 Residuals 22 0.197689 0.0089859 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_meqo745scz553davulof, .table th.tinytable_css_meqo745scz553davulof { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_56toc0gp98rosf6l61bq, .table th.tinytable_css_56toc0gp98rosf6l61bq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3163831 0.07591112 1.807234 0.059 Residual 22 3.8514266 0.92408888 NA NA Total 23 4.1678097 1.00000000 NA NA neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;Cold_wet&quot; = &quot;Cold wet&quot;, &quot;Hot_dry&quot; = &quot;Hot dry&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Phylogenetic set.seed(1802) phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002011 0.0020114 0.2582 999 0.688 Residuals 22 0.171393 0.0077906 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_uk2gw2mnusyb7rzzn06z, .table th.tinytable_css_uk2gw2mnusyb7rzzn06z { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ifs2hux51yxqjoyqhz5e, .table th.tinytable_css_ifs2hux51yxqjoyqhz5e { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.0409768 0.05601243 1.305392 0.275 Residual 22 0.6905894 0.94398757 NA NA Total 23 0.7315662 1.00000000 NA NA phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;Cold_wet&quot; = &quot;Cold wet&quot;, &quot;Hot_dry&quot; = &quot;Hot dry&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000522 0.0005217 0.052 999 0.842 Residuals 22 0.220603 0.0100274 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tn2hzdkspb616cdud5lz, .table th.tinytable_css_tn2hzdkspb616cdud5lz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_e6jd9unuhh0lijs43inb, .table th.tinytable_css_e6jd9unuhh0lijs43inb { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.08891682 0.2161114 6.065212 0.051 Residual 22 0.32252296 0.7838886 NA NA Total 23 0.41143978 1.0000000 NA NA func %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;Cold_wet&quot; = &quot;Cold wet&quot;, &quot;Hot_dry&quot; = &quot;Hot dry&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) 4.6 Is the donor sample microbiota different to recipient microbiota? samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.12878 0.128776 13.013 999 0.001 *** Residuals 20 0.19792 0.009896 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_maqvw24zuo6zvo0e8xn8, .table th.tinytable_css_maqvw24zuo6zvo0e8xn8 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_aasy3cwhw3oji0hzi3f0, .table th.tinytable_css_aasy3cwhw3oji0hzi3f0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.76810 0.2746704 7.573672 0.001 Residual 20 4.66907 0.7253296 NA NA Total 21 6.43717 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.071939 0.071939 5.5113 999 0.035 * Residuals 20 0.261057 0.013053 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_5vbzrhydnunuennuib7o, .table th.tinytable_css_5vbzrhydnunuennuib7o { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_06tr4mplqgs75w1rl8oq, .table th.tinytable_css_06tr4mplqgs75w1rl8oq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 2.109391 0.3208221 9.447366 0.001 Residual 20 4.465565 0.6791779 NA NA Total 21 6.574956 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04724 0.047241 2.6056 999 0.13 Residuals 20 0.36261 0.018131 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_bjq3o0864tld1tmhor48, .table th.tinytable_css_bjq3o0864tld1tmhor48 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_78zbued9mn366fnns9vx, .table th.tinytable_css_78zbued9mn366fnns9vx { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3764016 0.2391132 6.285119 0.001 Residual 20 1.1977547 0.7608868 NA NA Total 21 1.5741563 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000158 0.0001578 0.0131 999 0.903 Residuals 20 0.240836 0.0120418 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_toe1hu8z8kwjzeotvtbz, .table th.tinytable_css_toe1hu8z8kwjzeotvtbz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_peqk9vspmg5mizvmi1gf, .table th.tinytable_css_peqk9vspmg5mizvmi1gf { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.07897425 0.1809165 4.417536 0.071 Residual 20 0.35754884 0.8190835 NA NA Total 21 0.43652308 1.0000000 NA NA 4.7 Do FMT change the microbial community compared to antibiotics and acclimation? How constant is it over time? 4.7.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Post-FMT1&quot;,&quot;Post-FMT2&quot;, &quot;Antibiotics&quot;, &quot;Acclimation&quot;) ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;Post-FMT1&quot;, &quot;Post-FMT2&quot; )) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + # scale_color_manual(values=treatment_colors)+ # scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Model_rich &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) #summary(Model_rich) emmeans(Model_rich, pairwise ~ treatment) $emmeans treatment emmean SE df asymp.LCL asymp.UCL Acclimation 3.75 0.221 Inf 3.32 4.18 Antibiotics 2.71 0.269 Inf 2.19 3.24 Post-FMT1 3.91 0.232 Inf 3.45 4.36 Post-FMT2 4.34 0.215 Inf 3.92 4.76 Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - Antibiotics 1.036 0.309 Inf 3.357 0.0044 Acclimation - (Post-FMT1) -0.158 0.284 Inf -0.557 0.9447 Acclimation - (Post-FMT2) -0.593 0.272 Inf -2.183 0.1280 Antibiotics - (Post-FMT1) -1.194 0.325 Inf -3.676 0.0014 Antibiotics - (Post-FMT2) -1.629 0.312 Inf -5.217 &lt;.0001 (Post-FMT1) - (Post-FMT2) -0.435 0.281 Inf -1.550 0.4078 Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 4 estimates Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_neutral) emmeans(Model_neutral, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 17.4 3.41 8 9.53 25.3 Antibiotics 8.4 3.84 8 -0.45 17.3 Post-FMT1 24.7 3.61 8 16.35 33.0 Post-FMT2 39.9 3.41 8 32.01 47.8 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 9.00 4.67 21 1.925 0.2480 Acclimation - (Post-FMT1) -7.27 4.48 21 -1.621 0.3888 Acclimation - (Post-FMT2) -22.48 4.33 21 -5.192 0.0002 Antibiotics - (Post-FMT1) -16.27 4.78 21 -3.406 0.0131 Antibiotics - (Post-FMT2) -31.48 4.67 21 -6.737 &lt;.0001 (Post-FMT1) - (Post-FMT2) -15.21 4.48 21 -3.392 0.0135 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_phylo) emmeans(Model_phylo, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 5.56 0.496 8 4.42 6.70 Antibiotics 4.29 0.557 8 3.01 5.57 Post-FMT1 4.16 0.524 8 2.95 5.37 Post-FMT2 5.13 0.496 8 3.99 6.28 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 1.271 0.671 21 1.895 0.2604 Acclimation - (Post-FMT1) 1.400 0.644 21 2.175 0.1629 Acclimation - (Post-FMT2) 0.428 0.621 21 0.689 0.9002 Antibiotics - (Post-FMT1) 0.129 0.686 21 0.188 0.9976 Antibiotics - (Post-FMT2) -0.843 0.671 21 -1.257 0.5992 (Post-FMT1) - (Post-FMT2) -0.972 0.644 21 -1.510 0.4493 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Functional Model_funct &lt;- lme(fixed = functional ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_funct) emmeans(Model_funct, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 1.49 0.0395 8 1.40 1.59 Antibiotics 1.47 0.0448 8 1.37 1.57 Post-FMT1 1.49 0.0419 8 1.39 1.59 Post-FMT2 1.52 0.0395 8 1.43 1.61 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 0.02516 0.0597 21 0.422 0.9742 Acclimation - (Post-FMT1) 0.00591 0.0575 21 0.103 0.9996 Acclimation - (Post-FMT2) -0.02596 0.0558 21 -0.465 0.9659 Antibiotics - (Post-FMT1) -0.01924 0.0613 21 -0.314 0.9890 Antibiotics - (Post-FMT2) -0.05112 0.0597 21 -0.857 0.8267 (Post-FMT1) - (Post-FMT2) -0.03187 0.0575 21 -0.554 0.9444 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates 4.7.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.066688 0.0222294 3.5119 999 0.023 * Residuals 29 0.183562 0.0063297 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_vn2tj06honc50sp0zivl, .table th.tinytable_css_vn2tj06honc50sp0zivl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_uw96rawdw1n293j7vu5h, .table th.tinytable_css_uw96rawdw1n293j7vu5h { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 2.638336 0.222986 2.774122 0.001 Residual 29 9.193509 0.777014 NA NA Total 32 11.831845 1.000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8277738 2.288600 0.14050317 0.005 0.030 . 2 Acclimation vs Post-FMT1 1 0.9551308 2.926054 0.16322910 0.001 0.006 * 3 Acclimation vs Post-FMT2 1 0.9130048 3.195028 0.16645080 0.001 0.006 * 4 Antibiotics vs Post-FMT1 1 0.9744543 2.741152 0.17413921 0.002 0.012 . 5 Antibiotics vs Post-FMT2 1 1.2788256 4.166364 0.22934497 0.001 0.006 * 6 Post-FMT1 vs Post-FMT2 1 0.3571397 1.297184 0.07959561 0.127 0.762 Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.06002 0.020006 1.4521 999 0.251 Residuals 29 0.39953 0.013777 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ozraimzyynyqpq50l46w, .table th.tinytable_css_ozraimzyynyqpq50l46w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ihsa9d6w3afaemquccm9, .table th.tinytable_css_ihsa9d6w3afaemquccm9 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 3.354821 0.2937215 4.020096 0.001 Residual 29 8.066956 0.7062785 NA NA Total 32 11.421777 1.0000000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8812272 2.745592 0.16395907 0.001 0.006 * 2 Acclimation vs Post-FMT1 1 1.3127773 4.629826 0.23585668 0.002 0.012 . 3 Acclimation vs Post-FMT2 1 1.3540292 5.339808 0.25022756 0.001 0.006 * 4 Antibiotics vs Post-FMT1 1 1.3423457 4.351968 0.25080544 0.002 0.012 . 5 Antibiotics vs Post-FMT2 1 1.5260945 5.602201 0.28579449 0.001 0.006 * 6 Post-FMT1 vs Post-FMT2 1 0.3157079 1.325203 0.08117526 0.147 0.882 Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.26803 0.089344 3.9191 999 0.016 * Residuals 29 0.66110 0.022797 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tsff532tfmt2b5lqj4pd, .table th.tinytable_css_tsff532tfmt2b5lqj4pd { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_rcunixmzwkp96tdf01f9, .table th.tinytable_css_rcunixmzwkp96tdf01f9 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 1.819254 0.4217852 7.051459 0.001 Residual 29 2.493969 0.5782148 NA NA Total 32 4.313223 1.0000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.68913759 5.128491 0.26810744 0.003 0.018 . 2 Acclimation vs Post-FMT1 1 0.25319427 3.273842 0.17915456 0.040 0.240 3 Acclimation vs Post-FMT2 1 0.36496892 6.396667 0.28560797 0.003 0.018 . 4 Antibiotics vs Post-FMT1 1 1.09964666 9.041595 0.41020603 0.002 0.012 . 5 Antibiotics vs Post-FMT2 1 1.28461415 13.482814 0.49059075 0.001 0.006 * 6 Post-FMT1 vs Post-FMT2 1 0.06393539 1.565182 0.09448624 0.132 0.792 Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.26539 0.088463 3.8331 999 0.014 * Residuals 29 0.66929 0.023079 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ieyb97hk5airjoby0nii, .table th.tinytable_css_ieyb97hk5airjoby0nii { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_hmy68km8vjj8wtsefvah, .table th.tinytable_css_hmy68km8vjj8wtsefvah { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 1.779946 0.5628148 12.44448 0.001 Residual 29 1.382632 0.4371852 NA NA Total 32 3.162577 1.0000000 NA NA pairwise.adonis(func, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 1.1123837625 14.78947708 0.51371121 0.004 0.024 . 2 Acclimation vs Post-FMT1 1 0.0591116405 2.62423643 0.14889930 0.157 0.942 3 Acclimation vs Post-FMT2 1 -0.0004937446 -0.02388892 -0.00149529 0.741 1.000 4 Antibiotics vs Post-FMT1 1 1.3646461126 16.86448803 0.56470039 0.001 0.006 * 5 Antibiotics vs Post-FMT2 1 1.1870014471 15.90617444 0.53186925 0.001 0.006 * 6 Post-FMT1 vs Post-FMT2 1 0.0283727135 1.29112315 0.07925317 0.297 1.000 4.8 Is the gut microbiota similar to the donor after FMT? sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.11342 0.113420 11.957 999 0.001 *** Residuals 28 0.26559 0.009485 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_st7806b3rxudjop7aqj4, .table th.tinytable_css_st7806b3rxudjop7aqj4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ks8hqxph2z8jgf38sfh1, .table th.tinytable_css_ks8hqxph2z8jgf38sfh1 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.182046 0.154139 5.102365 0.001 Residual 28 6.486654 0.845861 NA NA Total 29 7.668700 1.000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Transplant vs FMT 1 1.182046 5.102365 0.154139 0.001 0.001 ** Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04487 0.044865 3.2331 999 0.078 . Residuals 28 0.38855 0.013877 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_l5k1ql6sy7kgp02wybcj, .table th.tinytable_css_l5k1ql6sy7kgp02wybcj { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_bsylqgmb2svkjd2rxa2o, .table th.tinytable_css_bsylqgmb2svkjd2rxa2o { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.146508 0.1607364 5.362581 0.001 Residual 28 5.986340 0.8392636 NA NA Total 29 7.132848 1.0000000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Transplant vs FMT 1 1.146508 5.362581 0.1607364 0.001 0.001 ** neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + # scale_color_manual(values = treatment_colors) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00008 0.0000787 0.005 999 0.939 Residuals 28 0.43669 0.0155959 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_noc2a63iemj73blrp6fl, .table th.tinytable_css_noc2a63iemj73blrp6fl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_c9z5l14435vbmzgcodxw, .table th.tinytable_css_c9z5l14435vbmzgcodxw { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.1296962 0.1018031 3.173567 0.002 Residual 28 1.1442941 0.8981969 NA NA Total 29 1.2739903 1.0000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Transplant vs FMT 1 0.1296962 3.173567 0.1018031 0.008 0.008 * Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00120 0.001202 0.1035 999 0.755 Residuals 28 0.32533 0.011619 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_mf34nd44ibpxqt4ers2d, .table th.tinytable_css_mf34nd44ibpxqt4ers2d { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_dsnus0ts4vc5r64ag2lt, .table th.tinytable_css_dsnus0ts4vc5r64ag2lt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.01544812 0.02751097 0.7920986 0.494 Residual 28 0.54607759 0.97248903 NA NA Total 29 0.56152571 1.00000000 NA NA pairwise.adonis(func, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Transplant vs FMT 1 0.01544812 0.7920986 0.02751097 0.378 0.378 4.8.1 Structural zeros FMT_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment == &quot;FMT&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() Transplant_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment ==&quot;Transplant&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_FMT = all(c_across(all_of(FMT_samples)) == 0)) %&gt;% mutate(all_zeros_Transplant = all(c_across(all_of(Transplant_samples)) == 0)) %&gt;% mutate(average_FMT = mean(c_across(all_of(FMT_samples)), na.rm = TRUE)) %&gt;% mutate(average_Transplant = mean(c_across(all_of(Transplant_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_FMT == TRUE || all_zeros_Transplant==TRUE) %&gt;% mutate(present = case_when( all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;Transplant&quot;, !all_zeros_FMT &amp; all_zeros_Transplant ~ &quot;FMT&quot;, !all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;FMT&quot;, average_FMT, average_Transplant)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) structural_zeros # A tibble: 107 × 14 # Rowwise: genome present average domain phylum class order family genus species completeness contamination length gc &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 AH1_2nd_20:bin_000073 FMT 25.2 d__Bacteria p__Bacillota c__Bacilli o__Lactobacil… f__En… g__E… s__Ent… 89.7 6.13 3.39e6 0.37 2 AH1_2nd_14:bin_000015 FMT 9.91 d__Bacteria p__Bacillota_A c__Clostridia o__Christense… f__UB… g__ s__ 94.8 0 2.02e6 0.36 3 AH1_2nd_12:bin_000041 FMT 8.46 d__Bacteria p__Bacillota c__Bacilli o__Mycoplasma… f__My… g__M… s__ 92.6 0.18 1.01e6 0.27 4 AH1_2nd_15:bin_000001 FMT 7.47 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__Rhizobiales f__Rh… g__A… s__Agr… 100 0.07 5.03e6 0.59 5 AH1_2nd_15:bin_000009 FMT 4.10 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospir… f__La… g__A… s__ 99.9 1.83 4.20e6 0.51 6 AH1_2nd_8:bin_000027 FMT 3.53 d__Bacteria p__Bacillota c__Bacilli o__Erysipelot… f__Er… g__N… s__ 100 8.32 4.06e6 0.38 7 LI1_2nd_2:bin_000019 FMT 3.53 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospir… f__La… g__L… s__ 91.9 0.74 5.33e6 0.45 8 AH1_2nd_19:bin_000052 FMT 2.56 d__Bacteria p__Verrucomicrobiota c__Verrucomicrobiae o__Opitutales f__LL… g__ s__ 92.8 0 8.89e5 0.53 9 AH1_2nd_8:bin_000020 FMT 2.30 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__RUG11792 f__RU… g__ s__ 99.6 0 8.93e5 0.36 10 AH1_2nd_7:bin_000003 FMT 2.17 d__Bacteria p__Pseudomonadota c__Gammaproteobacteria o__Enterobact… f__En… g__P… s__Pro… 100 0.04 3.95e6 0.38 # ℹ 97 more rows 4.8.2 Differential abundance analysis phylo_samples &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) set.seed(1234) #set seed for reproducibility ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_FMT_transplant.Rdata&quot;) load(&quot;data/ancombc_FMT_transplant.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_treatmentTransplant, p_treatmentTransplant) %&gt;% filter(p_treatmentTransplant &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentTransplant) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_treatmentTransplant) ancombc_rand_table_mag taxon lfc_treatmentTransplant p_treatmentTransplant domain phylum class order family 1 AH1_2nd_1:bin_000028 -4.0276680 1.069818e-04 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rickettsiales UBA1997 2 AH1_2nd_10:bin_000009 -2.2825050 1.130260e-03 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 3 AH1_2nd_12:bin_000007 -2.1539175 1.902787e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 4 AH1_2nd_12:bin_000012 -2.0738142 3.946881e-04 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 5 LI1_2nd_8:bin_000079 -1.9471416 6.589350e-03 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 6 AH1_2nd_7:bin_000004 -1.9080983 8.058189e-04 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 7 AH1_2nd_1:bin_000023 -1.6181614 1.552592e-04 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 8 AH1_2nd_2:bin_000017 -1.4791503 6.057284e-04 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 9 AH1_2nd_16:bin_000025 -1.3941589 1.341472e-03 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 10 AH1_2nd_19:bin_000067 -1.3587830 1.150520e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 11 LI1_2nd_9:bin_000007 -1.2995379 5.627180e-03 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 12 AH1_2nd_13:bin_000025 -1.2309793 2.337042e-03 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 13 AH1_2nd_16:bin_000064 -1.2140746 3.078729e-03 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 14 AH1_2nd_20:bin_000037 -1.1776093 3.087313e-02 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 15 AH1_2nd_5:bin_000023 -1.1752283 1.515698e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 16 AH1_2nd_12:bin_000009 -1.0553692 2.836495e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 17 AH1_2nd_7:bin_000055 -1.0387339 3.370441e-03 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 18 AH1_2nd_10:bin_000097 -1.0048233 8.611082e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 19 AH1_2nd_2:bin_000001 -1.0017253 8.002862e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 20 LI1_2nd_9:bin_000002 -0.9921023 2.413193e-02 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 21 LI1_2nd_7:bin_000033 -0.9876234 9.062859e-03 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 22 LI1_2nd_7:bin_000042 -0.9373380 1.057363e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 23 LI1_2nd_1:bin_000006 -0.9325146 1.694953e-02 d__Bacteria Bacillota_B c__Peptococcia Peptococcales Peptococcaceae 24 AH1_2nd_12:bin_000014 -0.9164071 2.834609e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 25 AH1_2nd_7:bin_000036 -0.8967934 2.174894e-02 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 26 AH1_2nd_10:bin_000001 -0.8876968 1.885168e-02 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 27 AH1_2nd_1:bin_000048 -0.8706623 1.444546e-02 d__Bacteria Bacillota_A c__Clostridia Peptostreptococcales Anaerovoracaceae 28 AH1_2nd_7:bin_000011 -0.8662957 9.608725e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 29 LI1_2nd_9:bin_000023 -0.8634304 1.570738e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 30 LI1_2nd_7:bin_000078 -0.8232627 1.952536e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 31 AH1_2nd_16:bin_000020 -0.8153454 4.560818e-02 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 32 LI1_2nd_7:bin_000009 -0.7745192 3.213171e-02 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 33 LI1_2nd_7:bin_000083 -0.7721372 1.470501e-02 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 34 LI1_2nd_5:bin_000023 -0.7537334 2.726556e-02 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 35 AH1_2nd_19:bin_000053 -0.7481064 4.378235e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 36 AH1_2nd_14:bin_000032 -0.7083285 3.828097e-02 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales Massilibacillaceae 37 AH1_2nd_6:bin_000062 0.6968736 4.027912e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Muribaculaceae 38 AH1_2nd_16:bin_000100 0.7130742 4.579724e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 39 LI1_2nd_5:bin_000037 0.7947460 2.329669e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 40 LI1_2nd_4:bin_000026 0.8493131 1.568608e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 41 LI1_2nd_7:bin_000014 0.8647946 1.804586e-02 d__Bacteria Bacteroidota c__Bacteroidia Flavobacteriales UBA1820 42 LI1_2nd_8:bin_000016 0.8727047 2.406603e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 43 AH1_2nd_12:bin_000015 0.9098023 2.378453e-02 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 44 AH1_2nd_18:bin_000011 0.9532392 2.421869e-02 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 45 LI1_2nd_8:bin_000006 0.9765949 2.820393e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 46 AH1_2nd_10:bin_000049 1.0070986 7.759436e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 47 AH1_2nd_20:bin_000008 1.0119701 1.839227e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 48 AH1_2nd_5:bin_000069 1.0709946 1.807652e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 49 LI1_2nd_7:bin_000005 1.3605436 1.786411e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 50 LI1_2nd_4:bin_000003 1.4377568 1.530617e-03 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 51 AH1_2nd_19:bin_000072 1.4753980 1.597995e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 52 AH1_2nd_6:bin_000037 1.6939270 1.203229e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales UBA932 53 AH1_2nd_5:bin_000002 1.6961821 1.709012e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 54 LI1_2nd_5:bin_000013 1.7536068 1.649934e-03 d__Bacteria Bacillota_A c__Clostridia Christensenellales DTU072 55 AH1_2nd_20:bin_000046 1.7597049 5.838819e-04 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 56 AH1_2nd_6:bin_000024 2.2513662 2.710986e-04 d__Bacteria Spirochaetota c__Brevinematia Brevinematales Brevinemataceae 57 AH1_2nd_10:bin_000084 2.3886528 1.281741e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 58 AH1_2nd_6:bin_000006 2.4012924 8.052880e-05 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 59 AH1_2nd_7:bin_000028 3.4371580 2.425801e-06 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae genus species 1 CALXRO01 2 Bilophila 3 4 Helicobacter_J 5 Citrobacter_A Citrobacter_A amalonaticus 6 Eisenbergiella 7 8 Copromonas 9 Negativibacillus 10 Bacteroides Bacteroides ovatus 11 CAJLXD01 12 13 Scatomorpha 14 CAZU01 15 Blautia 16 Alistipes 17 Ureaplasma 18 Parabacteroides 19 20 Limenecus 21 Fournierella 22 Parabacteroides_B 23 RGIG6463 24 Velocimicrobium 25 Intestinimonas 26 Limenecus 27 28 Lacrimispora 29 JALFVM01 30 Copromonas 31 Bilophila 32 Anaerotruncus 33 Pseudoflavonifractor 34 35 CAG-56 36 37 HGM05232 38 Bacteroides 39 Odoribacter 40 Odoribacter 41 Merdimorpha 42 Rikenella 43 Thomasclavelia 44 Coprobacillus 45 Alistipes 46 Parabacteroides 47 Alistipes 48 Bacteroides 49 Ventrimonas 50 Dielma 51 52 Egerieousia 53 Odoribacter 54 55 WRHT01 56 Brevinema 57 Alistipes 58 JAAYNV01 59 NHYM01 colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentTransplant, y=forcats::fct_reorder(genome,lfc_treatmentTransplant), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Including structural zeros in Ancombc phylo_samples &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% dplyr::select(genome,domain,phylum,class,order,family,genus,species) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) physeq_genome_filtered &lt;- prune_taxa(taxa_sums(physeq_genome_filtered) &gt; 0, physeq_genome_filtered) ancom_rand_output_mag_struc = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = &quot;treatment&quot;, struc_zero = TRUE, neg_lb = TRUE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), # lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_mag_struc, file = &quot;data/ancombc_FMT_transplant_struc.Rdata&quot;) load(&quot;data/ancombc_FMT_transplant_struc.Rdata&quot;) ancombc_rand_table_mag &lt;- ancom_rand_output_mag_struc$res %&gt;% dplyr::select(taxon, lfc_treatmentTransplant, p_treatmentTransplant) %&gt;% filter(p_treatmentTransplant &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentTransplant) %&gt;% left_join(genome_metadata, by = join_by(taxon == genome)) %&gt;% dplyr::arrange(lfc_treatmentTransplant) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(ancombc_rand_table_mag, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag taxon lfc_treatmentTransplant p_treatmentTransplant domain phylum class order 1 AH1_2nd_1:bin_000028 -3.9030316 3.997554e-05 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__Rickettsiales 2 AH1_2nd_10:bin_000009 -2.2485092 4.045186e-04 d__Bacteria p__Desulfobacterota c__Desulfovibrionia o__Desulfovibrionales 3 AH1_2nd_12:bin_000007 -1.9848870 1.414665e-02 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 4 AH1_2nd_12:bin_000012 -1.8979387 1.886240e-04 d__Bacteria p__Campylobacterota c__Campylobacteria o__Campylobacterales 5 LI1_2nd_8:bin_000079 -1.8874710 3.623059e-03 d__Bacteria p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales 6 AH1_2nd_7:bin_000004 -1.8459238 2.850663e-04 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 7 AH1_2nd_1:bin_000023 -1.5927036 1.982620e-05 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 8 AH1_2nd_2:bin_000017 -1.4385658 1.181388e-04 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 9 AH1_2nd_19:bin_000067 -1.3424555 2.195563e-04 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 10 AH1_2nd_16:bin_000025 -1.2945951 4.272259e-04 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales 11 LI1_2nd_9:bin_000007 -1.2613237 1.940954e-03 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__RF32 12 AH1_2nd_16:bin_000064 -1.2161948 6.704104e-04 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales 13 AH1_2nd_13:bin_000025 -1.1741450 6.044146e-04 d__Bacteria p__Bacillota_A c__Clostridia o__Christensenellales 14 AH1_2nd_20:bin_000037 -1.1703581 1.607628e-02 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__RF32 15 AH1_2nd_5:bin_000023 -1.1430049 3.138661e-04 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 16 AH1_2nd_7:bin_000055 -1.0309214 4.067953e-04 d__Bacteria p__Bacillota c__Bacilli o__Mycoplasmatales 17 AH1_2nd_10:bin_000097 -0.9748332 2.834475e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 18 AH1_2nd_12:bin_000009 -0.9713599 1.767474e-02 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 19 LI1_2nd_7:bin_000033 -0.9681698 2.675928e-03 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales 20 AH1_2nd_2:bin_000001 -0.9094052 3.522572e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 21 LI1_2nd_7:bin_000042 -0.8923068 3.084320e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 22 LI1_2nd_9:bin_000002 -0.8764298 1.571025e-02 d__Bacteria p__Cyanobacteriota c__Vampirovibrionia o__Gastranaerophilales 23 LI1_2nd_1:bin_000006 -0.8750574 7.728201e-03 d__Bacteria p__Bacillota_B c__Peptococcia o__Peptococcales 24 AH1_2nd_7:bin_000036 -0.8746944 8.858606e-03 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales 25 AH1_2nd_10:bin_000001 -0.8415675 8.229790e-03 d__Bacteria p__Cyanobacteriota c__Vampirovibrionia o__Gastranaerophilales 26 AH1_2nd_7:bin_000011 -0.8261473 2.913271e-03 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 27 LI1_2nd_9:bin_000023 -0.8210149 4.942655e-03 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 28 AH1_2nd_16:bin_000020 -0.7895525 2.485452e-02 d__Bacteria p__Desulfobacterota c__Desulfovibrionia o__Desulfovibrionales 29 AH1_2nd_12:bin_000014 -0.7880587 1.941476e-02 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 30 AH1_2nd_1:bin_000048 -0.7810906 6.891224e-03 d__Bacteria p__Bacillota_A c__Clostridia o__Peptostreptococcales 31 AH1_2nd_19:bin_000053 -0.7679376 1.614424e-02 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 32 LI1_2nd_7:bin_000078 -0.7664482 7.337514e-03 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 33 LI1_2nd_7:bin_000083 -0.7573846 3.598021e-03 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales 34 LI1_2nd_7:bin_000009 -0.7530664 1.237409e-02 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales 35 AH1_2nd_14:bin_000032 -0.7510185 9.416255e-03 d__Bacteria p__Bacillota_C c__Negativicutes o__Selenomonadales 36 LI1_2nd_5:bin_000023 -0.7224031 1.024995e-02 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__UBA3830 37 LI1_2nd_1:bin_000014 -0.6432435 2.053579e-02 d__Bacteria p__Desulfobacterota c__Desulfovibrionia o__Desulfovibrionales 38 LI1_2nd_4:bin_000034 -0.6205053 3.369510e-02 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 39 AH1_2nd_14:bin_000052 -0.5542891 4.102102e-02 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 40 AH1_2nd_14:bin_000014 -0.5517607 2.752344e-02 d__Bacteria p__Bacillota_A c__Clostridia o__Oscillospirales 41 AH1_2nd_7:bin_000041 -0.5194902 3.536278e-02 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 42 LI1_2nd_2:bin_000006 0.5797680 3.046565e-02 d__Bacteria p__Bacillota_A c__Clostridia o__Christensenellales 43 AH1_2nd_16:bin_000100 0.6631693 2.425328e-02 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 44 AH1_2nd_6:bin_000062 0.6772842 1.392057e-02 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 45 AH1_2nd_8:bin_000006 0.6831227 3.469891e-02 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 46 AH1_2nd_11:bin_000008 0.6892974 4.692656e-02 d__Bacteria p__Verrucomicrobiota c__Verrucomicrobiae o__Verrucomicrobiales 47 AH1_2nd_6:bin_000017 0.7579670 2.753759e-02 d__Bacteria p__Pseudomonadota c__Alphaproteobacteria o__RF32 48 AH1_2nd_10:bin_000042 0.7892008 2.978692e-02 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 49 LI1_2nd_5:bin_000037 0.7978689 5.965225e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 50 LI1_2nd_4:bin_000026 0.8720518 2.829278e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 51 LI1_2nd_8:bin_000016 0.8963556 7.171259e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 52 LI1_2nd_7:bin_000014 0.9032473 4.186103e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Flavobacteriales 53 AH1_2nd_18:bin_000011 0.9321679 9.252969e-03 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales 54 AH1_2nd_12:bin_000015 0.9843153 4.877214e-03 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales 55 LI1_2nd_8:bin_000019 0.9890680 2.071263e-02 d__Bacteria p__Bacillota_A c__Clostridia o__Christensenellales 56 AH1_2nd_10:bin_000049 1.0049744 2.029886e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 57 AH1_2nd_20:bin_000008 1.0847262 5.105964e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 58 AH1_2nd_5:bin_000069 1.0849006 7.782980e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 59 LI1_2nd_8:bin_000006 1.0995471 8.214974e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 60 AH1_2nd_16:bin_000033 1.1394941 3.868024e-02 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 61 LI1_2nd_7:bin_000005 1.4063920 3.085043e-04 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 62 AH1_2nd_19:bin_000072 1.4226688 4.928579e-04 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 63 LI1_2nd_4:bin_000003 1.4402441 2.362075e-04 d__Bacteria p__Bacillota c__Bacilli o__Erysipelotrichales 64 AH1_2nd_6:bin_000037 1.6984193 2.715626e-04 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 65 AH1_2nd_20:bin_000046 1.7222374 1.553996e-04 d__Bacteria p__Desulfobacterota c__Desulfovibrionia o__Desulfovibrionales 66 LI1_2nd_5:bin_000013 1.7669210 3.902513e-04 d__Bacteria p__Bacillota_A c__Clostridia o__Christensenellales 67 AH1_2nd_5:bin_000002 1.7916266 8.651304e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 68 AH1_2nd_6:bin_000024 2.3175737 6.054984e-05 d__Bacteria p__Spirochaetota c__Brevinematia o__Brevinematales 69 AH1_2nd_6:bin_000006 2.4277546 1.297026e-05 d__Bacteria p__Bacillota_A c__Clostridia o__Lachnospirales 70 AH1_2nd_10:bin_000084 2.4357535 7.364280e-03 d__Bacteria p__Bacteroidota c__Bacteroidia o__Bacteroidales 71 AH1_2nd_7:bin_000028 3.4451085 5.222442e-07 d__Bacteria p__Campylobacterota c__Campylobacteria o__Campylobacterales family genus species completeness contamination length gc 1 f__UBA1997 g__CALXRO01 s__ 97.99 0.00 935376 0.28 2 f__Desulfovibrionaceae g__Bilophila s__ 97.93 0.61 3772750 0.51 3 f__Lachnospiraceae g__ s__ 96.36 0.02 4168486 0.32 4 f__Helicobacteraceae g__Helicobacter_J s__ 99.99 0.07 1684795 0.36 5 f__Enterobacteriaceae g__Citrobacter_A s__Citrobacter_A amalonaticus 86.68 2.66 4365567 0.54 6 f__Lachnospiraceae g__Eisenbergiella s__ 97.93 0.49 4224453 0.49 7 f__Lachnospiraceae g__ s__ 96.30 2.29 4597358 0.49 8 f__Lachnospiraceae g__Copromonas s__ 94.25 1.85 4021360 0.47 9 f__Bacteroidaceae g__Bacteroides s__Bacteroides ovatus 84.28 7.85 6489524 0.41 10 f__Ruminococcaceae g__Negativibacillus s__ 97.84 1.15 3656681 0.42 11 f__CAG-239 g__CAJLXD01 s__ 99.79 0.25 2002619 0.39 12 f__Oscillospiraceae g__Scatomorpha s__ 72.17 2.04 2200597 0.58 13 f__UBA3700 g__ s__ 96.82 0.00 2030500 0.41 14 f__CAG-239 g__CAZU01 s__ 97.18 5.51 1699003 0.41 15 f__Lachnospiraceae g__Blautia s__ 99.92 4.00 4954971 0.45 16 f__Mycoplasmoidaceae g__Ureaplasma s__ 91.57 0.15 923350 0.28 17 f__Tannerellaceae g__Parabacteroides s__ 80.11 3.09 4613140 0.43 18 f__Rikenellaceae g__Alistipes s__ 99.96 0.64 3677634 0.57 19 f__Ruminococcaceae g__Fournierella s__ 86.92 2.87 2594171 0.62 20 f__Bacteroidaceae g__ s__ 99.41 0.73 2643655 0.42 21 f__Tannerellaceae g__Parabacteroides_B s__ 94.83 0.11 3765303 0.46 22 f__Gastranaerophilaceae g__Limenecus s__ 99.80 1.20 2321405 0.37 23 f__Peptococcaceae g__RGIG6463 s__ 98.00 0.43 2984241 0.43 24 f__Oscillospiraceae g__Intestinimonas s__ 96.79 6.89 3079226 0.59 25 f__Gastranaerophilaceae g__Limenecus s__ 99.83 1.69 2086798 0.37 26 f__Lachnospiraceae g__Lacrimispora s__ 98.43 0.34 4543197 0.45 27 f__Lachnospiraceae g__JALFVM01 s__ 89.20 9.24 4276311 0.43 28 f__Desulfovibrionaceae g__Bilophila s__ 94.30 0.98 3775241 0.62 29 f__Lachnospiraceae g__Velocimicrobium s__ 98.27 1.75 4417854 0.41 30 f__Anaerovoracaceae g__ s__ 84.38 2.52 3101586 0.52 31 f__Lachnospiraceae g__CAG-56 s__ 83.11 3.66 3763650 0.44 32 f__Lachnospiraceae g__Copromonas s__ 73.54 2.35 2955642 0.51 33 f__Oscillospiraceae g__Pseudoflavonifractor s__ 71.38 5.46 2959607 0.63 34 f__Ruminococcaceae g__Anaerotruncus s__ 96.58 2.03 3886582 0.53 35 f__Massilibacillaceae g__ s__ 91.06 0.53 3226286 0.44 36 f__ g__ s__ 98.63 0.09 855688 0.29 37 f__Desulfovibrionaceae g__ s__ 99.98 0.80 3744023 0.58 38 f__Bacteroidaceae g__Bacteroides s__Bacteroides thetaiotaomicron 89.50 8.11 6419774 0.43 39 f__Bacteroidaceae g__Bacteroides s__ 94.39 1.11 5272106 0.45 40 f__Oscillospiraceae g__Marseille-P3106 s__ 100.00 3.89 2967398 0.63 41 f__Lachnospiraceae g__ s__ 91.43 8.91 4282933 0.47 42 f__MGBC116941 g__MGBC116941 s__ 96.86 0.00 1959474 0.41 43 f__Bacteroidaceae g__Bacteroides s__ 86.41 7.82 5590246 0.39 44 f__Muribaculaceae g__HGM05232 s__ 81.97 4.40 2730730 0.39 45 f__Lachnospiraceae g__CAG-95 s__ 100.00 0.12 4549788 0.41 46 f__Akkermansiaceae g__Akkermansia s__ 100.00 0.12 3054831 0.58 47 f__CAG-239 g__ s__ 100.00 2.81 1537316 0.41 48 f__Rikenellaceae g__Alistipes s__ 87.85 1.27 2032758 0.55 49 f__Marinifilaceae g__Odoribacter s__ 94.10 1.58 3473816 0.37 50 f__Marinifilaceae g__Odoribacter s__ 99.38 3.28 4761273 0.44 51 f__Rikenellaceae g__Rikenella s__ 96.02 1.33 2860577 0.56 52 f__UBA1820 g__Merdimorpha s__ 97.46 0.00 2178740 0.52 53 f__Coprobacillaceae g__Coprobacillus s__ 98.37 7.24 3675733 0.30 54 f__Coprobacillaceae g__Thomasclavelia s__ 100.00 7.76 3794096 0.31 55 f__UBA3700 g__ s__ 95.80 0.05 2058347 0.38 56 f__Tannerellaceae g__Parabacteroides s__ 93.25 0.19 4643085 0.47 57 f__Rikenellaceae g__Alistipes s__ 99.96 0.17 2244358 0.60 58 f__Bacteroidaceae g__Bacteroides s__ 88.20 0.10 4851364 0.43 59 f__Rikenellaceae g__Alistipes s__ 92.24 0.64 2336258 0.58 60 f__ g__ s__ 94.87 3.04 4131992 0.46 61 f__Lachnospiraceae g__Ventrimonas s__ 98.42 0.20 3639047 0.48 62 f__Lachnospiraceae g__ s__ 72.81 6.04 2872249 0.45 63 f__Erysipelotrichaceae g__Dielma s__ 99.92 0.45 3507993 0.35 64 f__UBA932 g__Egerieousia s__ 76.84 0.18 2171700 0.46 65 f__Desulfovibrionaceae g__WRHT01 s__ 89.38 0.37 3040921 0.62 66 f__DTU072 g__ s__ 94.19 0.01 2207260 0.47 67 f__Marinifilaceae g__Odoribacter s__ 99.59 0.04 3603552 0.45 68 f__Brevinemataceae g__Brevinema s__ 97.74 0.16 1702627 0.38 69 f__Lachnospiraceae g__JAAYNV01 s__ 99.75 0.57 3690498 0.45 70 f__Rikenellaceae g__Alistipes s__ 77.76 0.82 2335170 0.60 71 f__Helicobacteraceae g__NHYM01 s__ 99.82 0.01 1541163 0.32 ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentTransplant, y=forcats::fct_reorder(genome,lfc_treatmentTransplant), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 6), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Genome&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
