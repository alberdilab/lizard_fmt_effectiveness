[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1, Carlos Cabido2, Antton Alberdi3 and Ostaizka Aizpurua4 Last update: 2025-03-03 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/lizard_fmt_effectiveness.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) #library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(ANCOMBC) library(lme4) library(nlme) library(hilldiv2) library(emmeans) library(Maaslin2) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Copenhagen antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;)%&gt;% mutate(time_point = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% filter(!(time_point == &quot;Wild&quot; &amp; Population == &quot;Hot_dry&quot;)) %&gt;% filter(!(time_point == &quot;Transplant1&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Transplant2&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT1&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT2&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT1&quot; &amp; type == &quot;Hot_control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT2&quot; &amp; type == &quot;Hot_control&quot;)) %&gt;% filter(individual!=&quot;LI1_2nd_6&quot;) %&gt;% mutate(time_point=str_remove_all(time_point, &quot;Post-&quot;)) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Remove low sequencing depth samples #Counts_raw columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AD16&quot;) %&gt;% filter(Tube_code != &quot;AD23&quot;) %&gt;% filter(Tube_code != &quot;AD25&quot;) %&gt;% filter(Tube_code != &quot;AD91&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts&lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats&lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, phylum_colors, data_stats, file = &quot;data/03032025data.Rdata&quot;) save(genome_gifts, file = &quot;data/03032025gifts.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/03032025data.Rdata&quot;) 3.1 Sequencing reads statistics data_stats_filter&lt;-data_stats %&gt;% left_join(., sample_metadata[c(1, 4,7,10)], by = join_by(sample == Tube_code)) %&gt;% filter(Population!=&quot;NA&quot;) data_stats_filter$raw_reads %&gt;% sum() [1] 3044539460 data_stats_filter$raw_reads %&gt;% mean() [1] 30445395 data_stats_filter$raw_reads %&gt;% sd() [1] 13549337 3.2 DNA fractions #Overall data_stats_filter %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.400 0.218 data_stats_filter %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;,&quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats_filter %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;,&quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats_filter %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, Population, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_ybx8vpcuzq9wzpxtxsgr, .table th.tinytable_css_ybx8vpcuzq9wzpxtxsgr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_1mdzr5adlyt3urg860py, .table th.tinytable_css_1mdzr5adlyt3urg860py { border-bottom: solid #d3d8dc 0.1em; } sample damr time_point Population type AC79 1.0000000 Acclimation Cold_wet Control AC80 1.0000000 Acclimation Cold_wet Treatment AC81 0.9813013 Acclimation Cold_wet Treatment AC82 0.7490771 Acclimation Cold_wet Treatment AC83 1.0000000 Acclimation Cold_wet Control AC84 1.0000000 Acclimation Cold_wet Control AC85 0.8363777 Acclimation Cold_wet Control AC86 0.8800275 Acclimation Cold_wet Control AC87 0.9672854 Acclimation Cold_wet Treatment AC88 0.3142108 Acclimation Cold_wet Control AC89 0.9338962 Acclimation Cold_wet Treatment AC90 1.0000000 Acclimation Cold_wet Control AC91 1.0000000 Acclimation Cold_wet Control AC92 1.0000000 Acclimation Cold_wet Control AC93 1.0000000 Acclimation Cold_wet Treatment AC94 0.9159348 Acclimation Cold_wet Treatment AC95 0.9239904 Acclimation Cold_wet Treatment AC96 0.9425962 Acclimation Cold_wet Treatment AC97 0.9394886 Acclimation Hot_dry Hot_control AC98 1.0000000 Acclimation Hot_dry Hot_control AC99 1.0000000 Acclimation Hot_dry Hot_control AD01 1.0000000 Acclimation Hot_dry Hot_control AD02 1.0000000 Acclimation Hot_dry Hot_control AD03 1.0000000 Acclimation Hot_dry Hot_control AD04 0.8896057 Acclimation Hot_dry Hot_control AD05 1.0000000 Acclimation Hot_dry Hot_control AD07 0.9515379 Acclimation Hot_dry Hot_control AD08 0.7045003 Antibiotics Cold_wet Control AD09 1.0000000 Antibiotics Cold_wet Control AD10 0.9598720 Antibiotics Cold_wet Control AD11 0.6230176 Antibiotics Cold_wet Control AD12 0.7487463 Antibiotics Cold_wet Control AD13 1.0000000 Antibiotics Cold_wet Control AD14 0.4536529 Antibiotics Cold_wet Control AD15 1.0000000 Antibiotics Cold_wet Control AD17 0.8774871 Antibiotics Cold_wet Treatment AD18 0.4991585 Antibiotics Cold_wet Treatment AD19 0.4060523 Antibiotics Cold_wet Treatment AD20 0.5227482 Antibiotics Cold_wet Treatment AD21 0.6551882 Antibiotics Cold_wet Treatment AD22 0.9106725 Antibiotics Cold_wet Treatment AD24 0.5972915 Antibiotics Cold_wet Treatment AD26 0.9204825 Antibiotics Hot_dry Hot_control AD27 0.5215059 Antibiotics Hot_dry Hot_control AD28 0.8180607 Antibiotics Hot_dry Hot_control AD29 0.7175978 Antibiotics Hot_dry Hot_control AD30 0.9937574 Antibiotics Hot_dry Hot_control AD32 0.6710817 Antibiotics Hot_dry Hot_control AD33 0.6778368 Antibiotics Hot_dry Hot_control AD34 0.4642326 Antibiotics Hot_dry Hot_control AD46 0.8708468 Transplant1 Cold_wet Treatment AD47 0.8328653 Transplant1 Cold_wet Treatment AD49 0.8940294 Transplant1 Cold_wet Treatment AD50 0.8757711 Transplant1 Cold_wet Treatment AD51 0.8479193 Transplant1 Cold_wet Treatment AD52 0.8596870 Transplant1 Cold_wet Treatment AD53 0.8528974 Transplant1 Cold_wet Treatment AD54 1.0000000 Transplant1 Hot_dry Hot_control AD65 1.0000000 Transplant2 Cold_wet Treatment AD66 0.8821027 Transplant2 Cold_wet Treatment AD68 0.8820274 Transplant2 Cold_wet Treatment AD70 0.9590793 Transplant2 Cold_wet Treatment AD71 0.8360540 Transplant2 Cold_wet Treatment AD72 0.8835253 Transplant2 Cold_wet Treatment AD73 1.0000000 Transplant2 Hot_dry Hot_control AD75 1.0000000 FMT1 Cold_wet Treatment AD76 0.9862581 FMT1 Cold_wet Treatment AD77 0.8963376 FMT1 Cold_wet Treatment AD78 1.0000000 FMT1 Cold_wet Treatment AD80 0.8808155 FMT1 Cold_wet Treatment AD83 1.0000000 FMT1 Cold_wet Treatment AD84 1.0000000 FMT1 Cold_wet Treatment AD88 1.0000000 FMT1 Cold_wet Treatment AE04 1.0000000 FMT2 Cold_wet Treatment AE05 1.0000000 FMT2 Cold_wet Treatment AE91 0.9259146 FMT2 Cold_wet Treatment AE94 0.9152960 FMT2 Cold_wet Treatment AE95 1.0000000 FMT2 Cold_wet Treatment AE96 0.7786112 FMT2 Cold_wet Treatment AE99 0.8513354 FMT2 Cold_wet Treatment AF01 0.9046369 FMT2 Cold_wet Treatment AF03 0.9030087 FMT2 Cold_wet Treatment AFU87 0.8810513 Wild Cold_wet Control AFU88 0.8317800 Wild Cold_wet Treatment AFU91 0.8923699 Wild Cold_wet Treatment AFU92 0.8094776 Wild Cold_wet Treatment AFU93 0.8517368 Wild Cold_wet Control AFU94 0.8325385 Wild Cold_wet Treatment AFU95 0.8419270 Wild Cold_wet Treatment AFU96 0.8326820 Wild Cold_wet Control AFU97 0.8107271 Wild Cold_wet Treatment AFU98 0.7506522 Wild Cold_wet Control AFU99 0.8582371 Wild Cold_wet Treatment AFV01 0.9331539 Wild Cold_wet Treatment AFV02 0.8316460 Wild Cold_wet Treatment AFV03 0.8752591 Wild Cold_wet Control AFV04 0.9180285 Wild Cold_wet Control AFV05 1.0000000 Wild Cold_wet Control AFV06 1.0000000 Wild Cold_wet Control AFV07 0.8460805 Wild Cold_wet Control "],["diversity-analysis.html", "Chapter 4 Diversity analysis 4.1 Calculate diversities 4.2 Does captivity change the microbial community? 4.3 Does the antibiotic administration change the microbial community? 4.4 Does antibiotic administration remove the differences found in the two populations? 4.5 Are the microbial communities similar in both donor samples? 4.6 Does the donor sample maintain the microbial community found in acclimation? 4.7 Is the donor sample microbiota different to recipient microbiota? 4.8 Does FMT change the microbial community over time? 4.9 Do FMT change the microbial community compared to antibiotics and acclimation? 4.10 Is the gut microbiota similar to the donor after FMT?", " Chapter 4 Diversity analysis load(&quot;data/03032025data.Rdata&quot;) load(&quot;data/03032025gifts.Rdata&quot;) load(&quot;data/beta_03032025.Rdata&quot;) genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% select(where(~ sum(.) &gt; 0)) %&gt;% select(-AC85) %&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) table &lt;- genome_counts_filt %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;) master_table &lt;- sample_metadata %&gt;% mutate(sample=Tube_code) %&gt;% mutate(Tube_code=str_remove_all(Tube_code, &quot;_a&quot;)) %&gt;% filter(Tube_code %in% table$sample) %&gt;% mutate(treatment = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point))%&gt;% left_join(., table, by=join_by(&quot;Tube_code&quot; ==&quot;sample&quot;)) sample_metadata &lt;- master_table %&gt;% select(1:13) genome_counts_filt &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0)))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_counts_filtering &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0))) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) #match_data(genome_counts_filtering,genome_tree) genome_metadata &lt;- genome_metadata %&gt;% filter(genome %in% genome_counts_filt$genome) 4.1 Calculate diversities 4.1.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] genome_counts_filt1 &lt;- genome_counts_filt1 %&gt;% remove_rownames() %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% rownames_to_column(., &quot;genome&quot;) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) treatment_colors &lt;- c(&#39;#008080&#39;, &quot;#d57d2c&quot;) 4.1.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] save(beta_q0n, beta_q1n, beta_q1p, file = &quot;data/beta_03032025.Rdata&quot;) 4.2 Does captivity change the microbial community? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;) ) 4.2.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;) ) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.007209295 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;) ) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.8755746 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;) ) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.8583098 4.2.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;))) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;) ) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(metric!=&quot;richness&quot;) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;) ) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(7.7073) ( log ) Formula: richness ~ time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 341.1 347.3 -166.5 333.1 31 Scaled residuals: Min 1Q Median 3Q Max -1.88922 -0.29613 0.04659 0.45757 1.21930 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.1706 0.413 Number of obs: 35, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.7578 0.1394 26.952 &lt; 2e-16 *** time_pointWild 0.4405 0.1344 3.278 0.00104 ** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) time_pntWld -0.528 Neutral Model_neutral &lt;- lme(fixed = neutral ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 258.7499 264.7359 -125.3749 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 8.169821 7.178626 Fixed effects: neutral ~ time_point Value Std.Error DF t-value p-value (Intercept) 19.83867 2.614283 17 7.588570 0 time_pointWild 16.81743 2.447303 16 6.871819 0 Correlation: (Intr) time_pointWild -0.489 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.52249490 -0.58253918 -0.03654144 0.58990396 1.40500371 Number of Observations: 35 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 129.9486 135.9346 -60.9743 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.6826651 1.252366 Fixed effects: phylogenetic ~ time_point Value Std.Error DF t-value p-value (Intercept) 5.368277 0.3454342 17 15.540667 0.0000 time_pointWild -0.135768 0.4249336 16 -0.319504 0.7535 Correlation: (Intr) time_pointWild -0.637 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.18050022 -0.47485140 0.08030429 0.37904332 1.82607719 Number of Observations: 35 Number of Groups: 18 4.2.3 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.07277 0.072771 7.2819 999 0.012 * Residuals 33 0.32979 0.009993 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ae2tuigi8yx95c7ks6wv, .table th.tinytable_css_ae2tuigi8yx95c7ks6wv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7xfayuim228cqbufebxz, .table th.tinytable_css_7xfayuim228cqbufebxz { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.5295984 0.05492497 1.917862 0.001 Residual 33 9.1126169 0.94507503 NA NA Total 34 9.6422153 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.02764 0.027637 2.2078 999 0.128 Residuals 33 0.41309 0.012518 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_t0d9rc2jcuudggmv4743, .table th.tinytable_css_t0d9rc2jcuudggmv4743 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ieqsc5pcqqjg8707pcty, .table th.tinytable_css_ieqsc5pcqqjg8707pcty { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.7470135 0.08504426 3.067318 0.001 Residual 33 8.0368067 0.91495574 NA NA Total 34 8.7838201 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04119 0.041187 2.897 999 0.089 . Residuals 33 0.46917 0.014217 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xi2y6ojuvelmrx7hebya, .table th.tinytable_css_xi2y6ojuvelmrx7hebya { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7z6qv2zuxo3jp1uhay7m, .table th.tinytable_css_7z6qv2zuxo3jp1uhay7m { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2075719 0.1133094 4.217042 0.001 Residual 33 1.6243310 0.8866906 NA NA Total 34 1.8319029 1.0000000 NA NA 4.2.4 Structural zeros wild_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;Wild&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_wild = all(c_across(all_of(wild_samples)) == 0)) %&gt;% mutate(all_zeros_acclimation= all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(average_wild = mean(c_across(all_of(wild_samples)), na.rm = TRUE)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_wild == TRUE || all_zeros_acclimation==TRUE) %&gt;% mutate(present = case_when( all_zeros_wild &amp; !all_zeros_acclimation ~ &quot;acclimation&quot;, !all_zeros_wild &amp; all_zeros_acclimation ~ &quot;wild&quot;, !all_zeros_wild &amp; !all_zeros_acclimation ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_wild, average_acclimation)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Wild structural_zeros %&gt;% filter(present==&quot;wild&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 5 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 7 2 p__Bacillota 1 3 p__Bacillota_B 1 4 p__Bacteroidota 1 5 p__Spirochaetota 1 Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% select(1,5:10) # A tibble: 14 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_12:bin_000001 p__Pseudomonadota c__Gammaproteobacteria o__Pseudomonadales f__Moraxellaceae g__Acinetobacter s__Acinetobacter johnsonii 2 AH1_2nd_15:bin_000001 p__Pseudomonadota c__Alphaproteobacteria o__Rhizobiales f__Rhizobiaceae g__Agrobacterium s__Agrobacterium tumefaciens_H 3 AH1_2nd_17:bin_000010 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Mucinivorans s__ 4 AH1_2nd_17:bin_000038 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides_G s__ 5 AH1_2nd_20:bin_000014 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Citrobacter s__Citrobacter portucalensis 6 AH1_2nd_20:bin_000061 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus s__ 7 AH1_2nd_20:bin_000073 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus s__Enterococcus sp002174455 8 LI1_2nd_10:bin_000001 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus_A s__Enterococcus_A raffinosus 9 LI1_2nd_10:bin_000017 p__Chlamydiota c__Chlamydiia o__Chlamydiales f__Chlamydiaceae g__ s__ 10 LI1_2nd_2:bin_000039 p__Bacillota_A c__Clostridia o__TANB77 f__CAG-508 g__ s__ 11 LI1_2nd_7:bin_000045 p__Bacillota_A c__Clostridia o__Oscillospirales f__Acutalibacteraceae g__ s__ 12 LI1_2nd_7:bin_000074 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Escherichia s__Escherichia coli 13 LI1_2nd_8:bin_000030 p__Actinomycetota c__Actinomycetia o__Mycobacteriales f__Mycobacteriaceae g__Corynebacterium s__ 14 LI1_2nd_8:bin_000079 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Citrobacter_A s__Citrobacter_A amalonaticus Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 69 × 3 trait p_value p_adjust &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 B0214 0.000261 0.00315 2 B0219 0.00164 0.0111 3 B0302 0.000198 0.00280 4 B0703 0.00306 0.0185 5 B0709 0.000103 0.00280 6 B0711 0.0142 0.0448 7 B0712 0.000551 0.00532 8 B0801 0.000198 0.00280 9 B1012 0.00136 0.0101 10 B1028 0.00000837 0.000908 # ℹ 59 more rows 4.2.5 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_wild_accl.Rdata&quot;) load(&quot;data/ancombc_wild_accl.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_time_point1_Acclimation, p_time_point1_Acclimation) %&gt;% filter(p_time_point1_Acclimation &lt; 0.05) %&gt;% dplyr::arrange(p_time_point1_Acclimation) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point1_Acclimation) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point1_Acclimation, y=forcats::fct_reorder(genome,lfc_time_point1_Acclimation), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 16 2 Bacteroidota 9 3 Bacillota_C 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota_A MGBC140009 2 Bacillota_A 3 Bacillota_A 4 Bacillota_A Negativibacillus 5 Bacteroidota Parabacteroides 6 Bacteroidota Bacteroides 7 Bacillota_A Hungatella 8 Bacteroidota Bacteroides 9 Bacteroidota Parabacteroides 10 Bacteroidota Parabacteroides 11 Bacteroidota Bacteroides 12 Bacillota_A 13 Bacteroidota Bacteroides 14 Bacillota_A 15 Bacillota_A Copromonas 16 Bacillota_A Enterocloster 17 Bacillota_A Velocimicrobium 18 Bacillota_A CAG-95 19 Bacillota_C 20 Bacteroidota Bacteroides 21 Bacillota_A 22 Bacillota_A Copromonas 23 Bacteroidota Bacteroides Bacteroides thetaiotaomicron 24 Bacillota_A Pseudoflavonifractor 25 Bacillota_A Enterocloster 26 Bacillota_A JALFVM01 ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% count(genus, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) genus sample_count 1 6 2 Bacteroides 6 3 Parabacteroides 3 4 Copromonas 2 5 Enterocloster 2 6 CAG-95 1 7 Hungatella 1 8 JALFVM01 1 9 MGBC140009 1 10 Negativibacillus 1 11 Pseudoflavonifractor 1 12 Velocimicrobium 1 4.2.6 Differences in the functional capacity GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.2.6.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.255 0.0267 2 Wild 0.264 0.0166 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.93336, p-value = 0.03525 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 131, p-value = 0.4828 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) 4.2.6.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.272 0.0251 2 Wild 0.281 0.0147 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94131, p-value = 0.06134 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 120, p-value = 0.2874 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_vveipgxrrkhzfm5dyd4z, .table th.tinytable_css_vveipgxrrkhzfm5dyd4z { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_6yhulkypxwqj8ftw69je, .table th.tinytable_css_6yhulkypxwqj8ftw69je { border-bottom: solid #d3d8dc 0.1em; } Code_function Acclimation Wild Function Difference treatment B03 0.1097356 0.1256091 Amino acid derivative biosynthesis -0.0158735 Wild D03 0.2921075 0.3442827 Sugar degradation -0.0521752 Wild 4.3 Does the antibiotic administration change the microbial community? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) 4.3.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) #0.001 --&gt;wilcox test [1] 0.001497874 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) #0.006--&gt;wilcox test [1] 0.006654358 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2632154 4.3.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;))) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(metric!=&quot;richness&quot;) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.6838) ( log ) Formula: richness ~ time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 278.1 283.9 -135.0 270.1 28 Scaled residuals: Min 1Q Median 3Q Max -1.49142 -0.49637 -0.06281 0.55004 1.99619 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.357 0.5975 Number of obs: 32, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.7303 0.1880 19.844 &lt; 2e-16 *** time_pointAntibiotics -1.1593 0.1966 -5.896 3.72e-09 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pntAntbt -0.427 Neutral Model_neutral &lt;- lme(fixed = neutral ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 224.1303 229.7351 -108.0652 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.198228 7.479481 Fixed effects: neutral ~ time_point Value Std.Error DF t-value p-value (Intercept) 19.11841 1.971629 17 9.696759 0e+00 time_pointAntibiotics -11.46314 2.675428 13 -4.284600 9e-04 Correlation: (Intr) time_pointAntibiotics -0.63 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.86893024 -0.51778639 -0.08383536 0.57135437 1.94021413 Number of Observations: 32 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 138.105 143.7097 -65.05248 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.022301 1.674107 Fixed effects: phylogenetic ~ time_point Value Std.Error DF t-value p-value (Intercept) 5.411618 0.474784 17 11.398064 0.0000 time_pointAntibiotics -0.793905 0.603291 13 -1.315958 0.2109 Correlation: (Intr) time_pointAntibiotics -0.586 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.65952954 -0.50058715 -0.03050434 0.42433230 1.61438947 Number of Observations: 32 Number of Groups: 18 4.3.3 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.013687 0.0136873 2.0494 999 0.142 Residuals 30 0.200356 0.0066785 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ibmpg282ej64j3ljg9ob, .table th.tinytable_css_ibmpg282ej64j3ljg9ob { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_31igq5qszs2hc6rapr69, .table th.tinytable_css_31igq5qszs2hc6rapr69 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.580367 0.1313608 4.536779 0.001 Residual 30 10.450370 0.8686392 NA NA Total 31 12.030738 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03491 0.034906 2.5203 999 0.097 . Residuals 30 0.41549 0.013850 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_90i2kd8iuz9t69a9i0cv, .table th.tinytable_css_90i2kd8iuz9t69a9i0cv { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3ktexbl56ij1l1k3erme, .table th.tinytable_css_3ktexbl56ij1l1k3erme { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.78013 0.1607184 5.744856 0.001 Residual 30 9.29595 0.8392816 NA NA Total 31 11.07608 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.31336 0.313365 16.503 999 0.001 *** Residuals 30 0.56964 0.018988 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_jyfrd71x3if8eaaudvu1, .table th.tinytable_css_jyfrd71x3if8eaaudvu1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_igsavvgpo2qwxp8j09yp, .table th.tinytable_css_igsavvgpo2qwxp8j09yp { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.572915 0.2890287 12.19579 0.001 Residual 30 3.869157 0.7109713 NA NA Total 31 5.442071 1.0000000 NA NA 4.3.4 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 9 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 43 2 p__Bacteroidota 15 3 p__Bacillota 8 4 p__Pseudomonadota 7 5 p__Cyanobacteriota 3 6 p__Verrucomicrobiota 2 7 p__Bacillota_B 1 8 p__Bacillota_C 1 9 p__Fusobacteriota 1 Antibiotics structural_zeros %&gt;% filter(present==&quot;antibiotics&quot;) %&gt;% select(1,5:10) # A tibble: 4 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_7:bin_000003 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 2 LI1_2nd_7:bin_000001 p__Bacillota_A c__Clostridia o__Clostridiales f__Clostridiaceae g__Sarcina s__ 3 AH1_2nd_7:bin_000055 p__Bacillota c__Bacilli o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma s__ 4 AH1_2nd_13:bin_000025 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 4.3.5 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_antib_accl.Rdata&quot;) load(&quot;data/ancombc_antib_accl.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_time_point2_Antibiotics, p_time_point2_Antibiotics) %&gt;% filter(p_time_point2_Antibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_point2_Antibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point2_Antibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point2_Antibiotics, y=forcats::fct_reorder(genome,lfc_time_point2_Antibiotics), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 14 2 Bacillota_A 4 3 Bacillota 2 4 Campylobacterota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Campylobacterota Helicobacter_J 2 Bacillota_A 3 Bacteroidota Bacteroides 4 Bacteroidota Odoribacter 5 Bacteroidota Bacteroides 6 Bacillota Coprobacillus 7 Bacillota 8 Bacteroidota Phocaeicola 9 Bacteroidota Bacteroides 10 Bacteroidota Phocaeicola 11 Bacteroidota Odoribacter 12 Bacteroidota Bacteroides 13 Bacteroidota Bacteroides 14 Bacteroidota Parabacteroides 15 Bacteroidota 16 Bacteroidota Parabacteroides 17 Bacillota_A 18 Bacteroidota Alistipes 19 Bacillota_A 20 Bacillota_A 21 Bacteroidota Odoribacter ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(genus, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) genus sample_count 1 6 2 Bacteroides 5 3 Odoribacter 3 4 Parabacteroides 2 5 Phocaeicola 2 6 Alistipes 1 7 Coprobacillus 1 8 Helicobacter_J 1 4.3.6 Differences in the functional capacity GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.3.6.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.255 0.0267 2 Antibiotics 0.207 0.124 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.93249, p-value = 0.04596 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 186, p-value = 0.02704 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Antibiotics)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Antibiotics&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) 4.3.6.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.272 0.0251 2 Antibiotics 0.229 0.116 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.92912, p-value = 0.03702 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 185, p-value = 0.02994 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_d7unk3b9h1ifofdjc3vq, .table th.tinytable_css_d7unk3b9h1ifofdjc3vq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5aytezi7mbctve3z824o, .table th.tinytable_css_5aytezi7mbctve3z824o { border-bottom: solid #d3d8dc 0.1em; } Code_function Acclimation Antibiotics Function Difference treatment B06 0.68110280 0.47325490 Organic anion biosynthesis 0.20784790 Acclimation B02 0.59963040 0.41562100 Amino acid biosynthesis 0.18400940 Acclimation D02 0.38587770 0.20636760 Polysaccharide degradation 0.17951010 Acclimation S03 0.27103471 0.09357224 Spore 0.17746247 Acclimation B01 0.84215140 0.69078910 Nucleic acid biosynthesis 0.15136230 Acclimation B07 0.44558700 0.30432910 Vitamin biosynthesis 0.14125790 Acclimation B08 0.44596150 0.32044710 Aromatic compound biosynthesis 0.12551440 Acclimation D09 0.25533360 0.13438350 Antibiotic degradation 0.12095010 Acclimation B04 0.54457570 0.42921780 SCFA biosynthesis 0.11535790 Acclimation D03 0.29210750 0.20698550 Sugar degradation 0.08512200 Acclimation D05 0.28856110 0.22258820 Amino acid degradation 0.06597290 Acclimation B10 0.05947806 0.03621687 Antibiotic biosynthesis 0.02326119 Acclimation T06 0.01544742 0.07004128 Nitrogen compound transport -0.05459386 Antibiotics 4.4 Does antibiotic administration remove the differences found in the two populations? 4.4.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) #0.001--&gt;wilcox test [1] 0.001165318 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) #0.0003--&gt;wilcox test [1] 0.0003462674 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.0659697 4.4.2 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point == &quot;Antibiotics&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;))) %&gt;% filter(metric!=&quot;phylogenetic&quot;) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;phylogenetic&quot;))) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.4.3 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;Antibiotics&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;Antibiotics&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.015377 0.0153774 6.8934 999 0.017 * Residuals 21 0.046845 0.0022307 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_wpgwlw0jz27sbs64qh1g, .table th.tinytable_css_wpgwlw0jz27sbs64qh1g { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_lie3jh0lc8p1lc3lc5br, .table th.tinytable_css_lie3jh0lc8p1lc3lc5br { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.361743 0.1533845 3.80465 0.001 Residual 21 7.516224 0.8466155 NA NA Total 22 8.877966 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.030649 0.0306488 3.8694 999 0.077 . Residuals 21 0.166339 0.0079209 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zqzf2hjbdvbibjfkmtg3, .table th.tinytable_css_zqzf2hjbdvbibjfkmtg3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_hkdx3ims3nqcpmv2l27u, .table th.tinytable_css_hkdx3ims3nqcpmv2l27u { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.787698 0.208772 5.541022 0.001 Residual 21 6.775221 0.791228 NA NA Total 22 8.562919 1.000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.012165 0.012165 0.9979 999 0.339 Residuals 21 0.256012 0.012191 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_pdak68kgyiwp92twu2qq, .table th.tinytable_css_pdak68kgyiwp92twu2qq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_p1u2rbtp5iil8fbbojth, .table th.tinytable_css_p1u2rbtp5iil8fbbojth { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.8970751 0.1890846 4.896659 0.001 Residual 21 3.8472307 0.8109154 NA NA Total 22 4.7443057 1.0000000 NA NA 4.5 Are the microbial communities similar in both donor samples? 4.5.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;))%&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.8454446 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;))%&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.8433738 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;))%&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.1409054 4.5.2 Alpha diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;))%&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00014 0.0001396 0.0173 999 0.918 Residuals 13 0.10481 0.0080621 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_kvi0ge0t7frleqda24fl, .table th.tinytable_css_kvi0ge0t7frleqda24fl { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_gdei7zdib28n7f9rmobh, .table th.tinytable_css_gdei7zdib28n7f9rmobh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.06889268 0.03010712 0.4035421 0.98 Residual 13 2.21935895 0.96989288 NA NA Total 14 2.28825162 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000655 0.0006546 0.0514 999 0.835 Residuals 13 0.165409 0.0127237 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_qwnygneg52dd59tovgh4, .table th.tinytable_css_qwnygneg52dd59tovgh4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_qdmk12si41gqyefwapju, .table th.tinytable_css_qdmk12si41gqyefwapju { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.09294671 0.03882177 0.5250671 0.81 Residual 13 2.30124351 0.96117823 NA NA Total 14 2.39419022 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.003691 0.0036912 0.3071 999 0.647 Residuals 13 0.156266 0.0120205 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_yp0jqd457uul6dw7suee, .table th.tinytable_css_yp0jqd457uul6dw7suee { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_svepwrtpcsewymkdz5ic, .table th.tinytable_css_svepwrtpcsewymkdz5ic { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.009773632 0.01921019 0.2546239 0.858 Residual 13 0.498999565 0.98078981 NA NA Total 14 0.508773196 1.00000000 NA NA 4.6 Does the donor sample maintain the microbial community found in acclimation? sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Transplant1&quot;, &quot;Transplant2&quot;) ~ &quot;Transplant&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) 4.6.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;))%&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.8209277 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;))%&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.7572882 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;))%&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.182244 4.6.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.6.3 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00836 0.0083600 1.4409 999 0.25 Residuals 22 0.12764 0.0058019 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_jnoqrwqo78pt6y6lrsn5, .table th.tinytable_css_jnoqrwqo78pt6y6lrsn5 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_i7km934dqbiohdvxcjgu, .table th.tinytable_css_i7km934dqbiohdvxcjgu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2657351 0.06396199 1.503319 0.086 Residual 22 3.8888430 0.93603801 NA NA Total 23 4.1545781 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000661 0.0006614 0.0736 999 0.814 Residuals 22 0.197804 0.0089911 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_qxjj1untnr5c99qkokcq, .table th.tinytable_css_qxjj1untnr5c99qkokcq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7941yk3q88t9jqdzbtuy, .table th.tinytable_css_7941yk3q88t9jqdzbtuy { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3164816 0.07596593 1.808646 0.069 Residual 22 3.8496178 0.92403407 NA NA Total 23 4.1660995 1.00000000 NA NA neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + # scale_color_manual(values = treatment_colors,labels=c(&quot;Cold_wet&quot; = &quot;Cold wet&quot;, &quot;Hot_dry&quot; = &quot;Hot dry&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00204 0.0020405 0.2622 999 0.698 Residuals 22 0.17118 0.0077807 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_z2o9svemjj8tnyquunfa, .table th.tinytable_css_z2o9svemjj8tnyquunfa { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_yn9lt4noo95cwnnzpaoa, .table th.tinytable_css_yn9lt4noo95cwnnzpaoa { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.0412056 0.056244 1.31111 0.258 Residual 22 0.6914166 0.943756 NA NA Total 23 0.7326222 1.000000 NA NA phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) 4.7 Is the donor sample microbiota different to recipient microbiota? samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) 4.7.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Treatment&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;))%&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2124433 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Treatment&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;))%&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.115414 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Treatment&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;))%&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.684621 4.7.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.7.3 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.12795 0.127946 13.179 999 0.001 *** Residuals 20 0.19416 0.009708 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_z7h3j2q20m5k7soynaxj, .table th.tinytable_css_z7h3j2q20m5k7soynaxj { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7z73huv98gntkawh96px, .table th.tinytable_css_7z73huv98gntkawh96px { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.777815 0.2760196 7.625059 0.001 Residual 20 4.663086 0.7239804 NA NA Total 21 6.440902 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.071502 0.071502 5.4967 999 0.032 * Residuals 20 0.260166 0.013008 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_e6045oqya7vc12hwktc1, .table th.tinytable_css_e6045oqya7vc12hwktc1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_1pr7lzv2pj25kqxveucn, .table th.tinytable_css_1pr7lzv2pj25kqxveucn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 2.112572 0.3210813 9.458609 0.001 Residual 20 4.466983 0.6789187 NA NA Total 21 6.579556 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04731 0.047307 2.6157 999 0.117 Residuals 20 0.36172 0.018086 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_oiwb8gqzdp8d437kq8u6, .table th.tinytable_css_oiwb8gqzdp8d437kq8u6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_lfqoxj7yz6youb7hw4nh, .table th.tinytable_css_lfqoxj7yz6youb7hw4nh { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3778248 0.239656 6.303884 0.001 Residual 20 1.1987049 0.760344 NA NA Total 21 1.5765298 1.000000 NA NA 4.8 Does FMT change the microbial community over time? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT1&quot;,&quot;FMT2&quot;) ) 4.8.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Treatment&quot; &amp; time_point %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;))%&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.08146226 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Treatment&quot; &amp; time_point %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;))%&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.1611674 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Treatment&quot; &amp; time_point %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;))%&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.02991752 4.8.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;))) %&gt;% filter(metric!=&quot;phylogenetic&quot;) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot; )) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;phylogenetic&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + theme_classic() + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Model_rich &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Model_rich) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.3876) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 171.0 174.3 -81.5 163.0 13 Scaled residuals: Min 1Q Median 3Q Max -1.73495 -0.71265 -0.07086 0.40744 1.88240 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 1.073e-11 3.275e-06 Number of obs: 17, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9343 0.1759 22.369 &lt;2e-16 *** treatmentFMT2 0.4052 0.2402 1.687 0.0917 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tretmntFMT2 -0.732 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 128.7946 131.6268 -60.3973 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.497472 11.25384 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 24.65947 4.164756 8 5.920988 0.0004 treatmentFMT2 14.87494 5.482531 7 2.713151 0.0301 Correlation: (Intr) treatmentFMT2 -0.7 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.76462324 -0.55701822 -0.04763167 0.55267587 1.30333436 Number of Observations: 17 Number of Groups: 9 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 56.26492 59.09712 -24.13246 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7000124 0.8410939 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 4.171152 0.3832714 8 10.883024 0.0000 treatmentFMT2 0.919088 0.4135879 7 2.222231 0.0617 Correlation: (Intr) treatmentFMT2 -0.583 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.1363964 -0.5779309 -0.1467688 0.4809911 2.3362210 Number of Observations: 17 Number of Groups: 9 4.8.3 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.017610 0.017610 2.8225 999 0.119 Residuals 15 0.093585 0.006239 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_dp5qdv3hjkva62x7jik3, .table th.tinytable_css_dp5qdv3hjkva62x7jik3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_1hy9j6zr3imw23wldjtq, .table th.tinytable_css_1hy9j6zr3imw23wldjtq { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3560084 0.07968734 1.298809 0.00390625 Residual 15 4.1115570 0.92031266 NA NA Total 16 4.4675655 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.009828 0.0098278 0.7113 999 0.425 Residuals 15 0.207263 0.0138175 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_9hfnqzkuibt22s1peoqa, .table th.tinytable_css_9hfnqzkuibt22s1peoqa { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_28abo0vor1glsfaytagf, .table th.tinytable_css_28abo0vor1glsfaytagf { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3149954 0.08110541 1.323962 0.00390625 Residual 15 3.5687823 0.91889459 NA NA Total 16 3.8837776 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.010955 0.010955 0.6602 999 0.545 Residuals 15 0.248892 0.016593 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_9qqg3cnowye3rj7rzizw, .table th.tinytable_css_9qqg3cnowye3rj7rzizw { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_6clx4f3xcbvg8c7g4edj, .table th.tinytable_css_6clx4f3xcbvg8c7g4edj { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.06391536 0.09449338 1.565312 0.0703125 Residual 15 0.61248501 0.90550662 NA NA Total 16 0.67640037 1.00000000 NA NA 4.9 Do FMT change the microbial community compared to antibiotics and acclimation? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Antibiotics&quot;, &quot;Acclimation&quot;,&quot;FMT1&quot;) ) 4.9.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Treatment&quot; &amp; time_point %in% c( &quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;FMT1&quot;))%&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) #0.07 [1] 0.07006734 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Treatment&quot; &amp; time_point %in% c( &quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;FMT1&quot;))%&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value)#0.01 --&gt;wilcox test [1] 0.01957281 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Treatment&quot; &amp; time_point %in% c( &quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;FMT1&quot;))%&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) #0.2 [1] 0.2182797 4.9.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(metric!=&quot;neutral&quot;)%&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;FMT1&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + # scale_color_manual(values=treatment_colors)+ # scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;neutral&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;FMT1&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + # scale_color_manual(values=treatment_colors)+ # scale_fill_manual(values=treatment_colors) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness: Problems to calculate Model_rich &lt;- glmer.nb(richness ~ treatment + (1|individual), data = alpha_div_meta) #summary(Model_rich) emmeans(Model_rich, pairwise ~ treatment) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_neutral) emmeans(Model_neutral, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 17.31 3.42 8 9.431 25.2 Antibiotics 8.44 3.86 8 -0.451 17.3 FMT1 24.60 3.62 8 16.256 32.9 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 8.87 4.74 13 1.869 0.1868 Acclimation - FMT1 -7.29 4.55 13 -1.601 0.2800 Antibiotics - FMT1 -16.16 4.85 13 -3.333 0.0139 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_phylo) emmeans(Model_phylo, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 5.52 0.506 8 4.35 6.68 Antibiotics 4.31 0.573 8 2.99 5.63 FMT1 4.15 0.537 8 2.92 5.39 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 1.207 0.718 13 1.680 0.2494 Acclimation - FMT1 1.362 0.690 13 1.973 0.1581 Antibiotics - FMT1 0.155 0.735 13 0.210 0.9759 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates 4.9.3 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Post-FMT1&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Post-FMT1&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.008328 0.0083277 1.2753 999 0.297 Residuals 14 0.091419 0.0065300 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zrhvdz5b12cyvyoxa2vr, .table th.tinytable_css_zrhvdz5b12cyvyoxa2vr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_lwpzxd4ssonug7421uiw, .table th.tinytable_css_lwpzxd4ssonug7421uiw { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.8287871 0.1407734 2.293722 0.0078125 Residual 14 5.0585993 0.8592266 NA NA Total 15 5.8873864 1.0000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8287871 2.293722 0.1407734 0.004 0.004 * Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.005446 0.0054462 0.3949 999 0.522 Residuals 14 0.193060 0.0137900 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_lp5tqrtikf3uz3bfdbep, .table th.tinytable_css_lp5tqrtikf3uz3bfdbep { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3dzdykqfb4ojct0fy974, .table th.tinytable_css_3dzdykqfb4ojct0fy974 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.8814932 0.1640316 2.747044 0.0078125 Residual 14 4.4924309 0.8359684 NA NA Total 15 5.3739241 1.0000000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8814932 2.747044 0.1640316 0.001 0.001 ** Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.07055 0.070551 2.4964 999 0.148 Residuals 14 0.39565 0.028260 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_c14lgslvcw3xz3qke5c7, .table th.tinytable_css_c14lgslvcw3xz3qke5c7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_962bzakl8s15504i5a3d, .table th.tinytable_css_962bzakl8s15504i5a3d { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.6885926 0.2679674 5.124832 0.015625 Residual 14 1.8810952 0.7320326 NA NA Total 15 2.5696878 1.0000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.6885926 5.124832 0.2679674 0.007 0.007 * 4.10 Is the gut microbiota similar to the donor after FMT? sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) 4.10.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Transplant&quot;,&quot;FMT&quot;))%&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.6584137 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Transplant&quot;,&quot;FMT&quot;))%&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.5117212 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Transplant&quot;,&quot;FMT&quot;))%&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2320227 4.10.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;neutral&quot;,&quot;richness&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Transplant&quot;, &quot;FMT&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + # scale_color_manual(values=treatment_colors)+ # scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.10.3 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.11100 0.111002 11.752 999 0.003 ** Residuals 28 0.26447 0.009445 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_otvyqtu36cw7gyuqsm6k, .table th.tinytable_css_otvyqtu36cw7gyuqsm6k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_bxj3rt6cnmwsn83z5a9w, .table th.tinytable_css_bxj3rt6cnmwsn83z5a9w { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.184578 0.1548451 5.13002 0.001 Residual 28 6.465508 0.8451549 NA NA Total 29 7.650086 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04408 0.044082 3.1744 999 0.068 . Residuals 28 0.38883 0.013887 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_lufnf81xbngrkko3qhhl, .table th.tinytable_css_lufnf81xbngrkko3qhhl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_k577ux8vggio26o16upa, .table th.tinytable_css_k577ux8vggio26o16upa { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.147077 0.1608783 5.368223 0.001 Residual 28 5.983012 0.8391217 NA NA Total 29 7.130089 1.0000000 NA NA neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + # scale_color_manual(values = treatment_colors) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00007 0.0000689 0.0044 999 0.956 Residuals 28 0.43637 0.0155847 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ove3ahzw0jrxi55mxj5k, .table th.tinytable_css_ove3ahzw0jrxi55mxj5k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fwlv3i5j4y11iyxe0lwa, .table th.tinytable_css_fwlv3i5j4y11iyxe0lwa { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.1298187 0.1018776 3.17615 0.002 Residual 28 1.1444432 0.8981224 NA NA Total 29 1.2742619 1.0000000 NA NA 4.10.4 Structural zeros FMT_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment == &quot;FMT&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() Transplant_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment ==&quot;Transplant&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_FMT = all(c_across(all_of(FMT_samples)) == 0)) %&gt;% mutate(all_zeros_Transplant = all(c_across(all_of(Transplant_samples)) == 0)) %&gt;% mutate(average_FMT = mean(c_across(all_of(FMT_samples)), na.rm = TRUE)) %&gt;% mutate(average_Transplant = mean(c_across(all_of(Transplant_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_FMT == TRUE || all_zeros_Transplant==TRUE) %&gt;% mutate(present = case_when( all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;Transplant&quot;, !all_zeros_FMT &amp; all_zeros_Transplant ~ &quot;FMT&quot;, !all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;FMT&quot;, average_FMT, average_Transplant)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Structural zeros in each group fmt &lt;- structural_zeros %&gt;% filter(present==&quot;FMT&quot;) %&gt;% count(phylum, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) fmt_f &lt;- structural_zeros %&gt;% filter(present==&quot;FMT&quot;) %&gt;% count(family, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Transplant FMT 1 52 55 Phyla to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_xx0p19fnxzut0mdsav8e, .table th.tinytable_css_xx0p19fnxzut0mdsav8e { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_va645okcvaso4vxptg16, .table th.tinytable_css_va645okcvaso4vxptg16 { border-bottom: solid #d3d8dc 0.1em; } phylum Transplant FMT p__Bacillota_A 20 21 p__Bacillota 16 10 p__Pseudomonadota 6 11 p__Bacteroidota 3 6 p__Desulfobacterota 2 2 p__Bacillota_B 1 0 p__Chlamydiota 1 0 p__Cyanobacteriota 1 0 p__Fusobacteriota 1 0 p__Verrucomicrobiota 1 2 p__Actinomycetota 0 1 p__Bacillota_C 0 1 p__Campylobacterota 0 1 Families to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(family, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_f, by=&quot;family&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_y129ibmumowcdpximp2t, .table th.tinytable_css_y129ibmumowcdpximp2t { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_o5mghucgerhrpy67en5o, .table th.tinytable_css_o5mghucgerhrpy67en5o { border-bottom: solid #d3d8dc 0.1em; } family Transplant FMT f__Lachnospiraceae 7 9 f__Erysipelotrichaceae 6 5 f__UBA660 6 0 f__Enterobacteriaceae 5 2 f__CAG-508 3 0 f__Ruminococcaceae 3 3 f__Anaerovoracaceae 2 0 f__Coprobacillaceae 2 0 f__Desulfovibrionaceae 2 2 f__Oscillospiraceae 2 1 f__Tannerellaceae 2 1 f__UBA1242 2 0 f__ 1 3 f__Akkermansiaceae 1 0 f__CAG-239 1 2 f__Chlamydiaceae 1 0 f__Enterococcaceae 1 3 f__Fusobacteriaceae 1 0 f__Gastranaerophilaceae 1 0 f__Marinifilaceae 1 0 f__Mycoplasmoidaceae 1 1 f__Peptococcaceae 1 0 f__Anaerotignaceae 0 2 f__Bacteroidaceae 0 2 f__LL51 0 2 f__UBA3700 0 2 f__Acutalibacteraceae 0 1 f__Arcobacteraceae 0 1 f__CAG-274 0 1 f__CALVMC01 0 1 f__Devosiaceae 0 1 f__Mycobacteriaceae 0 1 f__Pumilibacteraceae 0 1 f__RUG11792 0 1 f__Rhizobiaceae 0 1 f__Rikenellaceae 0 1 f__Sphingobacteriaceae 0 1 f__Streptococcaceae 0 1 f__UBA1997 0 1 f__UBA3830 0 1 f__Weeksellaceae 0 1 4.10.4.1 Functional capacities of the structural zeros #Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% structural_zeros$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) #Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) #Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% filter(genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT-Transplant)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Transplant&quot;,&quot;FMT&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Elevation&quot;) 4.10.5 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_FMT_transplant.Rdata&quot;) load(&quot;data/ancombc_FMT_transplant.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_treatmentTransplant, p_treatmentTransplant) %&gt;% filter(p_treatmentTransplant &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentTransplant) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_treatmentTransplant) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() Differential abundance MAGs in each group fmt_count &lt;- ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&lt;0) %&gt;% count(phylum, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&gt;0) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) phylum Transplant FMT 1 Bacteroidota 13 5 2 Bacillota_A 4 17 3 Bacillota 3 1 4 Campylobacterota 1 1 5 Desulfobacterota 1 2 6 Spirochaetota 1 0 7 Pseudomonadota 0 5 8 Cyanobacteriota 0 2 9 Bacillota_B 0 1 10 Bacillota_C 0 1 ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&gt;0) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Transplant FMT 1 23 35 ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentTransplant, y=forcats::fct_reorder(genome,lfc_treatmentTransplant), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) 4.10.6 Differences in the functional capacities GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.10.6.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT 0.271 0.0197 2 Transplant 0.272 0.0499 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.81287, p-value = 0.0001135 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 133, p-value = 0.3627 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT-Transplant)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Transplant&quot;,&quot;FMT&quot;)) means_gift &lt;- element_gift_filt %&gt;% select(-treatment) %&gt;% pivot_longer(!sample, names_to = &quot;Elements&quot;, values_to = &quot;abundance&quot;) %&gt;% left_join(sample_metadata, by=join_by(sample==sample)) %&gt;% group_by(treatment, Elements) %&gt;% summarise(mean=mean(abundance)) log_fold &lt;- means_gift %&gt;% group_by(Elements) %&gt;% summarise( logfc_fmt_transplant = log2(mean[treatment == &quot;FMT&quot;] / mean[treatment == &quot;Transplant&quot;]) ) %&gt;% left_join(., difference_table, by=&quot;Elements&quot;) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) log_fold %&gt;% filter(Elements!=&quot;D0611&quot;) %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,logfc_fmt_transplant), y=logfc_fmt_transplant, fill=group_color)) + geom_col() + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Log_fold&quot;)+ labs(fill=&quot;Treatment&quot;) 4.10.6.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT 0.286 0.0170 2 Transplant 0.293 0.0458 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.72875, p-value = 4.206e-06 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 129, p-value = 0.457 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
