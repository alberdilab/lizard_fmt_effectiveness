[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1, Carlos Cabido2, Antton Alberdi3 and Ostaizka Aizpurua4 Last update: 2025-03-10 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/lizard_fmt_effectiveness.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(ANCOMBC) library(lme4) library(nlme) library(hilldiv2) library(emmeans) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Copenhagen antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;)%&gt;% mutate(time_point = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% filter(!(time_point == &quot;Transplant1&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Transplant2&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT1&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT2&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT1&quot; &amp; type == &quot;Hot_control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT2&quot; &amp; type == &quot;Hot_control&quot;)) %&gt;% filter(individual!=&quot;LI1_2nd_6&quot;) %&gt;% mutate(time_point=str_remove_all(time_point, &quot;Post-&quot;)) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Remove low sequencing depth samples #Counts_raw columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AD16&quot;) %&gt;% filter(Tube_code != &quot;AD23&quot;) %&gt;% filter(Tube_code != &quot;AD25&quot;) %&gt;% filter(Tube_code != &quot;AD91&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts&lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats&lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, phylum_colors, data_stats, file = &quot;data/08032025data.Rdata&quot;) save(genome_gifts, file = &quot;data/04032025gifts.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/08032025data.Rdata&quot;) 3.1 Sequencing reads statistics data_stats_filter&lt;-data_stats %&gt;% left_join(., sample_metadata[c(1, 4,7,10)], by = join_by(sample == Tube_code)) %&gt;% filter(Population!=&quot;NA&quot;) data_stats_filter$raw_reads %&gt;% sum() [1] 3334628186 data_stats_filter$raw_reads %&gt;% mean() [1] 30592919 data_stats_filter$raw_reads %&gt;% sd() [1] 13052615 3.2 DNA fractions #Overall data_stats_filter %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.405 0.212 data_stats_filter %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~factor(time_point, level=c(&quot;Wild&quot;, &quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Transplant1&quot;, &quot;Transplant2&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)), scales = &quot;free&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats_filter %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~factor(time_point, level=c(&quot;Wild&quot;, &quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Transplant1&quot;, &quot;Transplant2&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)), scales = &quot;free&quot;) + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats_filter %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, Population, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_n0dyh4akwdv9xjr6egjr, .table th.tinytable_css_n0dyh4akwdv9xjr6egjr { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_mrusx7sxiq77vnmixof5, .table th.tinytable_css_mrusx7sxiq77vnmixof5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample damr time_point Population type AC79 1.0000000 Acclimation Cold_wet Control AC80 1.0000000 Acclimation Cold_wet Treatment AC81 0.9813013 Acclimation Cold_wet Treatment AC82 0.7490771 Acclimation Cold_wet Treatment AC83 1.0000000 Acclimation Cold_wet Control AC84 1.0000000 Acclimation Cold_wet Control AC85 0.8363777 Acclimation Cold_wet Control AC86 0.8800275 Acclimation Cold_wet Control AC87 0.9672854 Acclimation Cold_wet Treatment AC88 0.3142108 Acclimation Cold_wet Control AC89 0.9338962 Acclimation Cold_wet Treatment AC90 1.0000000 Acclimation Cold_wet Control AC91 1.0000000 Acclimation Cold_wet Control AC92 1.0000000 Acclimation Cold_wet Control AC93 1.0000000 Acclimation Cold_wet Treatment AC94 0.9159348 Acclimation Cold_wet Treatment AC95 0.9239904 Acclimation Cold_wet Treatment AC96 0.9425962 Acclimation Cold_wet Treatment AC97 0.9394886 Acclimation Hot_dry Hot_control AC98 1.0000000 Acclimation Hot_dry Hot_control AC99 1.0000000 Acclimation Hot_dry Hot_control AD01 1.0000000 Acclimation Hot_dry Hot_control AD02 1.0000000 Acclimation Hot_dry Hot_control AD03 1.0000000 Acclimation Hot_dry Hot_control AD04 0.8896057 Acclimation Hot_dry Hot_control AD05 1.0000000 Acclimation Hot_dry Hot_control AD07 0.9515379 Acclimation Hot_dry Hot_control AD08 0.7045003 Antibiotics Cold_wet Control AD09 1.0000000 Antibiotics Cold_wet Control AD10 0.9598720 Antibiotics Cold_wet Control AD11 0.6230176 Antibiotics Cold_wet Control AD12 0.7487463 Antibiotics Cold_wet Control AD13 1.0000000 Antibiotics Cold_wet Control AD14 0.4536529 Antibiotics Cold_wet Control AD15 1.0000000 Antibiotics Cold_wet Control AD17 0.8774871 Antibiotics Cold_wet Treatment AD18 0.4991585 Antibiotics Cold_wet Treatment AD19 0.4060523 Antibiotics Cold_wet Treatment AD20 0.5227482 Antibiotics Cold_wet Treatment AD21 0.6551882 Antibiotics Cold_wet Treatment AD22 0.9106725 Antibiotics Cold_wet Treatment AD24 0.5972915 Antibiotics Cold_wet Treatment AD26 0.9204825 Antibiotics Hot_dry Hot_control AD27 0.5215059 Antibiotics Hot_dry Hot_control AD28 0.8180607 Antibiotics Hot_dry Hot_control AD29 0.7175978 Antibiotics Hot_dry Hot_control AD30 0.9937574 Antibiotics Hot_dry Hot_control AD32 0.6710817 Antibiotics Hot_dry Hot_control AD33 0.6778368 Antibiotics Hot_dry Hot_control AD34 0.4642326 Antibiotics Hot_dry Hot_control AD46 0.8708468 Transplant1 Cold_wet Treatment AD47 0.8328653 Transplant1 Cold_wet Treatment AD49 0.8940294 Transplant1 Cold_wet Treatment AD50 0.8757711 Transplant1 Cold_wet Treatment AD51 0.8479193 Transplant1 Cold_wet Treatment AD52 0.8596870 Transplant1 Cold_wet Treatment AD53 0.8528974 Transplant1 Cold_wet Treatment AD54 1.0000000 Transplant1 Hot_dry Hot_control AD65 1.0000000 Transplant2 Cold_wet Treatment AD66 0.8821027 Transplant2 Cold_wet Treatment AD68 0.8820274 Transplant2 Cold_wet Treatment AD70 0.9590793 Transplant2 Cold_wet Treatment AD71 0.8360540 Transplant2 Cold_wet Treatment AD72 0.8835253 Transplant2 Cold_wet Treatment AD73 1.0000000 Transplant2 Hot_dry Hot_control AD75 1.0000000 FMT1 Cold_wet Treatment AD76 0.9862581 FMT1 Cold_wet Treatment AD77 0.8963376 FMT1 Cold_wet Treatment AD78 1.0000000 FMT1 Cold_wet Treatment AD80 0.8808155 FMT1 Cold_wet Treatment AD83 1.0000000 FMT1 Cold_wet Treatment AD84 1.0000000 FMT1 Cold_wet Treatment AD88 1.0000000 FMT1 Cold_wet Treatment AE04 1.0000000 FMT2 Cold_wet Treatment AE05 1.0000000 FMT2 Cold_wet Treatment AE91 0.9259146 FMT2 Cold_wet Treatment AE94 0.9152960 FMT2 Cold_wet Treatment AE95 1.0000000 FMT2 Cold_wet Treatment AE96 0.7786112 FMT2 Cold_wet Treatment AE99 0.8513354 FMT2 Cold_wet Treatment AF01 0.9046369 FMT2 Cold_wet Treatment AF03 0.9030087 FMT2 Cold_wet Treatment AFU87 0.8810513 Wild Cold_wet Control AFU88 0.8317800 Wild Cold_wet Treatment AFU91 0.8923699 Wild Cold_wet Treatment AFU92 0.8094776 Wild Cold_wet Treatment AFU93 0.8517368 Wild Cold_wet Control AFU94 0.8325385 Wild Cold_wet Treatment AFU95 0.8419270 Wild Cold_wet Treatment AFU96 0.8326820 Wild Cold_wet Control AFU97 0.8107271 Wild Cold_wet Treatment AFU98 0.7506522 Wild Cold_wet Control AFU99 0.8582371 Wild Cold_wet Treatment AFV01 0.9331539 Wild Cold_wet Treatment AFV02 0.8316460 Wild Cold_wet Treatment AFV03 0.8752591 Wild Cold_wet Control AFV04 0.9180285 Wild Cold_wet Control AFV05 1.0000000 Wild Cold_wet Control AFV06 1.0000000 Wild Cold_wet Control AFV07 0.8460805 Wild Cold_wet Control AFV08 0.7497043 Wild Hot_dry Hot_control AFV09 0.5412999 Wild Hot_dry Hot_control AFV10 0.8002499 Wild Hot_dry Hot_control AFV11 0.8225298 Wild Hot_dry Hot_control AFV12 0.7925988 Wild Hot_dry Hot_control AFV14 0.8106269 Wild Hot_dry Hot_control AFV15 0.9691106 Wild Hot_dry Hot_control AFV16 0.8218990 Wild Hot_dry Hot_control AFV17 0.8091152 Wild Hot_dry Hot_control "],["diversity-analysis.html", "Chapter 4 Diversity analysis 4.1 Calculate diversities 4.2 Does captivity change the microbial community? 4.3 Does the antibiotic administration change the microbial community? 4.4 Does antibiotic administration remove the differences found in the two populations? 4.5 Are the microbial communities similar in both donor samples? 4.6 Does the donor sample maintain the microbial community found in acclimation? 4.7 Is the donor sample microbiota different to recipient microbiota? 4.8 Does FMT change the microbial community over time? 4.9 Do FMT change the microbial community compared to antibiotics and acclimation? 4.10 Is the gut microbiota similar to the donor after FMT?", " Chapter 4 Diversity analysis load(&quot;data/08032025data.Rdata&quot;) load(&quot;data/04032025gifts.Rdata&quot;) load(&quot;data/beta_08032025.Rdata&quot;) genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% select(where(~ sum(.) &gt; 0)) %&gt;% select(-AC85) %&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) table &lt;- genome_counts_filt %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;) master_table &lt;- sample_metadata %&gt;% mutate(sample=Tube_code) %&gt;% mutate(Tube_code=str_remove_all(Tube_code, &quot;_a&quot;)) %&gt;% filter(Tube_code %in% table$sample) %&gt;% mutate(treatment = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point))%&gt;% left_join(., table, by=join_by(&quot;Tube_code&quot; ==&quot;sample&quot;)) sample_metadata &lt;- master_table %&gt;% select(1:13) genome_counts_filt &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0)))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_counts_filtering &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0))) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) #match_data(genome_counts_filtering,genome_tree) genome_metadata &lt;- genome_metadata %&gt;% filter(genome %in% genome_counts_filt$genome) 4.1 Calculate diversities 4.1.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] genome_counts_filt1 &lt;- genome_counts_filt1 %&gt;% remove_rownames() %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% rownames_to_column(., &quot;genome&quot;) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) save(alpha_div, file = &quot;data/alpha_08032025.Rdata&quot;) 4.1.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] save(beta_q0n, beta_q1n, beta_q1p, file = &quot;data/beta_08032025.Rdata&quot;) 4.2 Does captivity change the microbial community? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;) ) 4.2.1 Alpha diversity label_map &lt;- c( &quot;Cold_wet&quot; = &quot;Cold population&quot;, &quot;Hot_dry&quot; = &quot;Warm-population&quot;, &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate( metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;)), time_point = factor(time_point, levels = c(&quot;Wild&quot;, &quot;Acclimation&quot;))) %&gt;% filter(time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_grid(metric ~ Population, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ Population*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(9.4635) ( log ) Formula: richness ~ Population * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 518.4 530.2 -253.2 506.4 47 Scaled residuals: Min 1Q Median 3Q Max -2.07994 -0.34567 0.00022 0.55317 1.22959 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.1126 0.3355 Number of obs: 53, groups: individual, 27 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.7707 0.1208 31.218 &lt; 2e-16 *** PopulationHot_dry 0.6756 0.2006 3.368 0.000757 *** time_pointWild 0.4312 0.1223 3.525 0.000424 *** PopulationHot_dry:time_pointWild -0.5331 0.2048 -2.604 0.009221 ** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) PpltH_ tm_pnW PpltnHt_dry -0.602 time_pntWld -0.557 0.335 PpltnHt_:_W 0.338 -0.526 -0.601 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 4.11 0.100 Inf 3.91 4.31 Wild 4.27 0.099 Inf 4.08 4.47 Results are averaged over the levels of: Population Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - Wild -0.165 0.102 Inf -1.615 0.1063 Results are averaged over the levels of: Population Results are given on the log (not the response) scale. emmeans::emmeans(Modelq0GLMMNB, pairwise ~ Population) $emmeans Population emmean SE df asymp.LCL asymp.UCL Cold_wet 3.99 0.101 Inf 3.79 4.18 Hot_dry 4.40 0.138 Inf 4.12 4.67 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Cold_wet - Hot_dry -0.409 0.171 Inf -2.396 0.0166 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 402.7832 414.1342 -195.3916 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 5.51778 10.54924 Fixed effects: neutral ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 19.37729 2.883717 25 6.719554 0.0000 time_pointWild 17.27881 3.578682 24 4.828260 0.0001 PopulationHot_dry 24.71329 4.905493 25 5.037882 0.0000 time_pointWild:PopulationHot_dry -22.28917 6.126768 24 -3.637998 0.0013 Correlation: (Intr) tm_pnW PpltH_ time_pointWild -0.642 PopulationHot_dry -0.588 0.377 time_pointWild:PopulationHot_dry 0.375 -0.584 -0.632 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.5974563 -0.5606149 0.1376820 0.5636829 1.6703831 Number of Observations: 53 Number of Groups: 27 emmeans::emmeans(Model_neutral, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 31.7 2.45 25 26.7 36.8 Wild 37.9 2.43 24 32.9 42.9 Results are averaged over the levels of: Population Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Wild -6.13 3.06 24 -2.002 0.0567 Results are averaged over the levels of: Population Degrees-of-freedom method: containment emmeans::emmeans(Model_neutral, pairwise ~ Population) $emmeans Population emmean SE df lower.CL upper.CL Cold_wet 28.0 2.21 24 23.5 32.6 Hot_dry 41.6 3.09 24 35.2 48.0 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Cold_wet - Hot_dry -13.6 3.8 24 -3.568 0.0016 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 193.7567 205.1077 -90.87837 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7860836 1.191838 Fixed effects: phylogenetic ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 5.343318 0.3453897 25 15.470404 0.0000 time_pointWild -0.135493 0.4048212 24 -0.334698 0.7408 PopulationHot_dry 1.119702 0.5880336 25 1.904146 0.0685 time_pointWild:PopulationHot_dry -0.602016 0.6924897 24 -0.869350 0.3933 Correlation: (Intr) tm_pnW PpltH_ time_pointWild -0.608 PopulationHot_dry -0.587 0.357 time_pointWild:PopulationHot_dry 0.355 -0.585 -0.596 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.2027374 -0.4577650 0.0610368 0.3504732 1.7675077 Number of Observations: 53 Number of Groups: 27 emmeans::emmeans(Model_neutral, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 31.7 2.45 25 26.7 36.8 Wild 37.9 2.43 24 32.9 42.9 Results are averaged over the levels of: Population Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Wild -6.13 3.06 24 -2.002 0.0567 Results are averaged over the levels of: Population Degrees-of-freedom method: containment emmeans::emmeans(Model_neutral, pairwise ~ Population) $emmeans Population emmean SE df lower.CL upper.CL Cold_wet 28.0 2.21 24 23.5 32.6 Hot_dry 41.6 3.09 24 35.2 48.0 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Cold_wet - Hot_dry -13.6 3.8 24 -3.568 0.0016 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment 4.2.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03445 0.034446 4.6041 999 0.036 * Residuals 51 0.38156 0.007482 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_utdsca0g6vxm709ps9l0, .table th.tinytable_css_utdsca0g6vxm709ps9l0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_u0rf9fj0tq19vluif5r0, .table th.tinytable_css_u0rf9fj0tq19vluif5r0 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 0.5784094 0.03513500 2.236493 0.001 Population 1 2.8737192 0.17456169 11.111600 0.001 time_point:Population 1 0.3378127 0.02052015 1.306196 0.001 Residual 49 12.6725436 0.76978316 NA NA Total 52 16.4624849 1.00000000 NA NA subset_meta_arrange &lt;- column_to_rownames(subset_meta, &quot;Tube_code&quot;) subset_meta_arrange&lt;-subset_meta_arrange[labels(richness),] pairwise &lt;- pairwise.adonis(richness, subset_meta_arrange$Population, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ovz9u1ua3ldefte70j8r, .table th.tinytable_css_ovz9u1ua3ldefte70j8r { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_igpxnlto1smcya10tztx, .table th.tinytable_css_igpxnlto1smcya10tztx { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet vs Hot_dry 1 2.87727 10.8015 0.1747774 0.001 0.001 ** pairwise &lt;- pairwise.adonis(richness, subset_meta_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ixfgrl0ga75v7mbai2z5, .table th.tinytable_css_ixfgrl0ga75v7mbai2z5 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_axr9blon5umlta0lnvh6, .table th.tinytable_css_axr9blon5umlta0lnvh6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Wild vs Acclimation 1 0.5784094 1.857135 0.035135 0.023 0.023 . Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01130 0.0113018 1.2646 999 0.259 Residuals 51 0.45578 0.0089369 adonis2(neutral ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_mpn52zrh9ubsozgv0wwo, .table th.tinytable_css_mpn52zrh9ubsozgv0wwo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ln5f4prwsmnwfx8oy33d, .table th.tinytable_css_ln5f4prwsmnwfx8oy33d { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 0.8535852 0.05306573 3.688514 0.001 Population 1 3.3711165 0.20957575 14.567274 0.001 time_point:Population 1 0.5212922 0.03240772 2.252609 0.001 Residual 49 11.3394385 0.70495080 NA NA Total 52 16.0854325 1.00000000 NA NA subset_meta_arrange &lt;- column_to_rownames(subset_meta, &quot;Tube_code&quot;) subset_meta_arrange&lt;-subset_meta_arrange[labels(neutral),] pairwise &lt;- pairwise.adonis(neutral, subset_meta_arrange$Population, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_zx8h59dzxpfwoab6d3mv, .table th.tinytable_css_zx8h59dzxpfwoab6d3mv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_uffr81uva7nnxijmoksz, .table th.tinytable_css_uffr81uva7nnxijmoksz { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet vs Hot_dry 1 3.369473 13.51397 0.2094736 0.001 0.001 ** pairwise &lt;- pairwise.adonis(neutral, subset_meta_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_57a9sfoleydsz6fflouq, .table th.tinytable_css_57a9sfoleydsz6fflouq { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4g2z7tauscp59jii78k5, .table th.tinytable_css_4g2z7tauscp59jii78k5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Wild vs Acclimation 1 0.8535852 2.858015 0.05306573 0.002 0.002 * Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00207 0.0020675 0.125 999 0.735 Residuals 51 0.84374 0.0165440 adonis2(phylo ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zsbz0a2n1e1wz7ekdynz, .table th.tinytable_css_zsbz0a2n1e1wz7ekdynz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_sdiy5wd2klinvvdj63sd, .table th.tinytable_css_sdiy5wd2klinvvdj63sd { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 0.2282721 0.07008479 4.486412 0.001 Population 1 0.3478468 0.10679697 6.836508 0.001 time_point:Population 1 0.1878081 0.05766139 3.691140 0.003 Residual 49 2.4931580 0.76545685 NA NA Total 52 3.2570850 1.00000000 NA NA subset_meta_arrange &lt;- column_to_rownames(subset_meta, &quot;Tube_code&quot;) subset_meta_arrange&lt;-subset_meta_arrange[labels(phylo),] pairwise &lt;- pairwise.adonis(phylo, subset_meta_arrange$Population, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_wk3z4w5kz35qp6d2879p, .table th.tinytable_css_wk3z4w5kz35qp6d2879p { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_p9ad2hh7iyd39e2gvc5k, .table th.tinytable_css_p9ad2hh7iyd39e2gvc5k { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet vs Hot_dry 1 0.3462509 6.066576 0.106307 0.002 0.002 * pairwise &lt;- pairwise.adonis(phylo, subset_meta_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_f9h8n70xy1gj2qrzw3z5, .table th.tinytable_css_f9h8n70xy1gj2qrzw3z5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7i2iu2qm7x4fvg02t094, .table th.tinytable_css_7i2iu2qm7x4fvg02t094 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Wild vs Acclimation 1 0.2282721 3.84371 0.07008479 0.004 0.004 * dbRDA #Richness cca_ord &lt;- capscale(formula = richness ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta$time_pointWild&quot; = &quot;Wild&quot;, &quot;subset_meta$PopulationHot_dry&quot;=&quot;Warm population&quot;, &quot;subset_meta$time_pointWild:subset_meta$PopulationHot_dry&quot;=&quot;Interaction Wam population&quot;) beta_richness_rda &lt;-CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta$time_pointWild&quot; = &quot;Wild&quot;, &quot;subset_meta$PopulationHot_dry&quot;=&quot;Warm population&quot;, &quot;subset_meta$time_pointWild:subset_meta$PopulationHot_dry&quot;=&quot;Interaction Wam population&quot;) beta_neutral_rda &lt;- CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;))+ geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta$time_pointWild&quot; = &quot;Wild&quot;, &quot;subset_meta$PopulationHot_dry&quot;=&quot;Warm population&quot;, &quot;subset_meta$time_pointWild:subset_meta$PopulationHot_dry&quot;=&quot;Interaction Wam population&quot;) beta_phylogenetic_rda&lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_rda, beta_neutral_rda, beta_phylogenetic_rda, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 4.2.3 Cold population 4.2.3.1 Structural zeros wild_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;Wild&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_wild = all(c_across(all_of(wild_samples)) == 0)) %&gt;% mutate(all_zeros_acclimation= all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(average_wild = mean(c_across(all_of(wild_samples)), na.rm = TRUE)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_wild == TRUE || all_zeros_acclimation==TRUE) %&gt;% mutate(present = case_when( all_zeros_wild &amp; !all_zeros_acclimation ~ &quot;acclimation&quot;, !all_zeros_wild &amp; all_zeros_acclimation ~ &quot;wild&quot;, !all_zeros_wild &amp; !all_zeros_acclimation ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_wild, average_acclimation)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Wild structural_zeros %&gt;% filter(present==&quot;wild&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 5 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 7 2 p__Bacillota 1 3 p__Bacillota_B 1 4 p__Bacteroidota 1 5 p__Spirochaetota 1 Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% select(1,5:10) # A tibble: 14 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_12:bin_000001 p__Pseudomonadota c__Gammaproteobacteria o__Pseudomonadales f__Moraxellaceae g__Acinetobacter s__Acinetobacter johnsonii 2 AH1_2nd_15:bin_000001 p__Pseudomonadota c__Alphaproteobacteria o__Rhizobiales f__Rhizobiaceae g__Agrobacterium s__Agrobacterium tumefaciens_H 3 AH1_2nd_17:bin_000010 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Mucinivorans s__ 4 AH1_2nd_17:bin_000038 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides_G s__ 5 AH1_2nd_20:bin_000014 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Citrobacter s__Citrobacter portucalensis 6 AH1_2nd_20:bin_000061 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus s__ 7 AH1_2nd_20:bin_000073 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus s__Enterococcus sp002174455 8 LI1_2nd_10:bin_000001 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus_A s__Enterococcus_A raffinosus 9 LI1_2nd_10:bin_000017 p__Chlamydiota c__Chlamydiia o__Chlamydiales f__Chlamydiaceae g__ s__ 10 LI1_2nd_2:bin_000039 p__Bacillota_A c__Clostridia o__TANB77 f__CAG-508 g__ s__ 11 LI1_2nd_7:bin_000045 p__Bacillota_A c__Clostridia o__Oscillospirales f__Acutalibacteraceae g__ s__ 12 LI1_2nd_7:bin_000074 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Escherichia s__Escherichia coli 13 LI1_2nd_8:bin_000030 p__Actinomycetota c__Actinomycetia o__Mycobacteriales f__Mycobacteriaceae g__Corynebacterium s__ 14 LI1_2nd_8:bin_000079 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Citrobacter_A s__Citrobacter_A amalonaticus Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 4.2.3.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_wild_accl.Rdata&quot;) load(&quot;data/ancombc_wild_accl.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_time_point1_Acclimation, p_time_point1_Acclimation) %&gt;% filter(p_time_point1_Acclimation &lt; 0.05) %&gt;% dplyr::arrange(p_time_point1_Acclimation) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point1_Acclimation) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point1_Acclimation, y=forcats::fct_reorder(genome,lfc_time_point1_Acclimation), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 16 2 Bacteroidota 9 3 Bacillota_C 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota_A MGBC140009 2 Bacillota_A 3 Bacillota_A 4 Bacillota_A Negativibacillus 5 Bacteroidota Parabacteroides 6 Bacteroidota Bacteroides 7 Bacillota_A Hungatella 8 Bacteroidota Bacteroides 9 Bacteroidota Parabacteroides 10 Bacteroidota Parabacteroides 11 Bacteroidota Bacteroides 12 Bacillota_A 13 Bacteroidota Bacteroides 14 Bacillota_A 15 Bacillota_A Copromonas 16 Bacillota_A Enterocloster 17 Bacillota_A Velocimicrobium 18 Bacillota_A CAG-95 19 Bacillota_C 20 Bacteroidota Bacteroides 21 Bacillota_A 22 Bacillota_A Copromonas 23 Bacteroidota Bacteroides Bacteroides thetaiotaomicron 24 Bacillota_A Pseudoflavonifractor 25 Bacillota_A Enterocloster 26 Bacillota_A JALFVM01 ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% count(genus, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) genus sample_count 1 6 2 Bacteroides 6 3 Parabacteroides 3 4 Copromonas 2 5 Enterocloster 2 6 CAG-95 1 7 Hungatella 1 8 JALFVM01 1 9 MGBC140009 1 10 Negativibacillus 1 11 Pseudoflavonifractor 1 12 Velocimicrobium 1 4.2.3.3 Differences in the functional capacity GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.2.3.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.335 0.0324 2 Wild 0.350 0.0237 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94347, p-value = 0.07144 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 114, p-value = 0.2066 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=c(&#39;#008080&#39;, &#39;#00808050&#39;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) 4.2.3.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.330 0.0320 2 Wild 0.346 0.0196 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94507, p-value = 0.07998 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 100, p-value = 0.08313 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_dw9r29ufycf36vdimw2y, .table th.tinytable_css_dw9r29ufycf36vdimw2y { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_133ir4vqtbsgp1hzh9zd, .table th.tinytable_css_133ir4vqtbsgp1hzh9zd { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Code_function Acclimation Wild Function Difference treatment B03 0.1097356 0.1256091 Amino acid derivative biosynthesis -0.0158735 Wild D03 0.2921075 0.3442827 Sugar degradation -0.0521752 Wild 4.2.4 Warm population 4.2.4.1 Structural zeros wild_samples_warm &lt;- sample_metadata %&gt;% filter(Population == &quot;Hot_dry&quot; &amp; time_point == &quot;Wild&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() acclimation_samples_warm &lt;- sample_metadata %&gt;% filter(Population == &quot;Hot_dry&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_wild_warm = all(c_across(all_of(wild_samples_warm)) == 0)) %&gt;% mutate(all_zeros_acclimation_warm= all(c_across(all_of(acclimation_samples_warm)) == 0)) %&gt;% mutate(average_wild_warm = mean(c_across(all_of(wild_samples_warm)), na.rm = TRUE)) %&gt;% mutate(average_acclimation_warm = mean(c_across(all_of(acclimation_samples_warm)), na.rm = TRUE)) %&gt;% filter(all_zeros_wild_warm == TRUE || all_zeros_acclimation_warm==TRUE) %&gt;% mutate(present = case_when( all_zeros_wild_warm &amp; !all_zeros_acclimation_warm ~ &quot;acclimation&quot;, !all_zeros_wild_warm &amp; all_zeros_acclimation_warm ~ &quot;wild&quot;, !all_zeros_wild_warm &amp; !all_zeros_acclimation_warm ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_wild_warm, average_acclimation_warm)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Wild structural_zeros %&gt;% filter(present==&quot;wild&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 7 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 11 2 p__Bacillota 4 3 p__Pseudomonadota 4 4 p__Bacillota_C 2 5 p__Bacteroidota 1 6 p__Desulfobacterota 1 7 p__Fusobacteriota 1 Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% select(1,5:10) # A tibble: 32 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_10:bin_000010 p__Cyanobacteriota c__Vampirovibrionia o__Gastranaerophilales f__Gastranaerophilaceae g__CALURL01 s__ 2 AH1_2nd_12:bin_000001 p__Pseudomonadota c__Gammaproteobacteria o__Pseudomonadales f__Moraxellaceae g__Acinetobacter s__Acinetobacter johnsonii 3 AH1_2nd_14:bin_000015 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ 4 AH1_2nd_14:bin_000063 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Blautia_A s__ 5 AH1_2nd_15:bin_000001 p__Pseudomonadota c__Alphaproteobacteria o__Rhizobiales f__Rhizobiaceae g__Agrobacterium s__Agrobacterium tumefaciens_H 6 AH1_2nd_16:bin_000033 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__ g__ s__ 7 AH1_2nd_16:bin_000096 p__Bacillota_A c__Clostridia o__Oscillospirales f__Ruminococcaceae g__Ruthenibacterium s__ 8 AH1_2nd_17:bin_000015 p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__ s__ 9 AH1_2nd_17:bin_000023 p__Bacillota c__Bacilli o__Erysipelotrichales f__Coprobacillaceae g__Coprobacillus s__ 10 AH1_2nd_18:bin_000039 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Alistipes s__ # ℹ 22 more rows Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 4.2.5 Differential abundance analysis: composition phylo_samples_warm &lt;- sample_metadata %&gt;% filter(Population == &quot;Hot_dry&quot; &amp; time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome_warm &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples_warm)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy_warm &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome_warm)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered_warm &lt;- phyloseq(phylo_genome_warm, phylo_taxonomy_warm, phylo_samples_warm) ancom_rand_output_warm = ancombc2(data = physeq_genome_filtered_warm, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_warm, file = &quot;data/ancombc_wild_accl_warm.Rdata&quot;) load(&quot;data/ancombc_wild_accl_warm.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered_warm@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_warm$res %&gt;% dplyr::select(taxon, lfc_time_point1_Acclimation, p_time_point1_Acclimation) %&gt;% filter(p_time_point1_Acclimation &lt; 0.05) %&gt;% dplyr::arrange(p_time_point1_Acclimation) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point1_Acclimation) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point1_Acclimation, y=forcats::fct_reorder(genome,lfc_time_point1_Acclimation), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% select(phylum, genus, species) ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% count(genus, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) 4.2.6 Differences in the functional capacity GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Hot_dry&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.2.6.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.355 0.0228 2 Wild 0.317 0.0335 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94062, p-value = 0.297 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 68, p-value = 0.01419 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=c(&quot;#d57d2c50&quot;,&quot;#d57d2c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) 4.2.6.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.348 0.0158 2 Wild 0.327 0.0245 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.95485, p-value = 0.5061 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 61, p-value = 0.07701 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_wjlu3dxpkwf939lo41iy, .table th.tinytable_css_wjlu3dxpkwf939lo41iy { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ibyf51724v0p3hnlqfc4, .table th.tinytable_css_ibyf51724v0p3hnlqfc4 { border-bottom: solid #d3d8dc 0.1em; } Code_function Acclimation Wild Function Difference treatment S02 0.1699218 0.2472264 Appendages -0.0773046 Wild 4.3 Does the antibiotic administration change the microbial community? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) 4.3.1 Alpha diversity label_map &lt;- c( &quot;Cold_wet&quot; = &quot;Cold population&quot;, &quot;Hot_dry&quot; = &quot;Warm-population&quot;, &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) %&gt;% ggplot(aes(y = value, x = time_point, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_grid(metric ~ Population, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ time_point*Population+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(5.1645) ( log ) Formula: richness ~ time_point * Population + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 434.8 446.1 -211.4 422.8 43 Scaled residuals: Min 1Q Median 3Q Max -1.61979 -0.56608 0.06074 0.51882 2.39923 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.2193 0.4683 Number of obs: 49, groups: individual, 27 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.7459 0.1623 23.073 &lt; 2e-16 *** time_pointAntibiotics -1.1523 0.1862 -6.190 6.02e-10 *** PopulationHot_dry 0.7055 0.2719 2.595 0.00946 ** time_pointAntibiotics:PopulationHot_dry -0.3586 0.3037 -1.181 0.23769 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pnA PpltH_ tm_pntAntbt -0.466 PpltnHt_dry -0.598 0.278 tm_pntA:PH_ 0.292 -0.611 -0.461 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 4.10 0.136 Inf 3.83 4.36 Antibiotics 2.77 0.151 Inf 2.47 3.06 Results are averaged over the levels of: Population Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - Antibiotics 1.33 0.152 Inf 8.751 &lt;.0001 Results are averaged over the levels of: Population Results are given on the log (not the response) scale. emmeans::emmeans(Modelq0GLMMNB, pairwise ~ Population) $emmeans Population emmean SE df asymp.LCL asymp.UCL Cold_wet 3.17 0.145 Inf 2.89 3.45 Hot_dry 3.70 0.196 Inf 3.31 4.08 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Cold_wet - Hot_dry -0.526 0.243 Inf -2.168 0.0302 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 342.5018 353.3418 -165.2509 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.282619 7.923552 Fixed effects: neutral ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 19.11713 2.078908 25 9.195758 0e+00 time_pointAntibiotics -11.46317 2.832826 20 -4.046551 6e-04 PopulationHot_dry 24.97345 3.534826 25 7.064972 0e+00 time_pointAntibiotics:PopulationHot_dry -20.91701 4.793363 20 -4.363745 3e-04 Correlation: (Intr) tm_pnA PpltH_ time_pointAntibiotics -0.633 PopulationHot_dry -0.588 0.373 time_pointAntibiotics:PopulationHot_dry 0.374 -0.591 -0.632 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.8258256 -0.5685215 -0.1867832 0.5823712 2.0651455 Number of Observations: 49 Number of Groups: 27 emmeans::emmeans(Model_neutral, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 31.60 1.77 25 27.96 35.2 Antibiotics 9.68 1.87 20 5.77 13.6 Results are averaged over the levels of: Population Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 21.9 2.4 20 9.147 &lt;.0001 Results are averaged over the levels of: Population Degrees-of-freedom method: containment emmeans::emmeans(Model_neutral, pairwise ~ Population) $emmeans Population emmean SE df lower.CL upper.CL Cold_wet 13.4 1.61 20 10.0 16.7 Hot_dry 27.9 2.22 20 23.3 32.5 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Cold_wet - Hot_dry -14.5 2.74 20 -5.288 &lt;.0001 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 203.6546 214.4946 -95.8273 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7173285 1.688356 Fixed effects: phylogenetic ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 5.365728 0.4446271 25 12.067930 0.0000 time_pointAntibiotics -0.761455 0.6038652 20 -1.260969 0.2218 PopulationHot_dry 1.097291 0.7560383 25 1.451370 0.1591 time_pointAntibiotics:PopulationHot_dry -0.702255 1.0216421 20 -0.687379 0.4997 Correlation: (Intr) tm_pnA PpltH_ time_pointAntibiotics -0.631 PopulationHot_dry -0.588 0.371 time_pointAntibiotics:PopulationHot_dry 0.373 -0.591 -0.629 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.85993684 -0.51436620 -0.05130501 0.48944142 1.80209573 Number of Observations: 49 Number of Groups: 27 emmeans::emmeans(Model_neutral, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 31.60 1.77 25 27.96 35.2 Antibiotics 9.68 1.87 20 5.77 13.6 Results are averaged over the levels of: Population Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 21.9 2.4 20 9.147 &lt;.0001 Results are averaged over the levels of: Population Degrees-of-freedom method: containment emmeans::emmeans(Model_neutral, pairwise ~ Population) $emmeans Population emmean SE df lower.CL upper.CL Cold_wet 13.4 1.61 20 10.0 16.7 Hot_dry 27.9 2.22 20 23.3 32.5 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Cold_wet - Hot_dry -14.5 2.74 20 -5.288 &lt;.0001 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment 4.3.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03530 0.035300 10.073 999 0.004 ** Residuals 47 0.16471 0.003505 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_uv59t52ksrmw5owv0udm, .table th.tinytable_css_uv59t52ksrmw5owv0udm { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_hkcenw7bfskz1yswgm4u, .table th.tinytable_css_hkcenw7bfskz1yswgm4u { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value time_point 1 1.9348458 0.1002347 6.065418 0.001 Population 1 2.1356198 0.1106358 6.694811 0.001 time_point:Population 1 0.8778553 0.0454773 2.751930 0.004 Residual 45 14.3548318 0.7436522 NA NA Total 48 19.3031527 1.0000000 NA NA subset_meta_arrange &lt;- column_to_rownames(subset_meta, &quot;Tube_code&quot;) subset_meta_arrange&lt;-subset_meta_arrange[labels(richness),] pairwise &lt;- pairwise.adonis(richness, subset_meta_arrange$Population, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_iwseo2i3dzwlo93meg7t, .table th.tinytable_css_iwseo2i3dzwlo93meg7t { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_90i75o0tvsa4g1ko4inq, .table th.tinytable_css_90i75o0tvsa4g1ko4inq { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet vs Hot_dry 1 2.135115 5.845187 0.1106096 0.001 0.001 ** pairwise &lt;- pairwise.adonis(richness, subset_meta_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_u657upyvphgr76119zp5, .table th.tinytable_css_u657upyvphgr76119zp5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5vn4tn8r6rjb2sl328q8, .table th.tinytable_css_5vn4tn8r6rjb2sl328q8 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs Antibiotics 1 1.934846 5.235844 0.1002347 0.001 0.001 ** Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.051657 0.051657 9.9224 999 0.003 ** Residuals 47 0.244689 0.005206 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ygx3wmgqkeik7xnx8kj5, .table th.tinytable_css_ygx3wmgqkeik7xnx8kj5 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_49lkrq1olunvxckmxd43, .table th.tinytable_css_49lkrq1olunvxckmxd43 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value time_point 1 2.0429592 0.11061666 7.254623 0.001 Population 1 2.8764490 0.15574623 10.214376 0.001 time_point:Population 1 0.8770558 0.04748846 3.114457 0.002 Residual 45 12.6723552 0.68614864 NA NA Total 48 18.4688192 1.00000000 NA NA subset_meta_arrange &lt;- column_to_rownames(subset_meta, &quot;Tube_code&quot;) subset_meta_arrange&lt;-subset_meta_arrange[labels(neutral),] pairwise &lt;- pairwise.adonis(neutral, subset_meta_arrange$Population, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_aq89ff818bqj8kdq7sv9, .table th.tinytable_css_aq89ff818bqj8kdq7sv9 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2dn1ycx62752oblf7bwx, .table th.tinytable_css_2dn1ycx62752oblf7bwx { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet vs Hot_dry 1 2.876596 8.670991 0.1557542 0.001 0.001 ** pairwise &lt;- pairwise.adonis(neutral, subset_meta_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_mst8b1dita3xgpwuc1u4, .table th.tinytable_css_mst8b1dita3xgpwuc1u4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_jhrqdzj44rkswattv42a, .table th.tinytable_css_jhrqdzj44rkswattv42a { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs Antibiotics 1 2.042959 5.845605 0.1106167 0.001 0.001 ** Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.67439 0.67439 55.932 999 0.001 *** Residuals 47 0.56670 0.01206 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_wb6l0kv8wjvpkglsznnc, .table th.tinytable_css_wb6l0kv8wjvpkglsznnc { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_lvzgkyesz94nfqgbz3ko, .table th.tinytable_css_lvzgkyesz94nfqgbz3ko { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value time_point 1 1.8783556 0.23032747 16.358708 0.001 Population 1 0.7551942 0.09260332 6.577030 0.001 time_point:Population 1 0.3545686 0.04347786 3.087959 0.022 Residual 45 5.1670341 0.63359135 NA NA Total 48 8.1551525 1.00000000 NA NA subset_meta_arrange &lt;- column_to_rownames(subset_meta, &quot;Tube_code&quot;) subset_meta_arrange&lt;-subset_meta_arrange[labels(phylo),] pairwise &lt;- pairwise.adonis(phylo, subset_meta_arrange$Population, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_65o5ez856gcl5w5rcx4h, .table th.tinytable_css_65o5ez856gcl5w5rcx4h { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3d52vqythn4za4j0yvbs, .table th.tinytable_css_3d52vqythn4za4j0yvbs { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet vs Hot_dry 1 0.753589 4.785297 0.09240649 0.001 0.001 ** pairwise &lt;- pairwise.adonis(phylo, subset_meta_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xthaba80aunmcv776wyl, .table th.tinytable_css_xthaba80aunmcv776wyl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_6q65cdwjee3nr9k0xvn6, .table th.tinytable_css_6q65cdwjee3nr9k0xvn6 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs Antibiotics 1 1.878356 14.06493 0.2303275 0.001 0.001 ** dbRDA #Richness cca_ord &lt;- capscale(formula = richness ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta$time_pointAntibiotics&quot; = &quot;Antibiotics&quot;, &quot;subset_meta$PopulationHot_dry&quot;=&quot;Warm population&quot;, &quot;subset_meta$time_pointAntibiotics:subset_meta$PopulationHot_dry&quot;=&quot;Interaction Wam population&quot;) beta_richness_rda &lt;-CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta$time_pointAntibiotics&quot; = &quot;Antibiotics&quot;, &quot;subset_meta$PopulationHot_dry&quot;=&quot;Warm population&quot;, &quot;subset_meta$time_pointAntibiotics:subset_meta$PopulationHot_dry&quot;=&quot;Interaction Wam population&quot;) beta_neutral_rda &lt;- CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;))+ geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta$time_pointAntibiotics&quot; = &quot;Antibiotics&quot;, &quot;subset_meta$PopulationHot_dry&quot;=&quot;Warm population&quot;, &quot;subset_meta$time_pointAntibiotics:subset_meta$PopulationHot_dry&quot;=&quot;Interaction Wam population&quot;) beta_phylogenetic_rda&lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_rda, beta_neutral_rda, beta_phylogenetic_rda, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 4.3.3 Cold population 4.3.3.1 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 9 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 43 2 p__Bacteroidota 15 3 p__Bacillota 8 4 p__Pseudomonadota 7 5 p__Cyanobacteriota 3 6 p__Verrucomicrobiota 2 7 p__Bacillota_B 1 8 p__Bacillota_C 1 9 p__Fusobacteriota 1 Antibiotics structural_zeros %&gt;% filter(present==&quot;antibiotics&quot;) %&gt;% select(1,5:10) # A tibble: 4 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_7:bin_000003 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 2 LI1_2nd_7:bin_000001 p__Bacillota_A c__Clostridia o__Clostridiales f__Clostridiaceae g__Sarcina s__ 3 AH1_2nd_7:bin_000055 p__Bacillota c__Bacilli o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma s__ 4 AH1_2nd_13:bin_000025 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 4.3.3.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_antib_accl.Rdata&quot;) load(&quot;data/ancombc_antib_accl.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_time_point2_Antibiotics, p_time_point2_Antibiotics) %&gt;% filter(p_time_point2_Antibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_point2_Antibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point2_Antibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point2_Antibiotics, y=forcats::fct_reorder(genome,lfc_time_point2_Antibiotics), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 14 2 Bacillota_A 4 3 Bacillota 2 4 Campylobacterota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Campylobacterota Helicobacter_J 2 Bacillota_A 3 Bacteroidota Bacteroides 4 Bacteroidota Odoribacter 5 Bacteroidota Bacteroides 6 Bacillota Coprobacillus 7 Bacillota 8 Bacteroidota Phocaeicola 9 Bacteroidota Bacteroides 10 Bacteroidota Phocaeicola 11 Bacteroidota Odoribacter 12 Bacteroidota Bacteroides 13 Bacteroidota Bacteroides 14 Bacteroidota Parabacteroides 15 Bacteroidota 16 Bacteroidota Parabacteroides 17 Bacillota_A 18 Bacteroidota Alistipes 19 Bacillota_A 20 Bacillota_A 21 Bacteroidota Odoribacter ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(genus, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) genus sample_count 1 6 2 Bacteroides 5 3 Odoribacter 3 4 Parabacteroides 2 5 Phocaeicola 2 6 Alistipes 1 7 Coprobacillus 1 8 Helicobacter_J 1 4.3.3.3 Differences in the functional capacity GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.3.3.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.335 0.0324 2 Antibiotics 0.247 0.136 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94332, p-value = 0.09304 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 190, p-value = 0.01768 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Antibiotics)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Antibiotics&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=c(&#39;#008080&#39;, &#39;#00808050&#39;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) 4.3.3.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.330 0.0320 2 Antibiotics 0.256 0.126 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.95742, p-value = 0.2331 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 188, p-value = 0.02195 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_n9j5hy40m6uf4jmvhfmw, .table th.tinytable_css_n9j5hy40m6uf4jmvhfmw { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_m7u8bi0hn5vgmgno0dz0, .table th.tinytable_css_m7u8bi0hn5vgmgno0dz0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Code_function Acclimation Antibiotics Function Difference treatment B06 0.68110280 0.47325490 Organic anion biosynthesis 0.20784790 Acclimation B02 0.59963040 0.41562100 Amino acid biosynthesis 0.18400940 Acclimation D02 0.38587770 0.20636760 Polysaccharide degradation 0.17951010 Acclimation S03 0.27103471 0.09357224 Spore 0.17746247 Acclimation B01 0.84215140 0.69078910 Nucleic acid biosynthesis 0.15136230 Acclimation B07 0.44558700 0.30432910 Vitamin biosynthesis 0.14125790 Acclimation B08 0.44596150 0.32044710 Aromatic compound biosynthesis 0.12551440 Acclimation D09 0.25533360 0.13438350 Antibiotic degradation 0.12095010 Acclimation B04 0.54457570 0.42921780 SCFA biosynthesis 0.11535790 Acclimation D03 0.29210750 0.20698550 Sugar degradation 0.08512200 Acclimation D05 0.28856110 0.22258820 Amino acid degradation 0.06597290 Acclimation B10 0.05947806 0.03621687 Antibiotic biosynthesis 0.02326119 Acclimation 4.3.4 Warm population 4.3.4.1 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Hot_dry&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Hot_dry&quot; &amp; time_point == &quot;Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 12 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 63 2 p__Bacteroidota 32 3 p__Bacillota 16 4 p__Cyanobacteriota 9 5 p__Pseudomonadota 7 6 p__Bacillota_B 3 7 p__Desulfobacterota 3 8 p__Bacillota_C 2 9 p__Verrucomicrobiota 2 10 p__Actinomycetota 1 11 p__Campylobacterota 1 12 p__Elusimicrobiota 1 Antibiotics structural_zeros %&gt;% filter(present==&quot;antibiotics&quot;) %&gt;% select(1,5:10) # A tibble: 7 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_7:bin_000003 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 2 LI1_2nd_8:bin_000030 p__Actinomycetota c__Actinomycetia o__Mycobacteriales f__Mycobacteriaceae g__Corynebacterium s__ 3 LI1_2nd_8:bin_000077 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Tannerellaceae g__Parabacteroides s__Parabacteroides sp003480915 4 LI1_2nd_5:bin_000032 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA1242 g__Caccovivens s__ 5 AH1_2nd_18:bin_000013 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Tannerellaceae g__Parabacteroides s__ 6 LI1_2nd_5:bin_000069 p__Bacillota c__Bacilli o__RF39 f__UBA660 g__ s__ 7 AH1_2nd_20:bin_000061 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 65 × 3 trait p_value p_adjust &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 B0101 0.00280 0.0184 2 B0103 0.0196 0.0437 3 B0105 0.00559 0.0184 4 B0106 0.00559 0.0184 5 B0205 0.00280 0.0184 6 B0207 0.0112 0.0280 7 B0212 0.00559 0.0184 8 B0214 0.00662 0.0184 9 B0216 0.00559 0.0184 10 B0307 0.0196 0.0437 # ℹ 55 more rows 4.3.4.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Hot_dry&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_antib_accl_warm.Rdata&quot;) load(&quot;data/ancombc_antib_accl_warm.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_time_point2_Antibiotics, p_time_point2_Antibiotics) %&gt;% filter(p_time_point2_Antibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_point2_Antibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point2_Antibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point2_Antibiotics, y=forcats::fct_reorder(genome,lfc_time_point2_Antibiotics), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% select(phylum, genus, species) ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(genus, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) 4.3.4.3 Differences in the functional capacity GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.3.4.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.335 0.0324 2 Antibiotics 0.247 0.136 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94332, p-value = 0.09304 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 190, p-value = 0.01768 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Antibiotics)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Antibiotics&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=c(&quot;#d57d2c50&quot;,&quot;#d57d2c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) 4.3.4.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.330 0.0320 2 Antibiotics 0.256 0.126 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.95742, p-value = 0.2331 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 188, p-value = 0.02195 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_c5gvoblrf7s2iom06166, .table th.tinytable_css_c5gvoblrf7s2iom06166 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0mb5y9iurb0d5eqpnuc7, .table th.tinytable_css_0mb5y9iurb0d5eqpnuc7 { border-bottom: solid #d3d8dc 0.1em; } Code_function Acclimation Antibiotics Function Difference treatment B06 0.68110280 0.47325490 Organic anion biosynthesis 0.20784790 Acclimation B02 0.59963040 0.41562100 Amino acid biosynthesis 0.18400940 Acclimation D02 0.38587770 0.20636760 Polysaccharide degradation 0.17951010 Acclimation S03 0.27103471 0.09357224 Spore 0.17746247 Acclimation B01 0.84215140 0.69078910 Nucleic acid biosynthesis 0.15136230 Acclimation B07 0.44558700 0.30432910 Vitamin biosynthesis 0.14125790 Acclimation B08 0.44596150 0.32044710 Aromatic compound biosynthesis 0.12551440 Acclimation D09 0.25533360 0.13438350 Antibiotic degradation 0.12095010 Acclimation B04 0.54457570 0.42921780 SCFA biosynthesis 0.11535790 Acclimation D03 0.29210750 0.20698550 Sugar degradation 0.08512200 Acclimation D05 0.28856110 0.22258820 Amino acid degradation 0.06597290 Acclimation B10 0.05947806 0.03621687 Antibiotic biosynthesis 0.02326119 Acclimation 4.4 Does antibiotic administration remove the differences found in the two populations? 4.4.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.001165318 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.0003462674 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.06628442 4.4.2 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point == &quot;Antibiotics&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;, &quot;neutral&quot;))) %&gt;% filter(metric!=&quot;phylogenetic&quot;) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ facet_grid( ~ metric, scales = &quot;free_y&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;))) %&gt;% filter(metric!=&quot;phylogenetic&quot;) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.4.3 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;Antibiotics&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;Antibiotics&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.015377 0.0153774 6.8934 999 0.021 * Residuals 21 0.046845 0.0022307 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nwuy27654kud1dccrz1r, .table th.tinytable_css_nwuy27654kud1dccrz1r { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_5lref5ghx3ynbf23mzlq, .table th.tinytable_css_5lref5ghx3ynbf23mzlq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.361743 0.1533845 3.80465 0.001 Residual 21 7.516224 0.8466155 NA NA Total 22 8.877966 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.030649 0.0306488 3.8694 999 0.06 . Residuals 21 0.166339 0.0079209 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_x96xfsnxueo3pv0p3mis, .table th.tinytable_css_x96xfsnxueo3pv0p3mis { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_17wj55t6y745yj6c4k3g, .table th.tinytable_css_17wj55t6y745yj6c4k3g { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.787698 0.208772 5.541022 0.001 Residual 21 6.775221 0.791228 NA NA Total 22 8.562919 1.000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.012165 0.012165 0.9979 999 0.33 Residuals 21 0.256012 0.012191 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_kccbz83mu3jwscw0apih, .table th.tinytable_css_kccbz83mu3jwscw0apih { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_inrpoaskmkikh0bq72n2, .table th.tinytable_css_inrpoaskmkikh0bq72n2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.8970751 0.1890846 4.896659 0.001 Residual 21 3.8472307 0.8109154 NA NA Total 22 4.7443057 1.0000000 NA NA 4.5 Are the microbial communities similar in both donor samples? 4.5.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;)) samples_to_keep &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;))%&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;Transplant1&quot;, &quot;Transplant2&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;time_point&quot;, breaks=c(&quot;Transplant1&quot;,&quot;Transplant2&quot;), values=c(&#39;#d5992c&#39;, &quot;#d5b52c&quot;)) + scale_fill_manual(name=&quot;time_point&quot;, breaks=c(&quot;Transplant1&quot;,&quot;Transplant2&quot;), values=c(&#39;#d5992c50&#39;, &quot;#d5b52c50&quot;)) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(17.9668) ( log ) Formula: richness ~ time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 150.4 153.3 -71.2 142.4 11 Scaled residuals: Min 1Q Median 3Q Max -2.02956 -0.52933 0.03513 0.56378 1.56130 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.009989 0.09995 Number of obs: 15, groups: individual, 8 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.60703 0.09905 46.514 &lt;2e-16 *** time_pointTransplant2 0.05482 0.13299 0.412 0.68 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pntTrns2 -0.624 Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 115.9183 118.1781 -53.95914 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 9.533528 10.15744 Fixed effects: neutral ~ time_point Value Std.Error DF t-value p-value (Intercept) 43.94053 4.925212 7 8.921551 0.0000 time_pointTransplant2 4.31623 5.338413 6 0.808523 0.4497 Correlation: (Intr) time_pointTransplant2 -0.491 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.57714267 -0.56764018 0.05406399 0.55332481 1.12750552 Number of Observations: 15 Number of Groups: 8 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 41.16537 43.42517 -16.58269 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.16159 0.3042944 Fixed effects: phylogenetic ~ time_point Value Std.Error DF t-value p-value (Intercept) 5.785003 0.4245418 7 13.626462 0.0000 time_pointTransplant2 -0.018098 0.1623255 6 -0.111494 0.9149 Correlation: (Intr) time_pointTransplant2 -0.168 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.2428123 -0.3756145 -0.0502414 0.4569146 1.3175579 Number of Observations: 15 Number of Groups: 8 4.5.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00014 0.0001396 0.0173 999 0.907 Residuals 13 0.10481 0.0080621 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_8zw6h66hnb8n54h1v29x, .table th.tinytable_css_8zw6h66hnb8n54h1v29x { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_33f850qh1c9fvp6v5ugb, .table th.tinytable_css_33f850qh1c9fvp6v5ugb { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.06889268 0.03010712 0.4035421 0.9375 Residual 13 2.21935895 0.96989288 NA NA Total 14 2.28825162 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000655 0.0006546 0.0514 999 0.835 Residuals 13 0.165409 0.0127237 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ln5u69ywx8p8l320sx7w, .table th.tinytable_css_ln5u69ywx8p8l320sx7w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8juc8xaea9riuy0wvy3i, .table th.tinytable_css_8juc8xaea9riuy0wvy3i { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.09294671 0.03882177 0.5250671 0.7265625 Residual 13 2.30124351 0.96117823 NA NA Total 14 2.39419022 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.003691 0.0036912 0.3071 999 0.674 Residuals 13 0.156266 0.0120205 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_gtzgdhg8loi4sj3myifz, .table th.tinytable_css_gtzgdhg8loi4sj3myifz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_776055k0enxh35e6wa97, .table th.tinytable_css_776055k0enxh35e6wa97 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.009773632 0.01921019 0.2546239 0.7734375 Residual 13 0.498999565 0.98078981 NA NA Total 14 0.508773196 1.00000000 NA NA 4.6 Does the donor sample maintain the microbial community found in acclimation? sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Transplant1&quot;, &quot;Transplant2&quot;) ~ &quot;Transplant&quot;, TRUE ~ treatment )) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Transplant1&quot;, &quot;Transplant2&quot;) ~ &quot;Transplant&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) 4.6.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&quot;#d57d2c&quot;, &quot;#d5b52c&quot;)) + scale_fill_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&quot;#d57d2c50&quot;, &quot;#d5b52c50&quot;)) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(19.6072) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 228.0 232.7 -110.0 220.0 20 Scaled residuals: Min 1Q Median 3Q Max -2.37872 -0.53180 0.06467 0.46904 1.76837 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0 0 Number of obs: 24, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.4569 0.0834 53.441 &lt;2e-16 *** treatmentTransplant 0.1855 0.1049 1.769 0.0769 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) trtmntTrnsp -0.795 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 185.3367 189.7009 -88.66837 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.001909967 12.18199 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 44.09058 4.060663 14 10.857976 0.0000 treatmentTransplant 1.80350 5.136377 14 0.351122 0.7307 Correlation: (Intr) treatmentTransplant -0.791 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.66610957 -0.48314823 -0.03902931 0.62479437 2.02597977 Number of Observations: 24 Number of Groups: 9 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 80.6646 85.02877 -36.3323 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7197786 0.9593315 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 6.463020 0.3997775 14 16.166544 0.0000 treatmentTransplant -0.577492 0.4112749 14 -1.404151 0.1821 Correlation: (Intr) treatmentTransplant -0.622 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.329685717 -0.568101055 -0.001989187 0.552370170 1.529548991 Number of Observations: 24 Number of Groups: 9 4.6.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00836 0.0083600 1.4409 999 0.273 Residuals 22 0.12764 0.0058019 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_li94fsrlzavsvhxjtax6, .table th.tinytable_css_li94fsrlzavsvhxjtax6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_edldwm33sjjb5n01cync, .table th.tinytable_css_edldwm33sjjb5n01cync { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.2657351 0.06396199 1.503319 0.111 Residual 22 3.8888430 0.93603801 NA NA Total 23 4.1545781 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000661 0.0006614 0.0736 999 0.798 Residuals 22 0.197804 0.0089911 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_yj7egyt5uojis9ziqani, .table th.tinytable_css_yj7egyt5uojis9ziqani { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_wry7bajtn57folddsb9h, .table th.tinytable_css_wry7bajtn57folddsb9h { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3164816 0.07596593 1.808646 0.078 Residual 22 3.8496178 0.92403407 NA NA Total 23 4.1660995 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00204 0.0020405 0.2622 999 0.683 Residuals 22 0.17118 0.0077807 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_hlup19s7tjq98vztvcc2, .table th.tinytable_css_hlup19s7tjq98vztvcc2 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3jv73z0qpt8vh0ujw2qv, .table th.tinytable_css_3jv73z0qpt8vh0ujw2qv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.0412056 0.056244 1.31111 0.235 Residual 22 0.6914166 0.943756 NA NA Total 23 0.7326222 1.000000 NA NA p0&lt;-richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&quot;#d57d2c&quot;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p1&lt;-neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&quot;#d57d2c&quot;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p2&lt;-phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&quot;#d57d2c&quot;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) ggarrange(p0, p1, p2, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 4.7 Is the donor sample microbiota different to recipient microbiota? samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) 4.7.1 Alpha diversity sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Transplant1&quot;, &quot;Transplant2&quot;) ~ &quot;Transplant&quot;, TRUE ~ treatment )) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + scale_fill_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&#39;#00808050&#39;, &quot;#d5b52c50&quot;)) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(6.4835) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 219.3 223.6 -105.6 211.3 18 Scaled residuals: Min 1Q Median 3Q Max -1.9573 -0.5447 0.1304 0.5773 1.2167 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 5.302e-13 7.281e-07 Number of obs: 22, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.8067 0.1400 27.19 &lt; 2e-16 *** treatmentTransplant 0.8399 0.1795 4.68 2.87e-06 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) trtmntTrnsp -0.780 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;-nlme:: lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 169.583 173.5659 -80.79148 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.713488 11.40939 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 17.31015 4.114893 12 4.206708 0.0012 treatmentTransplant 28.70744 5.016259 12 5.722879 0.0001 Correlation: (Intr) treatmentTransplant -0.701 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.4861810 -0.5958348 0.1169620 0.5490436 1.7889456 Number of Observations: 22 Number of Groups: 9 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 80.93175 84.91468 -36.46587 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.8689563 1.118803 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 5.488256 0.4722057 12 11.622595 0.00 treatmentTransplant 0.226402 0.5020134 12 0.450988 0.66 Correlation: (Intr) treatmentTransplant -0.587 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.42844864 -0.44112019 -0.05260838 0.51238319 1.55109109 Number of Observations: 22 Number of Groups: 9 4.7.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.12795 0.127946 13.179 999 0.001 *** Residuals 20 0.19416 0.009708 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_trt8twu5dv9ios62hmvh, .table th.tinytable_css_trt8twu5dv9ios62hmvh { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_tqgbl900xnn6qhtvc43f, .table th.tinytable_css_tqgbl900xnn6qhtvc43f { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.777815 0.2760196 7.625059 0.001 Residual 20 4.663086 0.7239804 NA NA Total 21 6.440902 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.071502 0.071502 5.4967 999 0.029 * Residuals 20 0.260166 0.013008 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zgtipupzuyv4e7rzlo3f, .table th.tinytable_css_zgtipupzuyv4e7rzlo3f { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_o2yancjzzkdwmauvltse, .table th.tinytable_css_o2yancjzzkdwmauvltse { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 2.112572 0.3210813 9.458609 0.001 Residual 20 4.466983 0.6789187 NA NA Total 21 6.579556 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04731 0.047307 2.6157 999 0.117 Residuals 20 0.36172 0.018086 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_6mg4i32scgmltbgg9jnw, .table th.tinytable_css_6mg4i32scgmltbgg9jnw { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_5wjezjg12dous8siwkrj, .table th.tinytable_css_5wjezjg12dous8siwkrj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3778248 0.239656 6.303884 0.001 Residual 20 1.1987049 0.760344 NA NA Total 21 1.5765298 1.000000 NA NA p0&lt;-richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p1&lt;-neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p2&lt;-phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;,&quot;Transplant&quot;), values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) ggarrange(p0, p1, p2, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 4.8 Does FMT change the microbial community over time? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT1&quot;,&quot;FMT2&quot;) ) 4.8.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;treatment&quot;, values=c(&quot;#76b183&quot;, &quot;#2b4b32&quot;)) + scale_fill_manual(name=&quot;treatment&quot;, values=c(&quot;#76b18350&quot;, &quot;#2b4b3250&quot;)) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.3876) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 171.0 174.3 -81.5 163.0 13 Scaled residuals: Min 1Q Median 3Q Max -1.73495 -0.71265 -0.07086 0.40744 1.88240 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 1.073e-11 3.275e-06 Number of obs: 17, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9343 0.1759 22.369 &lt;2e-16 *** treatmentFMT2 0.4052 0.2402 1.687 0.0917 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tretmntFMT2 -0.732 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 128.7946 131.6268 -60.3973 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.497472 11.25384 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 24.65947 4.164756 8 5.920988 0.0004 treatmentFMT2 14.87494 5.482531 7 2.713151 0.0301 Correlation: (Intr) treatmentFMT2 -0.7 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.76462324 -0.55701822 -0.04763166 0.55267588 1.30333436 Number of Observations: 17 Number of Groups: 9 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 56.05281 58.88501 -24.0264 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.6954001 0.8350046 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 4.154090 0.3805932 8 10.914778 0.0000 treatmentFMT2 0.912624 0.4105974 7 2.222673 0.0616 Correlation: (Intr) treatmentFMT2 -0.583 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.1361565 -0.5779234 -0.1465750 0.4815529 2.3352020 Number of Observations: 17 Number of Groups: 9 4.8.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.017610 0.017610 2.8225 999 0.115 Residuals 15 0.093585 0.006239 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zkjliae81q6es9p7gpjb, .table th.tinytable_css_zkjliae81q6es9p7gpjb { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_yd1hmbxb4std4v89mqr1, .table th.tinytable_css_yd1hmbxb4std4v89mqr1 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3560084 0.07968734 1.298809 0.00390625 Residual 15 4.1115570 0.92031266 NA NA Total 16 4.4675655 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.009828 0.0098278 0.7113 999 0.442 Residuals 15 0.207263 0.0138175 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_z72jgk6e3wsr650hrnml, .table th.tinytable_css_z72jgk6e3wsr650hrnml { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_dou8n2eyhdqhi3umu7ju, .table th.tinytable_css_dou8n2eyhdqhi3umu7ju { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3149954 0.08110541 1.323962 0.00390625 Residual 15 3.5687823 0.91889459 NA NA Total 16 3.8837776 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.010955 0.010955 0.6602 999 0.52 Residuals 15 0.248892 0.016593 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_r81jald4ryipe6zqhcw2, .table th.tinytable_css_r81jald4ryipe6zqhcw2 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_l4spm50xz41xaz3ke4j8, .table th.tinytable_css_l4spm50xz41xaz3ke4j8 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.06391536 0.09449338 1.565312 0.0703125 Residual 15 0.61248501 0.90550662 NA NA Total 16 0.67640037 1.00000000 NA NA p0&lt;-richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;FMT1&quot;, &quot;FMT2&quot;), values=c(&quot;#76b183&quot;, &quot;#2b4b32&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p1&lt;-neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;FMT1&quot;, &quot;FMT2&quot;), values=c(&quot;#76b183&quot;, &quot;#2b4b32&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p2&lt;-phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;FMT1&quot;, &quot;FMT2&quot;), values=c(&quot;#76b183&quot;, &quot;#2b4b32&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) ggarrange(p0, p1, p2, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 4.9 Do FMT change the microbial community compared to antibiotics and acclimation? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Antibiotics&quot;, &quot;Acclimation&quot;,&quot;FMT1&quot;) ) 4.9.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;FMT1&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(name=&quot;Treatment&quot;, breaks=c(&quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;FMT1&quot;), values=c(&quot;#003a45&quot;,&#39;#008080&#39;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Treatment&quot;, breaks=c(&quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;FMT1&quot;), values=c(&quot;#003a4550&quot;,&#39;#00808050&#39;,&quot;#76b18350&quot;)) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness: Problems to calculate Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 173.0404 178.263 -81.5202 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.263247 9.322271 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 17.310151 3.416951 13 5.065963 0.0002 treatmentAntibiotics -8.868175 4.744329 13 -1.869216 0.0843 treatmentFMT1 7.289358 4.552796 13 1.601073 0.1334 Correlation: (Intr) trtmnA treatmentAntibiotics -0.596 treatmentFMT1 -0.621 0.457 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.93185401 -0.56384573 -0.04015247 0.47657219 1.55593253 Number of Observations: 24 Number of Groups: 9 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 92.7946 98.01721 -41.3973 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.5507824 1.405346 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 5.488256 0.5031412 13 10.907984 0.0000 treatmentAntibiotics -1.198294 0.7137109 13 -1.678962 0.1170 treatmentFMT1 -1.351708 0.6855445 13 -1.971729 0.0703 Correlation: (Intr) trtmnA treatmentAntibiotics -0.611 treatmentFMT1 -0.636 0.456 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.00120146 -0.44426020 0.00785757 0.38719755 1.97397308 Number of Observations: 24 Number of Groups: 9 4.9.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;FMT1&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;FMT1&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01582 0.0079101 1.05 999 0.397 Residuals 21 0.15821 0.0075336 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_lw6o4z08yz62y318k8eo, .table th.tinytable_css_lw6o4z08yz62y318k8eo { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_8u2q0z9pph1cqdsztjq0, .table th.tinytable_css_8u2q0z9pph1cqdsztjq0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.840841 0.2018508 2.655435 0.001 Residual 21 7.278967 0.7981492 NA NA Total 23 9.119808 1.0000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8287871 2.293722 0.1407734 0.003 0.009 * 2 Acclimation vs FMT1 1 0.9572484 2.939042 0.1638350 0.001 0.003 * 3 Antibiotics vs FMT1 1 0.9764237 2.751191 0.1746656 0.006 0.018 . Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01796 0.0089778 0.5959 999 0.537 Residuals 21 0.31640 0.0150667 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_v9o4vepbpj4a6ismdmtt, .table th.tinytable_css_v9o4vepbpj4a6ismdmtt { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7m4yos35fmvzdzabj50v, .table th.tinytable_css_7m4yos35fmvzdzabj50v { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 2.357142 0.2699241 3.882065 0.001 Residual 21 6.375470 0.7300759 NA NA Total 23 8.732613 1.0000000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8814932 2.747044 0.1640316 0.001 0.003 * 2 Acclimation vs FMT1 1 1.3133104 4.634354 0.2360329 0.001 0.003 * 3 Antibiotics vs FMT1 1 1.3427497 4.355528 0.2509591 0.001 0.003 * Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.15410 0.077052 2.6434 999 0.102 Residuals 21 0.61214 0.029149 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tmcej7qv81qgdhbk3o6c, .table th.tinytable_css_tmcej7qv81qgdhbk3o6c { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_qm1r1uit9kqebtubymk6, .table th.tinytable_css_qm1r1uit9kqebtubymk6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.327076 0.3647564 6.029092 0.001 Residual 21 2.311178 0.6352436 NA NA Total 23 3.638254 1.0000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.6885926 5.124832 0.2679674 0.004 0.012 . 2 Acclimation vs FMT1 1 0.2548027 3.292748 0.1800029 0.040 0.120 3 Antibiotics vs FMT1 1 1.1000473 9.048069 0.4103792 0.004 0.012 . p0&lt;-richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;FMT1&quot;), values=c(&quot;#003a45&quot;,&#39;#008080&#39;, &quot;#76b183&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p1&lt;-neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;FMT1&quot;), values=c(&quot;#003a45&quot;,&#39;#008080&#39;, &quot;#76b183&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p2&lt;-phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;FMT1&quot;), values=c(&quot;#003a45&quot;,&#39;#008080&#39;, &quot;#76b183&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) ggarrange(p0, p1, p2, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 4.10 Is the gut microbiota similar to the donor after FMT? sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) 4.10.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;neutral&quot;,&quot;richness&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Transplant&quot;, &quot;FMT&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;FMT&quot;,&quot;Transplant&quot;), values=c(&#39;#40714b&#39;, &quot;#d5b52c&quot;)) + scale_fill_manual(name=&quot;treatment&quot;, breaks=c(&quot;FMT&quot;,&quot;Transplant&quot;), values=c(&#39;#40714b50&#39;, &quot;#d5b52c50&quot;)) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) emmeans::emmeans(Modelq0GLMMNB, pairwise ~ treatment) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 173.0404 178.263 -81.5202 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.263247 9.322271 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 17.310151 3.416951 13 5.065963 0.0002 treatmentAntibiotics -8.868175 4.744329 13 -1.869216 0.0843 treatmentFMT1 7.289358 4.552796 13 1.601073 0.1334 Correlation: (Intr) trtmnA treatmentAntibiotics -0.596 treatmentFMT1 -0.621 0.457 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.93185401 -0.56384573 -0.04015247 0.47657219 1.55593253 Number of Observations: 24 Number of Groups: 9 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 92.7946 98.01721 -41.3973 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.5507824 1.405346 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 5.488256 0.5031412 13 10.907984 0.0000 treatmentAntibiotics -1.198294 0.7137109 13 -1.678962 0.1170 treatmentFMT1 -1.351708 0.6855445 13 -1.971729 0.0703 Correlation: (Intr) trtmnA treatmentAntibiotics -0.611 treatmentFMT1 -0.636 0.456 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.00120146 -0.44426020 0.00785757 0.38719755 1.97397308 Number of Observations: 24 Number of Groups: 9 4.10.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.11100 0.111002 11.752 999 0.001 *** Residuals 28 0.26447 0.009445 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_w9xy4slqi6pvj8ad3s20, .table th.tinytable_css_w9xy4slqi6pvj8ad3s20 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_imqnc0fpkcimomm42ar6, .table th.tinytable_css_imqnc0fpkcimomm42ar6 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.184578 0.1548451 5.13002 0.001 Residual 28 6.465508 0.8451549 NA NA Total 29 7.650086 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04408 0.044082 3.1744 999 0.093 . Residuals 28 0.38883 0.013887 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_n5bfn7ms7bnw1my0w463, .table th.tinytable_css_n5bfn7ms7bnw1my0w463 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_201ef5xqnjku2m326rc1, .table th.tinytable_css_201ef5xqnjku2m326rc1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.147077 0.1608783 5.368223 0.001 Residual 28 5.983012 0.8391217 NA NA Total 29 7.130089 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00007 0.0000689 0.0044 999 0.941 Residuals 28 0.43637 0.0155847 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_dqzz4eialb02x1ogh884, .table th.tinytable_css_dqzz4eialb02x1ogh884 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_1f18r5s425c1niqp55zn, .table th.tinytable_css_1f18r5s425c1niqp55zn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.1298187 0.1018776 3.17615 0.001 Residual 28 1.1444432 0.8981224 NA NA Total 29 1.2742619 1.0000000 NA NA p0&lt;-richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;FMT&quot;,&quot;Transplant&quot;), values=c(&#39;#40714b&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p1&lt;-neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;FMT&quot;,&quot;Transplant&quot;), values=c(&#39;#40714b&#39;, &quot;#d5b52c&quot;))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) p2&lt;-phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;treatment&quot;, breaks=c(&quot;FMT&quot;,&quot;Transplant&quot;), values=c(&#39;#40714b&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) ggarrange(p0, p1, p2, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 4.10.3 Structural zeros FMT_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment == &quot;FMT&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() Transplant_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment ==&quot;Transplant&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_FMT = all(c_across(all_of(FMT_samples)) == 0)) %&gt;% mutate(all_zeros_Transplant = all(c_across(all_of(Transplant_samples)) == 0)) %&gt;% mutate(average_FMT = mean(c_across(all_of(FMT_samples)), na.rm = TRUE)) %&gt;% mutate(average_Transplant = mean(c_across(all_of(Transplant_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_FMT == TRUE || all_zeros_Transplant==TRUE) %&gt;% mutate(present = case_when( all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;Transplant&quot;, !all_zeros_FMT &amp; all_zeros_Transplant ~ &quot;FMT&quot;, !all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;FMT&quot;, average_FMT, average_Transplant)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Structural zeros in each group fmt &lt;- structural_zeros %&gt;% filter(present==&quot;FMT&quot;) %&gt;% count(phylum, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) fmt_f &lt;- structural_zeros %&gt;% filter(present==&quot;FMT&quot;) %&gt;% count(family, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Transplant FMT 1 52 55 Phyla to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_hnbic3gg10qnkcv2dhvx, .table th.tinytable_css_hnbic3gg10qnkcv2dhvx { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7xx4u7q019fas9w7o9xa, .table th.tinytable_css_7xx4u7q019fas9w7o9xa { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum Transplant FMT p__Bacillota_A 20 21 p__Bacillota 16 10 p__Pseudomonadota 6 11 p__Bacteroidota 3 6 p__Desulfobacterota 2 2 p__Bacillota_B 1 0 p__Chlamydiota 1 0 p__Cyanobacteriota 1 0 p__Fusobacteriota 1 0 p__Verrucomicrobiota 1 2 p__Actinomycetota 0 1 p__Bacillota_C 0 1 p__Campylobacterota 0 1 Families to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(family, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_f, by=&quot;family&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_wjmpnzrmnaz6fynb1lnn, .table th.tinytable_css_wjmpnzrmnaz6fynb1lnn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_k7cof0oezvklv87cdzoe, .table th.tinytable_css_k7cof0oezvklv87cdzoe { border-bottom: solid #d3d8dc 0.1em; } family Transplant FMT f__Lachnospiraceae 7 9 f__Erysipelotrichaceae 6 5 f__UBA660 6 0 f__Enterobacteriaceae 5 2 f__CAG-508 3 0 f__Ruminococcaceae 3 3 f__Anaerovoracaceae 2 0 f__Coprobacillaceae 2 0 f__Desulfovibrionaceae 2 2 f__Oscillospiraceae 2 1 f__Tannerellaceae 2 1 f__UBA1242 2 0 f__ 1 3 f__Akkermansiaceae 1 0 f__CAG-239 1 2 f__Chlamydiaceae 1 0 f__Enterococcaceae 1 3 f__Fusobacteriaceae 1 0 f__Gastranaerophilaceae 1 0 f__Marinifilaceae 1 0 f__Mycoplasmoidaceae 1 1 f__Peptococcaceae 1 0 f__Anaerotignaceae 0 2 f__Bacteroidaceae 0 2 f__LL51 0 2 f__UBA3700 0 2 f__Acutalibacteraceae 0 1 f__Arcobacteraceae 0 1 f__CAG-274 0 1 f__CALVMC01 0 1 f__Devosiaceae 0 1 f__Mycobacteriaceae 0 1 f__Pumilibacteraceae 0 1 f__RUG11792 0 1 f__Rhizobiaceae 0 1 f__Rikenellaceae 0 1 f__Sphingobacteriaceae 0 1 f__Streptococcaceae 0 1 f__UBA1997 0 1 f__UBA3830 0 1 f__Weeksellaceae 0 1 4.10.3.1 Functional capacities of the structural zeros #Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% structural_zeros$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) #Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) #Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% filter(genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT-Transplant)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Transplant&quot;,&quot;FMT&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + #scale_fill_manual() + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Elevation&quot;) 4.10.4 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_FMT_transplant.Rdata&quot;) load(&quot;data/ancombc_FMT_transplant.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_treatmentTransplant, p_treatmentTransplant) %&gt;% filter(p_treatmentTransplant &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentTransplant) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_treatmentTransplant) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() Differential abundance MAGs in each group fmt_count &lt;- ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&lt;0) %&gt;% count(phylum, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&gt;0) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) phylum Transplant FMT 1 Bacteroidota 13 5 2 Bacillota_A 4 17 3 Bacillota 3 1 4 Campylobacterota 1 1 5 Desulfobacterota 1 2 6 Spirochaetota 1 0 7 Pseudomonadota 0 5 8 Cyanobacteriota 0 2 9 Bacillota_B 0 1 10 Bacillota_C 0 1 ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&gt;0) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Transplant FMT 1 23 35 ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentTransplant, y=forcats::fct_reorder(genome,lfc_treatmentTransplant), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) 4.10.5 Differences in the functional capacities GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.10.5.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT 0.359 0.0259 2 Transplant 0.356 0.0432 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94871, p-value = 0.1561 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 128, p-value = 0.4826 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT-Transplant)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Transplant&quot;,&quot;FMT&quot;)) means_gift &lt;- element_gift_filt %&gt;% select(-treatment) %&gt;% pivot_longer(!sample, names_to = &quot;Elements&quot;, values_to = &quot;abundance&quot;) %&gt;% left_join(sample_metadata, by=join_by(sample==sample)) %&gt;% group_by(treatment, Elements) %&gt;% summarise(mean=mean(abundance)) log_fold &lt;- means_gift %&gt;% group_by(Elements) %&gt;% summarise( logfc_fmt_transplant = log2(mean[treatment == &quot;FMT&quot;] / mean[treatment == &quot;Transplant&quot;]) ) %&gt;% left_join(., difference_table, by=&quot;Elements&quot;) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=c(&#39;#40714b&#39;, &quot;#d5b52c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) log_fold %&gt;% filter(Elements!=&quot;D0611&quot;) %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,logfc_fmt_transplant), y=logfc_fmt_transplant, fill=group_color)) + geom_col() + #scale_fill_manual() + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Log_fold&quot;)+ labs(fill=&quot;Treatment&quot;) #### Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT 0.349 0.0221 2 Transplant 0.355 0.0377 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.87044, p-value = 0.001713 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 121, p-value = 0.6801 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) significant_functional # A tibble: 3 × 4 trait p_value p_adjust Function &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; 1 B04 0.000220 0.00441 SCFA biosynthesis 2 B10 0.00284 0.0189 Antibiotic biosynthesis 3 S02 0.00174 0.0174 Appendages "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
