[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1, Carlos Cabido2, Antton Alberdi3 and Ostaizka Aizpurua4 Last update: 2025-03-31 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/lizard_fmt_effectiveness.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(ANCOMBC) library(lme4) library(nlme) library(hilldiv2) library(emmeans) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Copenhagen antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;)%&gt;% mutate(time_point = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% filter(!(time_point == &quot;Transplant1&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Transplant2&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT1&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT2&quot; &amp; type == &quot;Control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT1&quot; &amp; type == &quot;Hot_control&quot;)) %&gt;% filter(!(time_point == &quot;Post-FMT2&quot; &amp; type == &quot;Hot_control&quot;)) %&gt;% filter(individual!=&quot;LI1_2nd_6&quot;) %&gt;% mutate(time_point=str_remove_all(time_point, &quot;Post-&quot;)) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.2.3 Filtering Remove low sequencing depth samples #Counts_raw columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AD16&quot;) %&gt;% filter(Tube_code != &quot;AD23&quot;) %&gt;% filter(Tube_code != &quot;AD25&quot;) %&gt;% filter(Tube_code != &quot;AD91&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) 2.2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts&lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.4 Load data statistics 2.2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats&lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, phylum_colors, data_stats, file = &quot;data/08032025data.Rdata&quot;) save(genome_gifts, file = &quot;data/04032025gifts.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/08032025data.Rdata&quot;) sample_metadata &lt;- sample_metadata %&gt;% mutate(time_point=case_when( time_point %in% c(&quot;Transplant1&quot;) ~ &quot;Donor1&quot;, TRUE ~ time_point ))%&gt;% mutate(time_point=case_when( time_point %in% c(&quot;Transplant2&quot;) ~ &quot;Donor2&quot;, TRUE ~ time_point )) %&gt;% mutate(Population=case_when( Population %in% c(&quot;Cold_wet&quot;) ~ &quot;Cold&quot;, TRUE ~ Population ))%&gt;% mutate(Population=case_when( Population %in% c(&quot;Hot_dry&quot;) ~ &quot;Warm&quot;, TRUE ~ Population )) 3.1 Sequencing reads statistics data_stats_filter &lt;- data_stats %&gt;% left_join(., sample_metadata[c(1,4,7,10)], by = join_by(sample == Tube_code)) %&gt;% filter(Population!=&quot;NA&quot;) data_stats_filter$raw_reads %&gt;% sum() [1] 3334628186 data_stats_filter$raw_reads %&gt;% mean() [1] 30592919 data_stats_filter$raw_reads %&gt;% sd() [1] 13052615 3.2 DNA fractions data_stats_filter %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) %&gt;% mutate(mean=str_c(round(mean,3),&quot;±&quot;,round(sd,3))) %&gt;% select(mean) %&gt;% pull() %&gt;% cat() 0.405±0.212 data_stats_filter %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~factor(time_point, level=c(&quot;Wild&quot;, &quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Donor1&quot;, &quot;Donor2&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)), scales = &quot;free&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats_filter %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~factor(time_point, level=c(&quot;Wild&quot;, &quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Donor1&quot;, &quot;Donor2&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)), scales = &quot;free&quot;) + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats_filter %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, Population, type) %&gt;% tt() .table td.tinytable_css_t376090g3m8asb1mil61, .table th.tinytable_css_t376090g3m8asb1mil61 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2nqtdwkw7hzy5wqjqj2c, .table th.tinytable_css_2nqtdwkw7hzy5wqjqj2c { border-bottom: solid #d3d8dc 0.1em; } sample damr time_point Population type AC79 1.0000000 Acclimation Cold Control AC80 1.0000000 Acclimation Cold Treatment AC81 0.9813013 Acclimation Cold Treatment AC82 0.7490771 Acclimation Cold Treatment AC83 1.0000000 Acclimation Cold Control AC84 1.0000000 Acclimation Cold Control AC85 0.8363777 Acclimation Cold Control AC86 0.8800275 Acclimation Cold Control AC87 0.9672854 Acclimation Cold Treatment AC88 0.3142108 Acclimation Cold Control AC89 0.9338962 Acclimation Cold Treatment AC90 1.0000000 Acclimation Cold Control AC91 1.0000000 Acclimation Cold Control AC92 1.0000000 Acclimation Cold Control AC93 1.0000000 Acclimation Cold Treatment AC94 0.9159348 Acclimation Cold Treatment AC95 0.9239904 Acclimation Cold Treatment AC96 0.9425962 Acclimation Cold Treatment AC97 0.9394886 Acclimation Warm Hot_control AC98 1.0000000 Acclimation Warm Hot_control AC99 1.0000000 Acclimation Warm Hot_control AD01 1.0000000 Acclimation Warm Hot_control AD02 1.0000000 Acclimation Warm Hot_control AD03 1.0000000 Acclimation Warm Hot_control AD04 0.8896057 Acclimation Warm Hot_control AD05 1.0000000 Acclimation Warm Hot_control AD07 0.9515379 Acclimation Warm Hot_control AD08 0.7045003 Antibiotics Cold Control AD09 1.0000000 Antibiotics Cold Control AD10 0.9598720 Antibiotics Cold Control AD11 0.6230176 Antibiotics Cold Control AD12 0.7487463 Antibiotics Cold Control AD13 1.0000000 Antibiotics Cold Control AD14 0.4536529 Antibiotics Cold Control AD15 1.0000000 Antibiotics Cold Control AD17 0.8774871 Antibiotics Cold Treatment AD18 0.4991585 Antibiotics Cold Treatment AD19 0.4060523 Antibiotics Cold Treatment AD20 0.5227482 Antibiotics Cold Treatment AD21 0.6551882 Antibiotics Cold Treatment AD22 0.9106725 Antibiotics Cold Treatment AD24 0.5972915 Antibiotics Cold Treatment AD26 0.9204825 Antibiotics Warm Hot_control AD27 0.5215059 Antibiotics Warm Hot_control AD28 0.8180607 Antibiotics Warm Hot_control AD29 0.7175978 Antibiotics Warm Hot_control AD30 0.9937574 Antibiotics Warm Hot_control AD32 0.6710817 Antibiotics Warm Hot_control AD33 0.6778368 Antibiotics Warm Hot_control AD34 0.4642326 Antibiotics Warm Hot_control AD46 0.8708468 Donor1 Cold Treatment AD47 0.8328653 Donor1 Cold Treatment AD49 0.8940294 Donor1 Cold Treatment AD50 0.8757711 Donor1 Cold Treatment AD51 0.8479193 Donor1 Cold Treatment AD52 0.8596870 Donor1 Cold Treatment AD53 0.8528974 Donor1 Cold Treatment AD54 1.0000000 Donor1 Warm Hot_control AD65 1.0000000 Donor2 Cold Treatment AD66 0.8821027 Donor2 Cold Treatment AD68 0.8820274 Donor2 Cold Treatment AD70 0.9590793 Donor2 Cold Treatment AD71 0.8360540 Donor2 Cold Treatment AD72 0.8835253 Donor2 Cold Treatment AD73 1.0000000 Donor2 Warm Hot_control AD75 1.0000000 FMT1 Cold Treatment AD76 0.9862581 FMT1 Cold Treatment AD77 0.8963376 FMT1 Cold Treatment AD78 1.0000000 FMT1 Cold Treatment AD80 0.8808155 FMT1 Cold Treatment AD83 1.0000000 FMT1 Cold Treatment AD84 1.0000000 FMT1 Cold Treatment AD88 1.0000000 FMT1 Cold Treatment AE04 1.0000000 FMT2 Cold Treatment AE05 1.0000000 FMT2 Cold Treatment AE91 0.9259146 FMT2 Cold Treatment AE94 0.9152960 FMT2 Cold Treatment AE95 1.0000000 FMT2 Cold Treatment AE96 0.7786112 FMT2 Cold Treatment AE99 0.8513354 FMT2 Cold Treatment AF01 0.9046369 FMT2 Cold Treatment AF03 0.9030087 FMT2 Cold Treatment AFU87 0.8810513 Wild Cold Control AFU88 0.8317800 Wild Cold Treatment AFU91 0.8923699 Wild Cold Treatment AFU92 0.8094776 Wild Cold Treatment AFU93 0.8517368 Wild Cold Control AFU94 0.8325385 Wild Cold Treatment AFU95 0.8419270 Wild Cold Treatment AFU96 0.8326820 Wild Cold Control AFU97 0.8107271 Wild Cold Treatment AFU98 0.7506522 Wild Cold Control AFU99 0.8582371 Wild Cold Treatment AFV01 0.9331539 Wild Cold Treatment AFV02 0.8316460 Wild Cold Treatment AFV03 0.8752591 Wild Cold Control AFV04 0.9180285 Wild Cold Control AFV05 1.0000000 Wild Cold Control AFV06 1.0000000 Wild Cold Control AFV07 0.8460805 Wild Cold Control AFV08 0.7497043 Wild Warm Hot_control AFV09 0.5412999 Wild Warm Hot_control AFV10 0.8002499 Wild Warm Hot_control AFV11 0.8225298 Wild Warm Hot_control AFV12 0.7925988 Wild Warm Hot_control AFV14 0.8106269 Wild Warm Hot_control AFV15 0.9691106 Wild Warm Hot_control AFV16 0.8218990 Wild Warm Hot_control AFV17 0.8091152 Wild Warm Hot_control "],["diversity-analysis.html", "Chapter 4 Diversity analysis 4.1 Calculate diversities", " Chapter 4 Diversity analysis load(&quot;data/08032025data.Rdata&quot;) load(&quot;data/04032025gifts.Rdata&quot;) load(&quot;data/objects_2003.Rdata&quot;) genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% select(-AC85) %&gt;% select(any_of(c(&quot;genome&quot;,intersect(sample_metadata$Tube_code, colnames(read_counts))))) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% select(where(~ sum(.) &gt; 0)) %&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) table &lt;- genome_counts_filt %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;) master_table &lt;- sample_metadata %&gt;% mutate(time_point = case_when(time_point %in% c(&quot;Transplant1&quot;) ~ &quot;Donor1&quot;, TRUE ~ time_point)) %&gt;% mutate(time_point = case_when(time_point %in% c(&quot;Transplant2&quot;) ~ &quot;Donor2&quot;, TRUE ~ time_point)) %&gt;% mutate(Population = case_when(Population %in% c(&quot;Cold_wet&quot;) ~ &quot;Cold&quot;, TRUE ~ Population)) %&gt;% mutate(Population = case_when(Population %in% c(&quot;Hot_dry&quot;) ~ &quot;Warm&quot;, TRUE ~ Population)) %&gt;% mutate(type = case_when(type %in% c(&quot;Hot_control&quot;) ~ &quot;Warm_control&quot;, TRUE ~ type)) %&gt;% mutate(type = case_when(type %in% c(&quot;Control&quot;) ~ &quot;Cold_control&quot;, TRUE ~ type)) %&gt;% mutate(type = case_when(type %in% c(&quot;Treatment&quot;) ~ &quot;Cold_intervention&quot;, TRUE ~ type)) %&gt;% mutate(sample = Tube_code) %&gt;% mutate(Tube_code = str_remove_all(Tube_code, &quot;_a&quot;)) %&gt;% filter(Tube_code %in% table$sample) %&gt;% # mutate(treatment = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% left_join(., table, by = join_by(&quot;Tube_code&quot; == &quot;sample&quot;)) sample_metadata &lt;- master_table %&gt;% select(1,2,4:8,10,12) genome_counts_filt &lt;- master_table %&gt;% select(12,13:325) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0)))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) genome_metadata &lt;- genome_metadata %&gt;% filter(genome %in% genome_counts_filt$genome) save(sample_metadata, genome_metadata, genome_counts_filt, genome_tree, phylum_colors, data_stats, genome_gifts, master_table, file = &quot;data/objects_2803.Rdata&quot;) 4.1 Calculate diversities 4.1.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] genome_counts_filt1 &lt;- genome_counts_filt1 %&gt;% remove_rownames() %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% rownames_to_column(., &quot;genome&quot;) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) save(alpha_div, file = &quot;data/alpha_08032025.Rdata&quot;) 4.1.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] save(beta_q0n, beta_q1n, beta_q1p, file = &quot;data/beta_08032025.Rdata&quot;) "],["does-captivity-change-the-microbial-community.html", "Chapter 5 Does captivity change the microbial community? 5.1 Alpha diversity 5.2 Beta diversity 5.3 Differences in MAGs", " Chapter 5 Does captivity change the microbial community? 5.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;) ) label_map &lt;- c( &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;)), time_point = factor(time_point, levels = c(&quot;Wild&quot;, &quot;Acclimation&quot;))) %&gt;% filter(time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=Population, fill=Population)) + geom_boxplot(width = 0.5,alpha=0.5, outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2,show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + facet_grid(metric ~ Population, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.text = element_text(size = 14), axis.title = element_text(size = 14), strip.text = element_text(size = 18, lineheight = 0.6), ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ Population*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(9.4635) ( log ) Formula: richness ~ Population * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 518.4 530.2 -253.2 506.4 47 Scaled residuals: Min 1Q Median 3Q Max -2.07994 -0.34567 0.00022 0.55317 1.22959 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.1126 0.3355 Number of obs: 53, groups: individual, 27 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.7707 0.1208 31.218 &lt; 2e-16 *** PopulationWarm 0.6756 0.2006 3.368 0.000757 *** time_pointWild 0.4312 0.1223 3.525 0.000424 *** PopulationWarm:time_pointWild -0.5331 0.2048 -2.604 0.009221 ** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) PpltnW tm_pnW PopulatnWrm -0.602 time_pntWld -0.557 0.335 PpltnWrm:_W 0.338 -0.526 -0.601 Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 402.7832 414.1342 -195.3916 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 5.51778 10.54924 Fixed effects: neutral ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 19.37729 2.883717 25 6.719554 0.0000 time_pointWild 17.27881 3.578682 24 4.828260 0.0001 PopulationWarm 24.71329 4.905493 25 5.037882 0.0000 time_pointWild:PopulationWarm -22.28917 6.126768 24 -3.637998 0.0013 Correlation: (Intr) tm_pnW PpltnW time_pointWild -0.642 PopulationWarm -0.588 0.377 time_pointWild:PopulationWarm 0.375 -0.584 -0.632 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.5974563 -0.5606149 0.1376820 0.5636829 1.6703831 Number of Observations: 53 Number of Groups: 27 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 193.7567 205.1077 -90.87837 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7860836 1.191838 Fixed effects: phylogenetic ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 5.343318 0.3453897 25 15.470404 0.0000 time_pointWild -0.135493 0.4048212 24 -0.334698 0.7408 PopulationWarm 1.119702 0.5880336 25 1.904146 0.0685 time_pointWild:PopulationWarm -0.602016 0.6924897 24 -0.869350 0.3933 Correlation: (Intr) tm_pnW PpltnW time_pointWild -0.608 PopulationWarm -0.587 0.357 time_pointWild:PopulationWarm 0.355 -0.585 -0.596 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.2027374 -0.4577650 0.0610368 0.3504732 1.7675077 Number of Observations: 53 Number of Groups: 27 5.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03445 0.034446 4.6041 999 0.036 * Residuals 51 0.38156 0.007482 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_utdsca0g6vxm709ps9l0, .table th.tinytable_css_utdsca0g6vxm709ps9l0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_u0rf9fj0tq19vluif5r0, .table th.tinytable_css_u0rf9fj0tq19vluif5r0 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 0.5784094 0.03513500 2.236493 0.001 Population 1 2.8737192 0.17456169 11.111600 0.001 time_point:Population 1 0.3378127 0.02052015 1.306196 0.001 Residual 49 12.6725436 0.76978316 NA NA Total 52 16.4624849 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01130 0.0113018 1.2646 999 0.263 Residuals 51 0.45578 0.0089369 adonis2(neutral ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_sj2tmqykjvz3nvxn7ug2, .table th.tinytable_css_sj2tmqykjvz3nvxn7ug2 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_pgp276i0qyhevqhfziwz, .table th.tinytable_css_pgp276i0qyhevqhfziwz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value time_point 1 0.8535852 0.05306573 3.688514 0.001 Population 1 3.3711165 0.20957575 14.567274 0.001 time_point:Population 1 0.5212922 0.03240772 2.252609 0.001 Residual 49 11.3394385 0.70495080 NA NA Total 52 16.0854325 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00207 0.0020675 0.125 999 0.742 Residuals 51 0.84374 0.0165440 adonis2(phylo ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_p1ew2uz6i2akrpj9dbte, .table th.tinytable_css_p1ew2uz6i2akrpj9dbte { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_8yjdg4lrpvb4zj0fndj8, .table th.tinytable_css_8yjdg4lrpvb4zj0fndj8 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value time_point 1 0.2282721 0.07008479 4.486412 0.001 Population 1 0.3478468 0.10679697 6.836508 0.001 time_point:Population 1 0.1878081 0.05766139 3.691140 0.004 Residual 49 2.4931580 0.76545685 NA NA Total 52 3.2570850 1.00000000 NA NA dbRDA #Richness cca_ord &lt;- capscale(formula = richness ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta$time_pointWild&quot; = &quot;Wild&quot;, &quot;subset_meta$PopulationWarm&quot;=&quot;Warm population&quot;, &quot;subset_meta$time_pointWild:subset_meta$PopulationWarm&quot;=&quot;Interaction Wam population&quot;) CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta$time_pointWild&quot; = &quot;Wild&quot;, &quot;subset_meta$PopulationWarm&quot;=&quot;Warm population&quot;, &quot;subset_meta$time_pointWild:subset_meta$PopulationWarm&quot;=&quot;Interaction Wam population&quot;) CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;))+ geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta$time_pointWild&quot; = &quot;Wild&quot;, &quot;subset_meta$PopulationWarm&quot;=&quot;Warm population&quot;, &quot;subset_meta$time_pointWild:subset_meta$PopulationWarm&quot;=&quot;Interaction Wam population&quot;) CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() 5.3 Differences in MAGs 5.3.1 Cold population 5.3.1.1 Structural zeros wild_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point == &quot;Wild&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Acclimation&quot;,&quot;Wild&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_wild = all(c_across(all_of(wild_samples)) == 0)) %&gt;% mutate(all_zeros_acclimation= all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(average_wild = mean(c_across(all_of(wild_samples)), na.rm = TRUE)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_wild == TRUE || all_zeros_acclimation==TRUE) %&gt;% mutate(present = case_when( all_zeros_wild &amp; !all_zeros_acclimation ~ &quot;acclimation&quot;, !all_zeros_wild &amp; all_zeros_acclimation ~ &quot;wild&quot;, !all_zeros_wild &amp; !all_zeros_acclimation ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_wild, average_acclimation)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Wild structural_zeros %&gt;% filter(present==&quot;wild&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 5 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 7 2 p__Bacillota 1 3 p__Bacillota_B 1 4 p__Bacteroidota 1 5 p__Spirochaetota 1 structural_zeros %&gt;% filter(present==&quot;wild&quot;)%&gt;% select(1,5:10) # A tibble: 11 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_10:bin_000097 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Tannerellaceae g__Parabacteroides s__ 2 AH1_2nd_19:bin_000031 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Lachnotalea s__ 3 AH1_2nd_20:bin_000025 p__Bacillota_A c__Clostridia o__Lachnospirales f__CAG-274 g__ s__ 4 AH1_2nd_6:bin_000024 p__Spirochaetota c__Brevinematia o__Brevinematales f__Brevinemataceae g__Brevinema s__ 5 AH1_2nd_6:bin_000060 p__Bacillota_A c__Clostridia o__Oscillospirales f__Oscillospiraceae g__Intestinimonas s__ 6 AH1_2nd_7:bin_000023 p__Bacillota_A c__Clostridia o__Lachnospirales f__ g__ s__ 7 AH1_2nd_7:bin_000055 p__Bacillota c__Bacilli o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma s__ 8 LI1_2nd_1:bin_000052 p__Bacillota_A c__Clostridia o__TANB77 f__CAG-508 g__RGIG8482 s__ 9 LI1_2nd_7:bin_000001 p__Bacillota_A c__Clostridia o__Clostridiales f__Clostridiaceae g__Sarcina s__ 10 LI1_2nd_7:bin_000020 p__Bacillota_B c__Peptococcia o__Peptococcales f__Peptococcaceae g__ s__ 11 LI1_2nd_7:bin_000083 p__Bacillota_A c__Clostridia o__Oscillospirales f__Oscillospiraceae g__Pseudoflavonifractor s__ Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% select(1,5:10) # A tibble: 14 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_12:bin_000001 p__Pseudomonadota c__Gammaproteobacteria o__Pseudomonadales f__Moraxellaceae g__Acinetobacter s__Acinetobacter johnsonii 2 AH1_2nd_15:bin_000001 p__Pseudomonadota c__Alphaproteobacteria o__Rhizobiales f__Rhizobiaceae g__Agrobacterium s__Agrobacterium tumefaciens_H 3 AH1_2nd_17:bin_000010 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Mucinivorans s__ 4 AH1_2nd_17:bin_000038 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides_G s__ 5 AH1_2nd_20:bin_000014 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Citrobacter s__Citrobacter portucalensis 6 AH1_2nd_20:bin_000061 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus s__ 7 AH1_2nd_20:bin_000073 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus s__Enterococcus sp002174455 8 LI1_2nd_10:bin_000001 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus_A s__Enterococcus_A raffinosus 9 LI1_2nd_10:bin_000017 p__Chlamydiota c__Chlamydiia o__Chlamydiales f__Chlamydiaceae g__ s__ 10 LI1_2nd_2:bin_000039 p__Bacillota_A c__Clostridia o__TANB77 f__CAG-508 g__ s__ 11 LI1_2nd_7:bin_000045 p__Bacillota_A c__Clostridia o__Oscillospirales f__Acutalibacteraceae g__ s__ 12 LI1_2nd_7:bin_000074 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Escherichia s__Escherichia coli 13 LI1_2nd_8:bin_000030 p__Actinomycetota c__Actinomycetia o__Mycobacteriales f__Mycobacteriaceae g__Corynebacterium s__ 14 LI1_2nd_8:bin_000079 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Citrobacter_A s__Citrobacter_A amalonaticus Community elements differences in structural zeros GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% structural_zeros$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% filter(genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% left_join(., uniqueGIFT_db,by=join_by(&quot;trait&quot;==&quot;Code_element&quot;) ) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(8,9)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#00808050&quot;, &#39;#008080&#39;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;time_point&quot;) 5.3.1.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancombc_wild_accl_2803 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancombc_wild_accl_2803, file = &quot;data/ancombc_wild_accl_2803.Rdata&quot;) load(&quot;data/ancombc_wild_accl_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancombc_wild_accl_2803$res %&gt;% dplyr::select(taxon, lfc_time_pointWild, p_time_pointWild) %&gt;% filter(p_time_pointWild &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointWild) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointWild) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_pointWild, y=forcats::fct_reorder(genome,lfc_time_pointWild), fill=phylum)) + geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in acclimation on the left side and in wild on the right side Phyla of the significant MAGs Wild ancombc_rand_table_mag%&gt;% filter(lfc_time_pointWild&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 11 2 Bacteroidota 7 3 Bacillota_C 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointWild&gt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota_A Enterocloster 2 Bacillota_A Pseudoflavonifractor 3 Bacillota_A Copromonas 4 Bacteroidota Bacteroides 5 Bacillota_C 6 Bacillota_A Enterocloster 7 Bacillota_A 8 Bacillota_A Copromonas 9 Bacteroidota Bacteroides 10 Bacteroidota Bacteroides 11 Bacteroidota Parabacteroides 12 Bacteroidota Bacteroides 13 Bacillota_A Hungatella 14 Bacteroidota Bacteroides 15 Bacteroidota Parabacteroides 16 Bacillota_A Negativibacillus 17 Bacillota_A 18 Bacillota_A 19 Bacillota_A Velocimicrobium Acclimation ancombc_rand_table_mag%&gt;% filter(lfc_time_pointWild&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 7 2 Bacillota 6 3 Campylobacterota 1 4 Cyanobacteriota 1 5 Pseudomonadota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointWild&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota_A 2 Bacillota Coprobacillus 3 Bacillota Mycoplasmoides 4 Bacillota_A Roseburia 5 Pseudomonadota CAZU01 6 Cyanobacteriota Scatousia 7 Bacillota NSJ-61 8 Bacillota_A 9 Campylobacterota Helicobacter_J 10 Bacillota Coprobacillus 11 Bacillota Clostridium_AQ 12 Bacillota_A CHH4-2 13 Bacillota_A Enterocloster 14 Bacillota_A UBA866 15 Bacillota Lactococcus Lactococcus formosensis 16 Bacillota_A 5.3.1.3 Differences in the functional capacity sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) genome_counts_filt_sub &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt_sub$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filt_sub_row &lt;- genome_counts_filt_sub %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_filt_sub_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filt_sub_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_filt_sub_row,GIFT_db) 5.3.1.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value))%&gt;% mutate(MCI = str_c(round(MCI, 3), &quot;±&quot;, round(sd, 3))) %&gt;% column_to_rownames(., &quot;time_point&quot;) %&gt;% select(MCI) MCI Acclimation 0.335±0.032 Wild 0.349±0.024 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94316, p-value = 0.06988 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 114, p-value = 0.2066 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(8,9)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table Elements Acclimation Wild Function Element Difference group_color 1 B0302 0.009388318 9.027183e-05 Amino acid derivative biosynthesis_Betaine Betaine 0.009298046 Acclimation 2 D0212 0.434367300 5.601500e-01 Polysaccharide degradation_Arabinan Arabinan -0.125782700 Wild 5.3.1.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) %&gt;% mutate(MCI = str_c(round(MCI, 3), &quot;±&quot;, round(sd, 3))) %&gt;% column_to_rownames(., &quot;time_point&quot;) %&gt;% select(MCI) MCI Acclimation 0.329±0.032 Wild 0.346±0.019 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94581, p-value = 0.08424 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 100, p-value = 0.08313 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(8,9)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_s72k8bqyoft8bnpd9fgt, .table th.tinytable_css_s72k8bqyoft8bnpd9fgt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ds2lkcfxzoh9hqymjdmc, .table th.tinytable_css_ds2lkcfxzoh9hqymjdmc { border-bottom: solid #d3d8dc 0.1em; } Code_function Acclimation Wild Function Difference time_point B03 0.1097823 0.1256735 Amino acid derivative biosynthesis -0.0158912 Wild D03 0.2917371 0.3436915 Sugar degradation -0.0519544 Wild 5.3.2 Warm population 5.3.2.1 Structural zeros wild_samples_warm &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point == &quot;Wild&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() acclimation_samples_warm &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_wild_warm = all(c_across(all_of(wild_samples_warm)) == 0)) %&gt;% mutate(all_zeros_acclimation_warm= all(c_across(all_of(acclimation_samples_warm)) == 0)) %&gt;% mutate(average_wild_warm = mean(c_across(all_of(wild_samples_warm)), na.rm = TRUE)) %&gt;% mutate(average_acclimation_warm = mean(c_across(all_of(acclimation_samples_warm)), na.rm = TRUE)) %&gt;% filter(all_zeros_wild_warm == TRUE || all_zeros_acclimation_warm==TRUE) %&gt;% mutate(present = case_when( all_zeros_wild_warm &amp; !all_zeros_acclimation_warm ~ &quot;acclimation&quot;, !all_zeros_wild_warm &amp; all_zeros_acclimation_warm ~ &quot;wild&quot;, !all_zeros_wild_warm &amp; !all_zeros_acclimation_warm ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_wild_warm, average_acclimation_warm)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Wild structural_zeros %&gt;% filter(present==&quot;wild&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 7 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 11 2 p__Bacillota 4 3 p__Pseudomonadota 4 4 p__Bacillota_C 2 5 p__Bacteroidota 1 6 p__Desulfobacterota 1 7 p__Fusobacteriota 1 structural_zeros %&gt;% filter(present==&quot;wild&quot;) %&gt;% select(1,5:10) # A tibble: 24 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_10:bin_000009 p__Desulfobacterota c__Desulfovibrionia o__Desulfovibrionales f__Desulfovibrionaceae g__Bilophila s__ 2 AH1_2nd_10:bin_000018 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__MGBC140009 s__ 3 AH1_2nd_12:bin_000063 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__CHH4-2 s__ 4 AH1_2nd_13:bin_000050 p__Bacillota_A c__Clostridia o__Oscillospirales f__Ruminococcaceae g__ s__ 5 AH1_2nd_14:bin_000027 p__Bacillota_A c__Clostridia o__Peptostreptococcales f__Anaerovoracaceae g__Emergencia s__ 6 AH1_2nd_14:bin_000032 p__Bacillota_C c__Negativicutes o__Selenomonadales f__Massilibacillaceae g__ s__ 7 AH1_2nd_16:bin_000008 p__Bacillota_A c__Clostridia o__Lachnospirales f__ g__ s__ 8 AH1_2nd_18:bin_000033 p__Bacillota c__Bacilli o__Erysipelotrichales f__Coprobacillaceae g__Beduini s__ 9 AH1_2nd_19:bin_000017 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Caccomorpha s__ 10 AH1_2nd_19:bin_000031 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Lachnotalea s__ # ℹ 14 more rows Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% select(1,5:10) # A tibble: 32 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_10:bin_000010 p__Cyanobacteriota c__Vampirovibrionia o__Gastranaerophilales f__Gastranaerophilaceae g__CALURL01 s__ 2 AH1_2nd_12:bin_000001 p__Pseudomonadota c__Gammaproteobacteria o__Pseudomonadales f__Moraxellaceae g__Acinetobacter s__Acinetobacter johnsonii 3 AH1_2nd_14:bin_000015 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ 4 AH1_2nd_14:bin_000063 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Blautia_A s__ 5 AH1_2nd_15:bin_000001 p__Pseudomonadota c__Alphaproteobacteria o__Rhizobiales f__Rhizobiaceae g__Agrobacterium s__Agrobacterium tumefaciens_H 6 AH1_2nd_16:bin_000033 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__ g__ s__ 7 AH1_2nd_16:bin_000096 p__Bacillota_A c__Clostridia o__Oscillospirales f__Ruminococcaceae g__Ruthenibacterium s__ 8 AH1_2nd_17:bin_000015 p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__ s__ 9 AH1_2nd_17:bin_000023 p__Bacillota c__Bacilli o__Erysipelotrichales f__Coprobacillaceae g__Coprobacillus s__ 10 AH1_2nd_18:bin_000039 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Alistipes s__ # ℹ 22 more rows Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(8,9)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table [1] Elements Acclimation Wild Function Element Difference group_color &lt;0 rows&gt; (or 0-length row.names) Differential MAG abundance phylo_samples_warm &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome_warm &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples_warm)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy_warm &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome_warm)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered_warm &lt;- phyloseq(phylo_genome_warm, phylo_taxonomy_warm, phylo_samples_warm) ancombc_wild_accl_warm_2803 = ancombc2(data = physeq_genome_filtered_warm, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancombc_wild_accl_warm_2803, file = &quot;data/ancombc_wild_accl_warm_2803.Rdata&quot;) load(&quot;data/ancombc_wild_accl_warm_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered_warm@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancombc_wild_accl_warm_2803$res %&gt;% dplyr::select(taxon, lfc_time_pointWild, p_time_pointWild) %&gt;% filter(p_time_pointWild &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointWild) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointWild) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_pointWild, y=forcats::fct_reorder(genome,lfc_time_pointWild), fill=phylum)) + geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in acclimation on the left side and in wild on the right side Phyla of the significant MAGs Acclimation ancombc_rand_table_mag%&gt;% filter(lfc_time_pointWild&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 4 2 Bacillota 2 3 Bacillota_A 2 4 Cyanobacteriota 2 5 Desulfobacterota 1 6 Verrucomicrobiota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointWild&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota_A 2 Verrucomicrobiota Akkermansia 3 Bacteroidota Odoribacter 4 Bacteroidota Alistipes 5 Bacillota C-19 6 Cyanobacteriota Scatousia 7 Cyanobacteriota Scatousia 8 Bacteroidota Phocaeicola 9 Bacillota Coprobacillus 10 Desulfobacterota Lawsonia 11 Bacteroidota Egerieousia 12 Bacillota_A IOR16 Wild ancombc_rand_table_mag%&gt;% filter(lfc_time_pointWild&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 8 2 Bacillota 4 3 Bacteroidota 3 4 Pseudomonadota 3 5 Bacillota_C 1 6 Desulfobacterota 1 7 Spirochaetota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointWild&gt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota Coprobacillus 2 Bacillota NSJ-61 3 Bacillota_A Oscillibacter 4 Desulfobacterota 5 Bacteroidota Bacteroides 6 Bacillota_A Copromonas 7 Bacteroidota Parabacteroides Parabacteroides goldsteinii 8 Bacteroidota Bacteroides Bacteroides thetaiotaomicron 9 Bacillota_A 10 Bacillota_C 11 Pseudomonadota 12 Bacillota_A 13 Pseudomonadota 14 Bacillota_A Clostridium_Q 15 Bacillota_A Clostridium_Q 16 Bacillota_A Anaerotruncus 17 Bacillota 18 Bacillota_A Negativibacillus 19 Spirochaetota Brevinema 20 Pseudomonadota CALXRO01 21 Bacillota Faecimonas 5.3.2.2 Differences in the functional capacity sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) genome_counts_sub &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_sub$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_sub_row &lt;- genome_counts_sub %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_sub_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_sub_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_sub_row,GIFT_db) 5.3.2.2.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value))%&gt;% mutate(MCI = str_c(round(MCI, 3), &quot;±&quot;, round(sd, 3))) %&gt;% column_to_rownames(., &quot;time_point&quot;) %&gt;% select(MCI) MCI Acclimation 0.355±0.023 Wild 0.317±0.033 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94071, p-value = 0.298 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 68, p-value = 0.01419 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(8,9)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=c(&quot;#d57d2c50&quot;,&quot;#d57d2c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;time_point&quot;) 5.3.2.2.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value))%&gt;% mutate(MCI = str_c(round(MCI, 3), &quot;±&quot;, round(sd, 3))) %&gt;% column_to_rownames(., &quot;time_point&quot;) %&gt;% select(MCI) MCI Acclimation 0.348±0.016 Wild 0.327±0.024 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.95424, p-value = 0.4954 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 61, p-value = 0.07701 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(8,9)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_93uf2ihm0tpo0uozaf0f, .table th.tinytable_css_93uf2ihm0tpo0uozaf0f { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7zsnrjfotdpjidvkry8t, .table th.tinytable_css_7zsnrjfotdpjidvkry8t { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Code_function Acclimation Wild Function Difference time_point S02 0.1703507 0.2481279 Appendages -0.0777772 Wild "],["does-the-antibiotic-administration-deplete-the-gut-microbiota.html", "Chapter 6 Does the antibiotic administration deplete the gut microbiota? 6.1 DNA extraction 6.2 Bacterial fraction change", " Chapter 6 Does the antibiotic administration deplete the gut microbiota? 6.1 DNA extraction Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] Formula: dna_extraction ~ time_point.x + (1 | individual) Data: dna_extraction_df REML criterion at convergence: 232.6 Scaled residuals: Min 1Q Median 3Q Max -1.0148 -0.4947 -0.2085 0.2941 3.4251 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 1.254 1.120 Residual 6.835 2.614 Number of obs: 48, groups: individual, 27 Fixed effects: Estimate Std. Error df t value Pr(&gt;|t|) (Intercept) 3.0236 0.5575 44.3763 5.423 2.3e-06 *** time_point.xAntibiotics -1.9883 0.7647 15.7132 -2.600 0.0195 * --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pnt.xAnt -0.621 6.2 Bacterial fraction change Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] Formula: value ~ time_point + (1 | individual) Data: mag_fragtion_accli_antib REML criterion at convergence: -32.1 Scaled residuals: Min 1Q Median 3Q Max -2.83330 -0.50215 0.02912 0.42721 2.64670 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.005276 0.07264 Residual 0.021003 0.14492 Number of obs: 49, groups: individual, 27 Fixed effects: Estimate Std. Error df t value Pr(&gt;|t|) (Intercept) 0.59143 0.03177 45.81661 18.62 &lt; 2e-16 *** time_pointAntibiotics -0.32188 0.04191 26.03436 -7.68 3.74e-08 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pntAntbt -0.612 "],["does-the-antibiotic-administration-change-the-microbial-community.html", "Chapter 7 Does the antibiotic administration change the microbial community? 7.1 Alpha diversity 7.2 Beta diversity 7.3 Differences in MAGs and functional capacity", " Chapter 7 Does the antibiotic administration change the microbial community? 7.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) label_map &lt;- c( &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;)), time_point = factor(time_point, levels = c(&quot;Wild&quot;, &quot;Acclimation&quot;))) %&gt;% filter(time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=Population, fill=Population)) + geom_boxplot(width = 0.5,alpha=0.5, outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2,show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + facet_grid(metric ~ Population, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.text = element_text(size = 14), axis.title = element_text(size = 14), strip.text = element_text(size = 18, lineheight = 0.6), ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ time_point*Population+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(5.1645) ( log ) Formula: richness ~ time_point * Population + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 434.8 446.1 -211.4 422.8 43 Scaled residuals: Min 1Q Median 3Q Max -1.61979 -0.56608 0.06074 0.51882 2.39923 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.2193 0.4683 Number of obs: 49, groups: individual, 27 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.7459 0.1623 23.073 &lt; 2e-16 *** time_pointAntibiotics -1.1523 0.1862 -6.190 6.02e-10 *** PopulationWarm 0.7055 0.2719 2.595 0.00946 ** time_pointAntibiotics:PopulationWarm -0.3586 0.3037 -1.181 0.23769 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pnA PpltnW tm_pntAntbt -0.466 PopulatnWrm -0.598 0.278 tm_pntAn:PW 0.292 -0.611 -0.461 Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 342.5018 353.3418 -165.2509 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.282619 7.923552 Fixed effects: neutral ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 19.11713 2.078908 25 9.195758 0e+00 time_pointAntibiotics -11.46317 2.832826 20 -4.046551 6e-04 PopulationWarm 24.97345 3.534826 25 7.064972 0e+00 time_pointAntibiotics:PopulationWarm -20.91701 4.793363 20 -4.363745 3e-04 Correlation: (Intr) tm_pnA PpltnW time_pointAntibiotics -0.633 PopulationWarm -0.588 0.373 time_pointAntibiotics:PopulationWarm 0.374 -0.591 -0.632 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.8258256 -0.5685215 -0.1867832 0.5823712 2.0651455 Number of Observations: 49 Number of Groups: 27 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 203.6546 214.4946 -95.8273 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7173285 1.688356 Fixed effects: phylogenetic ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 5.365728 0.4446271 25 12.067930 0.0000 time_pointAntibiotics -0.761455 0.6038652 20 -1.260969 0.2218 PopulationWarm 1.097291 0.7560383 25 1.451370 0.1591 time_pointAntibiotics:PopulationWarm -0.702255 1.0216421 20 -0.687379 0.4997 Correlation: (Intr) tm_pnA PpltnW time_pointAntibiotics -0.631 PopulationWarm -0.588 0.371 time_pointAntibiotics:PopulationWarm 0.373 -0.591 -0.629 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.85993684 -0.51436620 -0.05130501 0.48944142 1.80209573 Number of Observations: 49 Number of Groups: 27 7.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03530 0.035300 10.073 999 0.002 ** Residuals 47 0.16471 0.003505 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tofwfdr95767oln5n8wc, .table th.tinytable_css_tofwfdr95767oln5n8wc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_a3t09maefss05s7uck0v, .table th.tinytable_css_a3t09maefss05s7uck0v { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 1.9348458 0.1002347 6.065418 0.001 Population 1 2.1356198 0.1106358 6.694811 0.001 time_point:Population 1 0.8778553 0.0454773 2.751930 0.004 Residual 45 14.3548318 0.7436522 NA NA Total 48 19.3031527 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.051657 0.051657 9.9224 999 0.005 ** Residuals 47 0.244689 0.005206 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_d5vtzx1a73xgwynwgf05, .table th.tinytable_css_d5vtzx1a73xgwynwgf05 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_1x7si4qip2baeugcole0, .table th.tinytable_css_1x7si4qip2baeugcole0 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 2.0429592 0.11061666 7.254623 0.001 Population 1 2.8764490 0.15574623 10.214376 0.001 time_point:Population 1 0.8770558 0.04748846 3.114457 0.003 Residual 45 12.6723552 0.68614864 NA NA Total 48 18.4688192 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.67439 0.67439 55.932 999 0.001 *** Residuals 47 0.56670 0.01206 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_dvczmmxsoya1m3er8g39, .table th.tinytable_css_dvczmmxsoya1m3er8g39 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_33if36zpfxm9k7apetmp, .table th.tinytable_css_33if36zpfxm9k7apetmp { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value time_point 1 1.8783556 0.23032747 16.358708 0.001 Population 1 0.7551942 0.09260332 6.577030 0.001 time_point:Population 1 0.3545686 0.04347786 3.087959 0.023 Residual 45 5.1670341 0.63359135 NA NA Total 48 8.1551525 1.00000000 NA NA dbRDA #Richness cca_ord &lt;- capscale(formula = richness ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode( biplot_scores$Variable, &quot;subset_meta$time_pointAntibiotics&quot; = &quot;Antibiotics&quot;, &quot;subset_meta$PopulationWarm&quot; = &quot;Warm population&quot;, &quot;subset_meta$time_pointAntibiotics:subset_meta$PopulationWarm&quot; = &quot;Interaction Wam population&quot; ) CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode( biplot_scores$Variable, &quot;subset_meta$time_pointAntibiotics&quot; = &quot;Antibiotics&quot;, &quot;subset_meta$PopulationWarm&quot; = &quot;Warm population&quot;, &quot;subset_meta$time_pointAntibiotics:subset_meta$PopulationWarm&quot; = &quot;Interaction Wam population&quot; ) CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;))+ geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode( biplot_scores$Variable, &quot;subset_meta$time_pointAntibiotics&quot; = &quot;Antibiotics&quot;, &quot;subset_meta$PopulationWarm&quot; = &quot;Warm population&quot;, &quot;subset_meta$time_pointAntibiotics:subset_meta$PopulationWarm&quot; = &quot;Interaction Wam population&quot; ) CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() 7.3 Differences in MAGs and functional capacity 7.3.1 Cold population 7.3.1.1 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point == &quot;Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Antibiotics&quot;,&quot;Acclimation&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 9 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 43 2 p__Bacteroidota 15 3 p__Bacillota 8 4 p__Pseudomonadota 8 5 p__Cyanobacteriota 3 6 p__Verrucomicrobiota 2 7 p__Bacillota_B 1 8 p__Bacillota_C 1 9 p__Fusobacteriota 1 structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% select(1,5:10) # A tibble: 82 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_1:bin_000006 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Kineothrix s__ 2 AH1_2nd_19:bin_000005 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Roseburia s__ 3 AH1_2nd_11:bin_000008 p__Verrucomicrobiota c__Verrucomicrobiae o__Verrucomicrobiales f__Akkermansiaceae g__Akkermansia s__ 4 AH1_2nd_2:bin_000003 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__JAAYNV01 s__ 5 AH1_2nd_10:bin_000007 p__Bacillota_A c__Clostridia o__Lachnospirales f__ g__ s__ 6 AH1_2nd_15:bin_000043 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides s__ 7 AH1_2nd_10:bin_000041 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Alistipes s__ 8 AH1_2nd_8:bin_000007 p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma s__ 9 AH1_2nd_14:bin_000015 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ 10 AH1_2nd_5:bin_000001 p__Bacillota_C c__Negativicutes o__Selenomonadales f__ g__ s__ # ℹ 72 more rows Antibiotics structural_zeros %&gt;% filter(present==&quot;antibiotics&quot;) %&gt;% select(1,5:10) # A tibble: 4 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_7:bin_000003 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 2 LI1_2nd_7:bin_000001 p__Bacillota_A c__Clostridia o__Clostridiales f__Clostridiaceae g__Sarcina s__ 3 AH1_2nd_7:bin_000055 p__Bacillota c__Bacilli o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma s__ 4 AH1_2nd_13:bin_000025 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 7.3.1.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_antib_accl_2803 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_antib_accl_2803, file = &quot;data/ancombc_antib_accl_2803.Rdata&quot;) load(&quot;data/ancombc_antib_accl_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_antib_accl_2803$res %&gt;% dplyr::select(taxon, lfc_time_pointAntibiotics, p_time_pointAntibiotics) %&gt;% filter(p_time_pointAntibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointAntibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointAntibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_pointAntibiotics, y=forcats::fct_reorder(genome,lfc_time_pointAntibiotics), fill=phylum)) + geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in acclimation on the left side and in antibiotics on the right side Phyla of the significant MAGs Acclimation ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 12 2 Bacillota_A 3 3 Bacillota 1 4 Campylobacterota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Campylobacterota Helicobacter_J 2 Bacillota_A 3 Bacteroidota Bacteroides 4 Bacteroidota Odoribacter 5 Bacteroidota Bacteroides 6 Bacillota 7 Bacteroidota Bacteroides 8 Bacteroidota Bacteroides 9 Bacteroidota Phocaeicola 10 Bacteroidota Phocaeicola 11 Bacteroidota Bacteroides 12 Bacteroidota Parabacteroides 13 Bacteroidota 14 Bacillota_A 15 Bacteroidota Alistipes 16 Bacillota_A 17 Bacteroidota Odoribacter Antibiotics ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 2 2 Bacillota 1 3 Pseudomonadota 1 4 Verrucomicrobiota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&gt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota_A MGBC116941 2 Bacillota CAG-345 3 Bacillota_A Intestinimonas 4 Verrucomicrobiota 5 Pseudomonadota 7.3.1.3 Differences in the functional capacity sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_filtered_row,GIFT_db) 7.3.1.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.335 0.0323 2 Antibiotics 0.247 0.136 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94311, p-value = 0.09178 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 190, p-value = 0.01768 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(8,9)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Antibiotics)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Antibiotics&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&#39;#008080&#39;,&quot;#003a45&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;time_point&quot;) 7.3.1.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.329 0.0319 2 Antibiotics 0.256 0.126 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.95736, p-value = 0.2323 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 188, p-value = 0.02195 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(8,9)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_undnxpdp4eym2xzizsaa, .table th.tinytable_css_undnxpdp4eym2xzizsaa { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_39yrm2triz4ca30qaaal, .table th.tinytable_css_39yrm2triz4ca30qaaal { border-bottom: solid #d3d8dc 0.1em; } Code_function Acclimation Antibiotics Function Difference time_point B06 0.68059020 0.47329940 Organic anion biosynthesis 0.20729080 Acclimation B02 0.59930820 0.41576970 Amino acid biosynthesis 0.18353850 Acclimation D02 0.38530780 0.20616790 Polysaccharide degradation 0.17913990 Acclimation S03 0.27145162 0.09403129 Spore 0.17742033 Acclimation B01 0.84159250 0.69078390 Nucleic acid biosynthesis 0.15080860 Acclimation B07 0.44505530 0.30423320 Vitamin biosynthesis 0.14082210 Acclimation B08 0.44618700 0.32094170 Aromatic compound biosynthesis 0.12524530 Acclimation D09 0.25519710 0.13446900 Antibiotic degradation 0.12072810 Acclimation B04 0.54481600 0.42941310 SCFA biosynthesis 0.11540290 Acclimation D03 0.29173710 0.20687250 Sugar degradation 0.08486460 Acclimation D05 0.28853350 0.22270070 Amino acid degradation 0.06583280 Acclimation B10 0.05960097 0.03635236 Antibiotic biosynthesis 0.02324861 Acclimation 7.3.2 Warm population 7.3.2.1 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point == &quot;Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 12 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 64 2 p__Bacteroidota 32 3 p__Bacillota 16 4 p__Cyanobacteriota 9 5 p__Pseudomonadota 8 6 p__Bacillota_B 3 7 p__Desulfobacterota 3 8 p__Bacillota_C 2 9 p__Verrucomicrobiota 2 10 p__Actinomycetota 1 11 p__Campylobacterota 1 12 p__Elusimicrobiota 1 structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% select(1,5:10) # A tibble: 142 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_11:bin_000008 p__Verrucomicrobiota c__Verrucomicrobiae o__Verrucomicrobiales f__Akkermansiaceae g__Akkermansia s__ 2 LI1_2nd_8:bin_000013 p__Verrucomicrobiota c__Verrucomicrobiae o__Verrucomicrobiales f__Akkermansiaceae g__Akkermansia s__ 3 AH1_2nd_19:bin_000005 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Roseburia s__ 4 AH1_2nd_20:bin_000009 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Kineothrix s__ 5 AH1_2nd_18:bin_000011 p__Bacillota c__Bacilli o__Erysipelotrichales f__Coprobacillaceae g__Coprobacillus s__ 6 LI1_2nd_2:bin_000001 p__Bacillota_A c__Clostridia o__Oscillospirales f__Ruminococcaceae g__ s__ 7 AH1_2nd_6:bin_000035 p__Bacillota c__Bacilli o__RF39 f__UBA660 g__Faecisoma s__ 8 LI1_2nd_4:bin_000003 p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma s__ 9 AH1_2nd_1:bin_000039 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Marinifilaceae g__Odoribacter s__ 10 AH1_2nd_2:bin_000018 p__Elusimicrobiota c__Elusimicrobia o__Elusimicrobiales f__Elusimicrobiaceae g__UBA1436 s__ # ℹ 132 more rows Antibiotics structural_zeros %&gt;% filter(present==&quot;antibiotics&quot;) %&gt;% select(1,5:10) # A tibble: 7 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_7:bin_000003 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 2 LI1_2nd_8:bin_000030 p__Actinomycetota c__Actinomycetia o__Mycobacteriales f__Mycobacteriaceae g__Corynebacterium s__ 3 LI1_2nd_8:bin_000077 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Tannerellaceae g__Parabacteroides s__Parabacteroides sp003480915 4 LI1_2nd_5:bin_000032 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA1242 g__Caccovivens s__ 5 AH1_2nd_18:bin_000013 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Tannerellaceae g__Parabacteroides s__ 6 LI1_2nd_5:bin_000069 p__Bacillota c__Bacilli o__RF39 f__UBA660 g__ s__ 7 AH1_2nd_20:bin_000061 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 20 × 3 trait p_value p_adjust &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 B0220 0.00618 0.0497 2 B0708 0.00280 0.0497 3 B0709 0.00662 0.0497 4 B1012 0.00618 0.0497 5 D0203 0.00559 0.0497 6 D0205 0.00280 0.0497 7 D0206 0.00280 0.0497 8 D0207 0.00280 0.0497 9 D0210 0.00280 0.0497 10 D0211 0.00662 0.0497 11 D0213 0.00685 0.0497 12 D0305 0.00685 0.0497 13 D0308 0.00685 0.0497 14 D0610 0.00618 0.0497 15 D0706 0.00662 0.0497 16 D0902 0.00618 0.0497 17 D0905 0.00618 0.0497 18 D0908 0.00280 0.0497 19 D0911 0.00618 0.0497 20 S0104 0.00685 0.0497 7.3.2.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_2803 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_2803, file = &quot;data/ancombc_antib_accl_warm_2803.Rdata&quot;) load(&quot;data/ancombc_antib_accl_warm_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_2803$res %&gt;% dplyr::select(taxon, lfc_time_pointAntibiotics, p_time_pointAntibiotics) %&gt;% filter(p_time_pointAntibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointAntibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointAntibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_pointAntibiotics, y=forcats::fct_reorder(genome,lfc_time_pointAntibiotics), fill=phylum)) + geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in acclimation on the left side and in antibiotics on the right side Phyla of the significant MAGs Acclimation ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacteroidota Phocaeicola Antibiotics ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota 2 2 Bacillota_A 2 3 Bacteroidota 1 4 Chlamydiota 1 5 Pseudomonadota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&gt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota_A 2 Bacillota_A MGBC116941 3 Bacillota Staphylococcus Staphylococcus shinii 4 Bacteroidota Bacteroides 5 Bacillota Ureaplasma 6 Pseudomonadota 7 Chlamydiota 7.3.2.3 Differences in the functional capacity sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_filtered_row,GIFT_db) 7.3.2.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.355 0.0228 2 Antibiotics 0.253 0.0674 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.88114, p-value = 0.03317 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 70, p-value = 0.0003291 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(8,9)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Antibiotics)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Antibiotics&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#d57d2c&quot;,&quot;#003a45&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;time_point&quot;) 7.3.2.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.348 0.0158 2 Antibiotics 0.268 0.0586 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.85791, p-value = 0.01419 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 69, p-value = 0.0005759 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(8,9)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_lerb9169jdrj31bewrk9, .table th.tinytable_css_lerb9169jdrj31bewrk9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8vdb01gybxl0kwaw60da, .table th.tinytable_css_8vdb01gybxl0kwaw60da { border-bottom: solid #d3d8dc 0.1em; } Code_function Acclimation Antibiotics Function Difference time_point D02 0.42716670 0.21793910 Polysaccharide degradation 0.20922760 Acclimation B02 0.62784110 0.47187490 Amino acid biosynthesis 0.15596620 Acclimation D03 0.34000130 0.18813800 Sugar degradation 0.15186330 Acclimation B08 0.44482920 0.33165890 Aromatic compound biosynthesis 0.11317030 Acclimation D05 0.33300830 0.22491860 Amino acid degradation 0.10808970 Acclimation D09 0.24738110 0.14240830 Antibiotic degradation 0.10497280 Acclimation B06 0.70894950 0.61231610 Organic anion biosynthesis 0.09663340 Acclimation B09 0.02947309 0.01568554 Metallophore biosynthesis 0.01378755 Acclimation "],["does-antibiotic-administration-remove-the-differences-found-in-the-two-populations.html", "Chapter 8 Does antibiotic administration remove the differences found in the two populations? 8.1 Alpha diversity 8.2 Beta diversity", " Chapter 8 Does antibiotic administration remove the differences found in the two populations? 8.1 Alpha diversity ****Shapiro test*** alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.001165318 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.0003462674 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.06628442 alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point == &quot;Antibiotics&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;, &quot;neutral&quot;))) %&gt;% filter(metric!=&quot;phylogenetic&quot;) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ facet_grid( ~ metric, scales = &quot;free_y&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title = element_text(size = 14), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ facet_grid( ~ metric, scales = &quot;free_y&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title = element_text(size = 14), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) 8.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;Antibiotics&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;Antibiotics&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.015377 0.0153774 6.8934 999 0.015 * Residuals 21 0.046845 0.0022307 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_hk5fk188obgoad9ncad5, .table th.tinytable_css_hk5fk188obgoad9ncad5 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3vpx0xqzsloudxign679, .table th.tinytable_css_3vpx0xqzsloudxign679 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.361743 0.1533845 3.80465 0.001 Residual 21 7.516224 0.8466155 NA NA Total 22 8.877966 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.030649 0.0306488 3.8694 999 0.053 . Residuals 21 0.166339 0.0079209 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tg37pztaud4sjtwhd4vx, .table th.tinytable_css_tg37pztaud4sjtwhd4vx { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_f665yn2qycx9rmrt2ohb, .table th.tinytable_css_f665yn2qycx9rmrt2ohb { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.787698 0.208772 5.541022 0.001 Residual 21 6.775221 0.791228 NA NA Total 22 8.562919 1.000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.012165 0.012165 0.9979 999 0.321 Residuals 21 0.256012 0.012191 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_wvb736gjxmezejeciv2w, .table th.tinytable_css_wvb736gjxmezejeciv2w { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_h2i7wdiop3obud4hmrhp, .table th.tinytable_css_h2i7wdiop3obud4hmrhp { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.8970751 0.1890846 4.896659 0.001 Residual 21 3.8472307 0.8109154 NA NA Total 22 4.7443057 1.0000000 NA NA richness %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + geom_point(size = 2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme() neutral %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + geom_point(size = 2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x = &quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme() phylo %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(values = c(&#39;#008080&#39;, &quot;#d57d2c&quot;))+ geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme() "],["are-the-microbial-communities-similar-in-both-donor-samples.html", "Chapter 9 Are the microbial communities similar in both donor samples? 9.1 Alpha diversity 9.2 Beta diversity", " Chapter 9 Are the microbial communities similar in both donor samples? 9.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type ==&quot;Warm_control&quot; &amp; time_point %in% c( &quot;Donor1&quot;, &quot;Donor2&quot;)) samples_to_keep &lt;- sample_metadata %&gt;% filter(type ==&quot;Warm_control&quot; &amp; time_point %in% c( &quot;Donor1&quot;, &quot;Donor2&quot;))%&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type ==&quot;Warm_control&quot; &amp; time_point %in% c( &quot;Donor1&quot;, &quot;Donor2&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type ==&quot;Warm_control&quot; &amp; time_point %in% c( &quot;Donor1&quot;, &quot;Donor2&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_boxplot(width = 0.5,alpha=0.5, outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2,show.legend = FALSE) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#d5992c&#39;, &quot;#d5b52c&quot;)) + scale_fill_manual(name=&quot;Time point&quot;,values=c(&#39;#d5992c&#39;, &quot;#d5b52c&quot;)) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.text = element_text(size = 14), axis.title = element_text(size = 14), strip.text = element_text(size = 18, lineheight = 0.6), ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(17.9668) ( log ) Formula: richness ~ time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 150.4 153.3 -71.2 142.4 11 Scaled residuals: Min 1Q Median 3Q Max -2.02956 -0.52933 0.03513 0.56378 1.56130 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.009989 0.09995 Number of obs: 15, groups: individual, 8 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.60703 0.09905 46.514 &lt;2e-16 *** time_pointDonor2 0.05482 0.13299 0.412 0.68 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tim_pntDnr2 -0.624 Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 115.9183 118.1781 -53.95914 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 9.533528 10.15744 Fixed effects: neutral ~ time_point Value Std.Error DF t-value p-value (Intercept) 43.94053 4.925212 7 8.921551 0.0000 time_pointDonor2 4.31623 5.338413 6 0.808523 0.4497 Correlation: (Intr) time_pointDonor2 -0.491 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.57714267 -0.56764018 0.05406399 0.55332481 1.12750552 Number of Observations: 15 Number of Groups: 8 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 41.16537 43.42517 -16.58269 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.16159 0.3042944 Fixed effects: phylogenetic ~ time_point Value Std.Error DF t-value p-value (Intercept) 5.785003 0.4245418 7 13.626462 0.0000 time_pointDonor2 -0.018098 0.1623255 6 -0.111494 0.9149 Correlation: (Intr) time_pointDonor2 -0.168 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.2428123 -0.3756145 -0.0502414 0.4569146 1.3175579 Number of Observations: 15 Number of Groups: 8 9.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00014 0.0001396 0.0173 999 0.892 Residuals 13 0.10481 0.0080621 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_njgv4pcrzzmg0yp9qigm, .table th.tinytable_css_njgv4pcrzzmg0yp9qigm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_k7425puyx6mhgh9oq4je, .table th.tinytable_css_k7425puyx6mhgh9oq4je { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.06889268 0.03010712 0.4035421 0.9375 Residual 13 2.21935895 0.96989288 NA NA Total 14 2.28825162 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000655 0.0006546 0.0514 999 0.811 Residuals 13 0.165409 0.0127237 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tcp68hcekaf8xznvqt7q, .table th.tinytable_css_tcp68hcekaf8xznvqt7q { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_b1qq5pj243vgxb7ciqoq, .table th.tinytable_css_b1qq5pj243vgxb7ciqoq { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.09294671 0.03882177 0.5250671 0.7265625 Residual 13 2.30124351 0.96117823 NA NA Total 14 2.39419022 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.003691 0.0036912 0.3071 999 0.657 Residuals 13 0.156266 0.0120205 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_wuer3avx12f87u508zgw, .table th.tinytable_css_wuer3avx12f87u508zgw { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_kiunj4dp56kiw1o1ry0k, .table th.tinytable_css_kiunj4dp56kiw1o1ry0k { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.009773632 0.01921019 0.2546239 0.7734375 Residual 13 0.498999565 0.98078981 NA NA Total 14 0.508773196 1.00000000 NA NA "],["does-the-donor-sample-maintain-the-microbial-community-found-in-acclimation.html", "Chapter 10 Does the donor sample maintain the microbial community found in acclimation? 10.1 Alpha diversity 10.2 Beta diversity", " Chapter 10 Does the donor sample maintain the microbial community found in acclimation? sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=time_point) %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Donor1&quot;, &quot;Donor2&quot;) ~ &quot;Donor&quot;, TRUE ~ treatment )) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Warm_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Donor&quot;)) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Warm_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Donor&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Warm_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Donor&quot;)) 10.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type == &quot;Warm_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Donor&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + facet_wrap( ~ metric, scales = &quot;free&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title.y = element_text(size = 14), axis.title.x = element_blank(), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(19.6072) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 228.0 232.7 -110.0 220.0 20 Scaled residuals: Min 1Q Median 3Q Max -2.37872 -0.53180 0.06467 0.46904 1.76837 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0 0 Number of obs: 24, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.4569 0.0834 53.441 &lt;2e-16 *** treatmentDonor 0.1855 0.1049 1.769 0.0769 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) treatmntDnr -0.795 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 185.3367 189.7009 -88.66837 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.001909967 12.18199 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 44.09058 4.060663 14 10.857976 0.0000 treatmentDonor 1.80350 5.136377 14 0.351122 0.7307 Correlation: (Intr) treatmentDonor -0.791 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.66610957 -0.48314823 -0.03902931 0.62479437 2.02597977 Number of Observations: 24 Number of Groups: 9 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 80.6646 85.02877 -36.3323 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7197786 0.9593315 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 6.463020 0.3997775 14 16.166544 0.0000 treatmentDonor -0.577492 0.4112749 14 -1.404151 0.1821 Correlation: (Intr) treatmentDonor -0.622 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.329685717 -0.568101055 -0.001989187 0.552370170 1.529548991 Number of Observations: 24 Number of Groups: 9 10.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00836 0.0083600 1.4409 999 0.274 Residuals 22 0.12764 0.0058019 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_i7ysqlbktgi4yyftc41f, .table th.tinytable_css_i7ysqlbktgi4yyftc41f { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_bus949qgktpgccs84dyl, .table th.tinytable_css_bus949qgktpgccs84dyl { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.2657351 0.06396199 1.503319 0.118 Residual 22 3.8888430 0.93603801 NA NA Total 23 4.1545781 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000661 0.0006614 0.0736 999 0.802 Residuals 22 0.197804 0.0089911 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tus99bmwgr31mu6ewri7, .table th.tinytable_css_tus99bmwgr31mu6ewri7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_nx3rj7bdajuiqn22hu5e, .table th.tinytable_css_nx3rj7bdajuiqn22hu5e { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3164816 0.07596593 1.808646 0.087 Residual 22 3.8496178 0.92403407 NA NA Total 23 4.1660995 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00204 0.0020405 0.2622 999 0.655 Residuals 22 0.17118 0.0077807 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ki9r3jirp4s07nlf7yug, .table th.tinytable_css_ki9r3jirp4s07nlf7yug { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_1mx1rbbn2sz5z8qh931y, .table th.tinytable_css_1mx1rbbn2sz5z8qh931y { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.0412056 0.056244 1.31111 0.263 Residual 22 0.6914166 0.943756 NA NA Total 23 0.7326222 1.000000 NA NA NMDS richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.6, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.6, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.6, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) "],["is-the-donor-sample-microbiota-different-to-recipient-microbiota.html", "Chapter 11 Is the donor sample microbiota different to recipient microbiota? 11.1 Alpha diversity 11.2 Beta diversity", " Chapter 11 Is the donor sample microbiota different to recipient microbiota? 11.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Donor&quot;)) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Donor&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Donor&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Donor&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + facet_wrap( ~ metric, scales = &quot;free&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title.y = element_text(size = 14), axis.title.x = element_blank(), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(6.4835) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 219.3 223.6 -105.6 211.3 18 Scaled residuals: Min 1Q Median 3Q Max -1.9573 -0.5447 0.1304 0.5773 1.2167 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 5.302e-13 7.281e-07 Number of obs: 22, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.8067 0.1400 27.19 &lt; 2e-16 *** treatmentDonor 0.8399 0.1795 4.68 2.87e-06 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) treatmntDnr -0.780 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;-nlme:: lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 169.583 173.5659 -80.79148 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.713488 11.40939 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 17.31015 4.114893 12 4.206708 0.0012 treatmentDonor 28.70744 5.016259 12 5.722879 0.0001 Correlation: (Intr) treatmentDonor -0.701 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.4861810 -0.5958348 0.1169620 0.5490436 1.7889456 Number of Observations: 22 Number of Groups: 9 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 80.93175 84.91468 -36.46587 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.8689563 1.118803 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 5.488256 0.4722057 12 11.622595 0.00 treatmentDonor 0.226402 0.5020134 12 0.450988 0.66 Correlation: (Intr) treatmentDonor -0.587 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.42844864 -0.44112019 -0.05260838 0.51238319 1.55109109 Number of Observations: 22 Number of Groups: 9 11.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.12795 0.127946 13.179 999 0.001 *** Residuals 20 0.19416 0.009708 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zxd87bxzu78l4f52ze02, .table th.tinytable_css_zxd87bxzu78l4f52ze02 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_scsvvrkgftqb7pyv9lqa, .table th.tinytable_css_scsvvrkgftqb7pyv9lqa { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.777815 0.2760196 7.625059 0.001 Residual 20 4.663086 0.7239804 NA NA Total 21 6.440902 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.071502 0.071502 5.4967 999 0.032 * Residuals 20 0.260166 0.013008 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_y9105h4bvw7rij4057l4, .table th.tinytable_css_y9105h4bvw7rij4057l4 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_vm6vhtrrz4nrvjohqfbu, .table th.tinytable_css_vm6vhtrrz4nrvjohqfbu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 2.112572 0.3210813 9.458609 0.001 Residual 20 4.466983 0.6789187 NA NA Total 21 6.579556 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04731 0.047307 2.6157 999 0.108 Residuals 20 0.36172 0.018086 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_v2qoyx68rikjvzcswz0s, .table th.tinytable_css_v2qoyx68rikjvzcswz0s { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_uq42q5yrpq5qowy7ijoh, .table th.tinytable_css_uq42q5yrpq5qowy7ijoh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3778248 0.239656 6.303884 0.003 Residual 20 1.1987049 0.760344 NA NA Total 21 1.5765298 1.000000 NA NA NMDS richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) "],["does-fmt-change-the-microbial-community-over-time.html", "Chapter 12 Does FMT change the microbial community over time? 12.1 Alpha diversity 12.2 Beta diversity", " Chapter 12 Does FMT change the microbial community over time? 12.1 Alpha diversity sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=time_point) %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Donor1&quot;, &quot;Donor2&quot;) ~ &quot;Donor&quot;, TRUE ~ treatment )) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;,&quot;FMT2&quot;) ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% filter(type==&quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + scale_fill_manual(values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + facet_wrap( ~ metric, scales = &quot;free&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title.y = element_text(size = 14), axis.title.x = element_blank(), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.3876) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 171.0 174.3 -81.5 163.0 13 Scaled residuals: Min 1Q Median 3Q Max -1.73495 -0.71265 -0.07086 0.40744 1.88240 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 1.073e-11 3.275e-06 Number of obs: 17, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9343 0.1759 22.369 &lt;2e-16 *** treatmentFMT2 0.4052 0.2402 1.687 0.0917 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tretmntFMT2 -0.732 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 128.7946 131.6268 -60.3973 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.497472 11.25384 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 24.65947 4.164756 8 5.920988 0.0004 treatmentFMT2 14.87494 5.482531 7 2.713151 0.0301 Correlation: (Intr) treatmentFMT2 -0.7 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.76462324 -0.55701822 -0.04763166 0.55267588 1.30333436 Number of Observations: 17 Number of Groups: 9 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 56.05281 58.88501 -24.0264 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.6954001 0.8350046 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 4.154090 0.3805932 8 10.914778 0.0000 treatmentFMT2 0.912624 0.4105974 7 2.222673 0.0616 Correlation: (Intr) treatmentFMT2 -0.583 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.1361565 -0.5779234 -0.1465750 0.4815529 2.3352020 Number of Observations: 17 Number of Groups: 9 12.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.017610 0.017610 2.8225 999 0.117 Residuals 15 0.093585 0.006239 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_jghqadwtechw6ythkdal, .table th.tinytable_css_jghqadwtechw6ythkdal { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ebpa47pr4iimy1gd59jh, .table th.tinytable_css_ebpa47pr4iimy1gd59jh { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3560084 0.07968734 1.298809 0.00390625 Residual 15 4.1115570 0.92031266 NA NA Total 16 4.4675655 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.009828 0.0098278 0.7113 999 0.405 Residuals 15 0.207263 0.0138175 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nrt3pz30qhpx1o7jhzxb, .table th.tinytable_css_nrt3pz30qhpx1o7jhzxb { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_gq4y77g4254y2kn4xchp, .table th.tinytable_css_gq4y77g4254y2kn4xchp { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3149954 0.08110541 1.323962 0.00390625 Residual 15 3.5687823 0.91889459 NA NA Total 16 3.8837776 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.010955 0.010955 0.6602 999 0.523 Residuals 15 0.248892 0.016593 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_svnfe3y95bo59go8l23i, .table th.tinytable_css_svnfe3y95bo59go8l23i { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5kkleh00h8a4564kbag9, .table th.tinytable_css_5kkleh00h8a4564kbag9 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.06391536 0.09449338 1.565312 0.0703125 Residual 15 0.61248501 0.90550662 NA NA Total 16 0.67640037 1.00000000 NA NA NMDS richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) "],["do-fmt-change-the-microbial-community-compared-to-antibiotics-and-acclimation.html", "Chapter 13 Do FMT change the microbial community compared to antibiotics and acclimation? 13.1 Alpha diversity 13.2 Beta diversity", " Chapter 13 Do FMT change the microbial community compared to antibiotics and acclimation? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Antibiotics&quot;, &quot;Acclimation&quot;,&quot;FMT1&quot;,&quot;FMT2&quot;) ) 13.1 Alpha diversity Richness # Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment + (1|individual), data = alpha_div_meta) # summary(Modelq0GLMMNB) #emmeans(Modelq0GLMMNB, pairwise ~ treatment) model_nb &lt;- MASS::glm.nb(richness ~ treatment, data = alpha_div_meta) summary(model_nb) Call: MASS::glm.nb(formula = richness ~ treatment, data = alpha_div_meta, init.theta = 2.622371751, link = log) Coefficients: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.8067 0.2118 17.977 &lt; 2e-16 *** treatmentAntibiotics -0.9651 0.3281 -2.941 0.00327 ** treatmentFMT1 0.1276 0.3081 0.414 0.67878 treatmentFMT2 0.5328 0.2978 1.789 0.07355 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 (Dispersion parameter for Negative Binomial(2.6224) family taken to be 1) Null deviance: 54.752 on 32 degrees of freedom Residual deviance: 35.688 on 29 degrees of freedom AIC: 314.49 Number of Fisher Scoring iterations: 1 Theta: 2.622 Std. Err.: 0.685 2 x log-likelihood: -304.492 emmeans(model_nb, pairwise ~ treatment) $emmeans treatment emmean SE df asymp.LCL asymp.UCL Acclimation 3.81 0.212 Inf 3.39 4.22 Antibiotics 2.84 0.251 Inf 2.35 3.33 FMT1 3.93 0.224 Inf 3.50 4.37 FMT2 4.34 0.209 Inf 3.93 4.75 Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - Antibiotics 0.965 0.328 Inf 2.941 0.0172 Acclimation - FMT1 -0.128 0.308 Inf -0.414 0.9761 Acclimation - FMT2 -0.533 0.298 Inf -1.789 0.2784 Antibiotics - FMT1 -1.093 0.336 Inf -3.252 0.0063 Antibiotics - FMT2 -1.498 0.327 Inf -4.587 &lt;.0001 FMT1 - FMT2 -0.405 0.306 Inf -1.322 0.5488 Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 4 estimates Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 235.3449 243.5487 -111.6725 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.485828 9.015585 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 17.310151 3.356642 21 5.156985 0.0000 treatmentAntibiotics -8.962870 4.586486 21 -1.954191 0.0641 treatmentFMT1 7.203346 4.402070 21 1.636354 0.1167 treatmentFMT2 22.224251 4.249987 21 5.229251 0.0000 Correlation: (Intr) trtmnA trFMT1 treatmentAntibiotics -0.587 treatmentFMT1 -0.611 0.457 treatmentFMT2 -0.633 0.463 0.483 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.17355918 -0.51312522 0.04290664 0.35530718 1.54377193 Number of Observations: 33 Number of Groups: 9 emmeans(Model_neutral, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 17.31 3.36 8 9.570 25.1 Antibiotics 8.35 3.77 8 -0.355 17.0 FMT1 24.51 3.55 8 16.334 32.7 FMT2 39.53 3.36 8 31.794 47.3 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 8.96 4.59 21 1.954 0.2367 Acclimation - FMT1 -7.20 4.40 21 -1.636 0.3809 Acclimation - FMT2 -22.22 4.25 21 -5.229 0.0002 Antibiotics - FMT1 -16.17 4.69 21 -3.448 0.0119 Antibiotics - FMT2 -31.19 4.59 21 -6.800 &lt;.0001 FMT1 - FMT2 -15.02 4.40 21 -3.412 0.0129 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 235.3449 243.5487 -111.6725 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.485828 9.015585 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 17.310151 3.356642 21 5.156985 0.0000 treatmentAntibiotics -8.962870 4.586486 21 -1.954191 0.0641 treatmentFMT1 7.203346 4.402070 21 1.636354 0.1167 treatmentFMT2 22.224251 4.249987 21 5.229251 0.0000 Correlation: (Intr) trtmnA trFMT1 treatmentAntibiotics -0.587 treatmentFMT1 -0.611 0.457 treatmentFMT2 -0.633 0.463 0.483 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.17355918 -0.51312522 0.04290664 0.35530718 1.54377193 Number of Observations: 33 Number of Groups: 9 emmeans(Model_neutral, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 17.31 3.36 8 9.570 25.1 Antibiotics 8.35 3.77 8 -0.355 17.0 FMT1 24.51 3.55 8 16.334 32.7 FMT2 39.53 3.36 8 31.794 47.3 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 8.96 4.59 21 1.954 0.2367 Acclimation - FMT1 -7.20 4.40 21 -1.636 0.3809 Acclimation - FMT2 -22.22 4.25 21 -5.229 0.0002 Antibiotics - FMT1 -16.17 4.69 21 -3.448 0.0119 Antibiotics - FMT2 -31.19 4.59 21 -6.800 &lt;.0001 FMT1 - FMT2 -15.02 4.40 21 -3.412 0.0129 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 123.1509 131.3547 -55.57546 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.6682049 1.296919 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 5.488256 0.4863123 21 11.285456 0.0000 treatmentAntibiotics -1.238764 0.6600482 21 -1.876777 0.0745 treatmentFMT1 -1.364710 0.6333952 21 -2.154596 0.0430 treatmentFMT2 -0.421543 0.6113735 21 -0.689501 0.4981 Correlation: (Intr) trtmnA trFMT1 treatmentAntibiotics -0.582 treatmentFMT1 -0.607 0.457 treatmentFMT2 -0.629 0.463 0.483 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.09143211 -0.42043259 -0.08790997 0.37042981 2.04795336 Number of Observations: 33 Number of Groups: 9 emmeans(Model_phylo, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 5.49 0.486 8 4.37 6.61 Antibiotics 4.25 0.546 8 2.99 5.51 FMT1 4.12 0.514 8 2.94 5.31 FMT2 5.07 0.486 8 3.95 6.19 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 1.239 0.660 21 1.877 0.2677 Acclimation - FMT1 1.365 0.633 21 2.155 0.1689 Acclimation - FMT2 0.422 0.611 21 0.690 0.8999 Antibiotics - FMT1 0.126 0.675 21 0.187 0.9976 Antibiotics - FMT2 -0.817 0.660 21 -1.238 0.6105 FMT1 - FMT2 -0.943 0.633 21 -1.489 0.4614 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates 13.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.068214 0.0227380 3.5642 999 0.027 * Residuals 29 0.185007 0.0063796 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ua3zo8qvrj0i9r3qblir, .table th.tinytable_css_ua3zo8qvrj0i9r3qblir { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_1vm5q69nw49c330aicux, .table th.tinytable_css_1vm5q69nw49c330aicux { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 2.646967 0.2239942 2.790285 0.001 Residual 29 9.170156 0.7760058 NA NA Total 32 11.817124 1.0000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8287871 2.293722 0.14077335 0.002 0.012 . 2 Acclimation vs FMT1 1 0.9572484 2.939042 0.16383497 0.001 0.006 * 3 Acclimation vs FMT2 1 0.9209464 3.233991 0.16813938 0.001 0.006 * 4 Antibiotics vs FMT1 1 0.9764237 2.751191 0.17466559 0.003 0.018 . 5 Antibiotics vs FMT2 1 1.2837856 4.194747 0.23054713 0.001 0.006 * 6 FMT1 vs FMT2 1 0.3560084 1.298809 0.07968734 0.151 0.906 Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.06048 0.020160 1.4603 999 0.251 Residuals 29 0.40036 0.013806 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xb46jmoynr29jadc8l5w, .table th.tinytable_css_xb46jmoynr29jadc8l5w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_jskkf3sfc4zoil9e6zkr, .table th.tinytable_css_jskkf3sfc4zoil9e6zkr { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 3.357422 0.29403 4.026078 0.001 Residual 29 8.061213 0.70597 NA NA Total 32 11.418635 1.00000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8814932 2.747044 0.16403157 0.002 0.012 . 2 Acclimation vs FMT1 1 1.3133104 4.634354 0.23603291 0.001 0.006 * 3 Acclimation vs FMT2 1 1.3568927 5.355947 0.25079416 0.001 0.006 * 4 Antibiotics vs FMT1 1 1.3427497 4.355528 0.25095913 0.002 0.012 . 5 Antibiotics vs FMT2 1 1.5277817 5.613270 0.28619756 0.001 0.006 * 6 FMT1 vs FMT2 1 0.3149954 1.323962 0.08110541 0.154 0.924 Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.26778 0.089261 3.9211 999 0.012 * Residuals 29 0.66016 0.022764 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_j48jv66w0486wi0e4bqu, .table th.tinytable_css_j48jv66w0486wi0e4bqu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_70ohije8k3i5x9jcel9a, .table th.tinytable_css_70ohije8k3i5x9jcel9a { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 1.821048 0.4220637 7.059515 0.001 Residual 29 2.493580 0.5779363 NA NA Total 32 4.314628 1.0000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.68859259 5.124832 0.26796742 0.002 0.012 . 2 Acclimation vs FMT1 1 0.25480266 3.292748 0.18000292 0.044 0.264 3 Acclimation vs FMT2 1 0.36626555 6.418219 0.28629479 0.001 0.006 * 4 Antibiotics vs FMT1 1 1.10004729 9.048069 0.41037921 0.003 0.018 . 5 Antibiotics vs FMT2 1 1.28533838 13.501094 0.49092934 0.001 0.006 * 6 FMT1 vs FMT2 1 0.06391536 1.565312 0.09449338 0.135 0.810 "],["is-the-gut-microbiota-similar-to-the-donor-after-fmt.html", "Chapter 14 Is the gut microbiota similar to the donor after FMT? 14.1 Alpha diversity 14.2 Beta diversity 14.3 Donor vs FMT1 14.4 Donor vs FMT2", " Chapter 14 Is the gut microbiota similar to the donor after FMT? 14.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Donor&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) alpha_div_meta$treatment &lt;- factor(alpha_div_meta$treatment, levels=c(&quot;Acclimation&quot;,&quot;Antibiotics&quot;,&quot;Donor&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type==&quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Donor&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;)) + scale_fill_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;)) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1), axis.title.y = element_text(size = 14), axis.title.x = element_blank(), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Donor&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(6.4056) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 301.6 308.6 -145.8 291.6 25 Scaled residuals: Min 1Q Median 3Q Max -2.05919 -0.54162 -0.04501 0.44663 2.23421 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 3.308e-12 1.819e-06 Number of obs: 30, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.6466 0.1129 41.156 &lt; 2e-16 *** treatmentFMT1 -0.7123 0.1863 -3.824 0.000131 *** treatmentFMT2 -0.3071 0.1776 -1.729 0.083741 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) trFMT1 tretmntFMT1 -0.606 tretmntFMT2 -0.636 0.385 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 230.8255 237.3046 -110.4127 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 5.858906 11.65548 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 46.31354 3.885136 19 11.920700 0.0000 treatmentFMT1 -21.54734 5.367099 19 -4.014708 0.0007 treatmentFMT2 -6.77914 5.135628 19 -1.320021 0.2025 Correlation: (Intr) trFMT1 treatmentFMT1 -0.547 treatmentFMT2 -0.565 0.414 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.19432220 -0.45597977 -0.05252154 0.50896675 1.77735772 Number of Observations: 30 Number of Groups: 9 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 88.65022 95.12941 -39.32511 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.8566114 0.7082617 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 5.862885 0.3562120 19 16.458979 0.0000 treatmentFMT1 -1.765038 0.3352691 19 -5.264543 0.0000 treatmentFMT2 -0.796172 0.3179508 19 -2.504072 0.0216 Correlation: (Intr) trFMT1 treatmentFMT1 -0.390 treatmentFMT2 -0.400 0.437 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.58802617 -0.56626938 -0.06300555 0.47634494 2.31946566 Number of Observations: 30 Number of Groups: 9 14.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Donor&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Donor&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.096689 0.048345 6.2474 999 0.008 ** Residuals 27 0.208934 0.007738 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_oe6wumrtkml0dodshri7, .table th.tinytable_css_oe6wumrtkml0dodshri7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_5cdbiz6pls1kq5j444p0, .table th.tinytable_css_5cdbiz6pls1kq5j444p0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.540586 0.2013816 3.404193 0.001 Residual 27 6.109499 0.7986184 NA NA Total 29 7.650086 1.0000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Donor vs FMT1 1 1.0476254 4.718687 0.19894384 0.001 0.003 * 2 Donor vs FMT2 1 0.8256961 4.246172 0.17512753 0.001 0.003 * 3 FMT1 vs FMT2 1 0.3560084 1.298809 0.07968734 0.142 0.426 Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.03454 0.017270 1.2605 999 0.306 Residuals 27 0.36992 0.013701 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ccvp8g3xz3hmgyy3hpvj, .table th.tinytable_css_ccvp8g3xz3hmgyy3hpvj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7yb9edv6qslyx2zqngu9, .table th.tinytable_css_7yb9edv6qslyx2zqngu9 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.462072 0.2050566 3.482342 0.001 Residual 27 5.668017 0.7949434 NA NA Total 29 7.130089 1.0000000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Donor vs FMT1 1 1.0059569 4.799565 0.20166606 0.001 0.003 * 2 Donor vs FMT2 1 0.7900975 4.174913 0.17269608 0.001 0.003 * 3 FMT1 vs FMT2 1 0.3149954 1.323962 0.08110541 0.164 0.492 Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01120 0.0056009 0.3676 999 0.715 Residuals 27 0.41137 0.0152361 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tuam66i45pzwcb01mrqc, .table th.tinytable_css_tuam66i45pzwcb01mrqc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_aizrjx13ojhwr51kf099, .table th.tinytable_css_aizrjx13ojhwr51kf099 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.193734 0.1520363 2.420493 0.002 Residual 27 1.080528 0.8479637 NA NA Total 29 1.274262 1.0000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Donor vs FMT1 1 0.11151373 2.359092 0.11044910 0.041 0.123 2 Donor vs FMT2 1 0.10834872 3.331524 0.14279069 0.014 0.042 . 3 FMT1 vs FMT2 1 0.06391536 1.565312 0.09449338 0.143 0.429 NMDS samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Antibiotics&quot;,&quot;Donor&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Antibiotics&quot;,&quot;Donor&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) alpha_div_meta$treatment &lt;- factor(alpha_div_meta$treatment, levels=c(&quot;Acclimation&quot;,&quot;Antibiotics&quot;,&quot;Donor&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.5, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.5, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.5, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) 14.2.1 Differences in the functional capacities sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;,&quot;FMT2&quot;, &quot;Donor&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Donor 0.355 0.0376 2 FMT1 0.353 0.0186 3 FMT2 0.346 0.0255 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.87023, p-value = 0.001695 kruskal.test(value ~ treatment, data=MCI) Kruskal-Wallis rank sum test data: value by treatment Kruskal-Wallis chi-squared = 0.34491, df = 2, p-value = 0.8416 14.3 Donor vs FMT1 14.3.1 Structural zeros FMT_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment == &quot;FMT1&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() Donor_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment ==&quot;Donor&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;Donor&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_FMT = all(c_across(all_of(FMT_samples)) == 0)) %&gt;% mutate(all_zeros_Donor = all(c_across(all_of(Donor_samples)) == 0)) %&gt;% mutate(average_FMT = mean(c_across(all_of(FMT_samples)), na.rm = TRUE)) %&gt;% mutate(average_Donor = mean(c_across(all_of(Donor_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_FMT == TRUE || all_zeros_Donor==TRUE) %&gt;% mutate(present = case_when( all_zeros_FMT &amp; !all_zeros_Donor ~ &quot;Donor&quot;, !all_zeros_FMT &amp; all_zeros_Donor ~ &quot;FMT1&quot;, !all_zeros_FMT &amp; !all_zeros_Donor ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;FMT1&quot;, average_FMT, average_Donor)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Structural zeros in each group fmt &lt;- structural_zeros %&gt;% filter(present==&quot;FMT1&quot;) %&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) fmt_f &lt;- structural_zeros %&gt;% filter(present==&quot;FMT1&quot;) %&gt;% count(family, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) structural_zeros %&gt;% filter(present==&quot;Donor&quot;) %&gt;% count(phylum, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Donor FMT1 1 85 30 Phyla to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Donor&quot;) %&gt;% count(phylum, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_tw3qdxaevz71rpsuvl0p, .table th.tinytable_css_tw3qdxaevz71rpsuvl0p { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_l2l9wbkqqqbfllezc2sn, .table th.tinytable_css_l2l9wbkqqqbfllezc2sn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum Donor FMT1 p__Bacillota_A 31 13 p__Bacillota 18 7 p__Pseudomonadota 12 2 p__Bacteroidota 8 3 p__Cyanobacteriota 6 0 p__Desulfobacterota 3 1 p__Verrucomicrobiota 2 1 p__Bacillota_B 1 0 p__Bacillota_C 1 1 p__Chlamydiota 1 0 p__Fusobacteriota 1 0 p__Spirochaetota 1 0 p__Actinomycetota 0 1 p__Campylobacterota 0 1 Families to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Donor&quot;) %&gt;% count(family, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt_f, by=&quot;family&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_wgwi0ldff78r20ijiih6, .table th.tinytable_css_wgwi0ldff78r20ijiih6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_dzj49qca0m9cn9zv15jx, .table th.tinytable_css_dzj49qca0m9cn9zv15jx { border-bottom: solid #d3d8dc 0.1em; } family Donor FMT1 f__Lachnospiraceae 14 5 f__Erysipelotrichaceae 6 3 f__UBA660 6 0 f__Enterobacteriaceae 5 1 f__CAG-239 4 0 f__CAG-508 4 0 f__Coprobacillaceae 4 0 f__Gastranaerophilaceae 4 0 f__UBA1242 4 0 f__ 3 1 f__Desulfovibrionaceae 3 1 f__Ruminococcaceae 3 2 f__Tannerellaceae 3 0 f__Akkermansiaceae 2 0 f__Anaerovoracaceae 2 0 f__Bacteroidaceae 2 1 f__Marinifilaceae 2 0 f__Oscillospiraceae 2 1 f__RUG14156 2 0 f__UBA3830 2 0 f__Brevinemataceae 1 0 f__Chlamydiaceae 1 0 f__Enterococcaceae 1 2 f__Fusobacteriaceae 1 0 f__Mycoplasmoidaceae 1 1 f__Peptococcaceae 1 0 f__Rikenellaceae 1 1 f__UBA1997 1 0 f__UBA3700 0 2 f__Acutalibacteraceae 0 1 f__Arcobacteraceae 0 1 f__CAG-274 0 1 f__LL51 0 1 f__Mycobacteriaceae 0 1 f__Pumilibacteraceae 0 1 f__Rhizobiaceae 0 1 f__Streptococcaceae 0 1 f__Weeksellaceae 0 1 14.3.1.1 Functional capacities of the structural zeros GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% structural_zeros$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) #Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) #Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% filter(genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(9,10)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(9,10)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT1-Donor)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Donor&quot;,&quot;FMT1&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual( breaks=c(&quot;FMT1&quot;,&quot;Donor&quot;), values=c(&#39;#40714b&#39;, &quot;#d5b52c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;) 14.3.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;Donor&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancombc_FMT_Donor_2803 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancombc_FMT_Donor_2803, file = &quot;data/ancombc_FMT_Donor_2803.Rdata&quot;) load(&quot;data/ancombc_FMT_Donor_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancombc_FMT_Donor_2803$res %&gt;% dplyr::select(taxon, lfc_treatmentFMT1, p_treatmentFMT1) %&gt;% filter(p_treatmentFMT1 &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentFMT1) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_treatmentFMT1) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() Differential abundance MAGs in each group fmt_count &lt;- ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT1&lt;0) %&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT1&gt;0) %&gt;% count(phylum, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) phylum Donor FMT1 1 Bacillota_A 9 10 2 Bacteroidota 4 11 3 Bacillota 1 2 4 Campylobacterota 1 1 5 Desulfobacterota 1 1 6 Pseudomonadota 0 1 ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT1&gt;0) %&gt;% count(phylum, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Donor FMT1 1 16 26 ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentFMT1, y=forcats::fct_reorder(genome,lfc_treatmentFMT1), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in donor on the left side and in FMT1 on the right side 14.3.3 Differences in the functional capacities sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;Donor&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_filtered_row,GIFT_db) 14.3.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Donor 0.356 0.0431 2 FMT1 0.364 0.0217 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.93266, p-value = 0.1556 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 39, p-value = 0.3738 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(9,10)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(9,10)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT1-Donor)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Donor&quot;,&quot;FMT1&quot;)) 14.3.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Donor 0.355 0.0376 2 FMT1 0.353 0.0186 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.82967, p-value = 0.001935 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 44, p-value = 0.5951 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(9,10)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) significant_functional # A tibble: 2 × 4 trait p_value p_adjust Function &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; 1 B04 0.00454 0.0454 SCFA biosynthesis 2 B10 0.00454 0.0454 Antibiotic biosynthesis 14.4 Donor vs FMT2 14.4.1 Structural zeros FMT2_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment == &quot;FMT2&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() Donor_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment ==&quot;Donor&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT2&quot;, &quot;Donor&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_FMT2 = all(c_across(all_of(FMT2_samples)) == 0)) %&gt;% mutate(all_zeros_Donor = all(c_across(all_of(Donor_samples)) == 0)) %&gt;% mutate(average_FMT2 = mean(c_across(all_of(FMT2_samples)), na.rm = TRUE)) %&gt;% mutate(average_Donor = mean(c_across(all_of(Donor_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_FMT2 == TRUE || all_zeros_Donor==TRUE) %&gt;% mutate(present = case_when( all_zeros_FMT2 &amp; !all_zeros_Donor ~ &quot;Donor&quot;, !all_zeros_FMT2 &amp; all_zeros_Donor ~ &quot;FMT2&quot;, !all_zeros_FMT2 &amp; !all_zeros_Donor ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;FMT2&quot;, average_FMT2, average_Donor)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Structural zeros in each group fmt &lt;- structural_zeros %&gt;% filter(present==&quot;FMT2&quot;) %&gt;% count(phylum, name = &quot;FMT2&quot;) %&gt;% arrange(desc(FMT2)) fmt2_f &lt;- structural_zeros %&gt;% filter(present==&quot;FMT2&quot;) %&gt;% count(family, name = &quot;FMT2&quot;) %&gt;% arrange(desc(FMT2)) structural_zeros %&gt;% filter(present==&quot;Donor&quot;) %&gt;% count(phylum, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Donor FMT2 1 62 50 Phyla to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Donor&quot;) %&gt;% count(phylum, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_qt04d0aky15oqpoo7km3, .table th.tinytable_css_qt04d0aky15oqpoo7km3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_25rv3011ji0n66rb13n4, .table th.tinytable_css_25rv3011ji0n66rb13n4 { border-bottom: solid #d3d8dc 0.1em; } phylum Donor FMT2 p__Bacillota_A 27 20 p__Bacillota 17 8 p__Pseudomonadota 6 11 p__Bacteroidota 5 6 p__Desulfobacterota 2 2 p__Bacillota_B 1 0 p__Chlamydiota 1 0 p__Cyanobacteriota 1 0 p__Fusobacteriota 1 0 p__Verrucomicrobiota 1 2 p__Bacillota_C 0 1 Families to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Donor&quot;) %&gt;% count(family, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt2_f, by=&quot;family&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_o52o5swcvedoysrneczk, .table th.tinytable_css_o52o5swcvedoysrneczk { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_fxyr2ad52k5g774lxpmw, .table th.tinytable_css_fxyr2ad52k5g774lxpmw { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } family Donor FMT2 f__Lachnospiraceae 11 9 f__Erysipelotrichaceae 6 5 f__UBA660 6 0 f__Enterobacteriaceae 5 2 f__CAG-508 3 0 f__Ruminococcaceae 3 3 f__Anaerovoracaceae 2 0 f__Coprobacillaceae 2 0 f__Desulfovibrionaceae 2 2 f__Oscillospiraceae 2 1 f__Tannerellaceae 2 1 f__UBA1242 2 0 f__ 1 3 f__Akkermansiaceae 1 0 f__Bacteroidaceae 1 2 f__CAG-239 1 2 f__Chlamydiaceae 1 0 f__Clostridiaceae 1 0 f__Enterococcaceae 1 1 f__Eubacteriaceae 1 0 f__Fusobacteriaceae 1 0 f__Gastranaerophilaceae 1 0 f__Marinifilaceae 1 0 f__Mycoplasmoidaceae 1 1 f__Peptococcaceae 1 0 f__Rikenellaceae 1 1 f__Staphylococcaceae 1 0 f__UBA3700 1 2 f__Anaerotignaceae 0 2 f__LL51 0 2 f__Acutalibacteraceae 0 1 f__CAG-274 0 1 f__CALVMC01 0 1 f__Devosiaceae 0 1 f__RUG11792 0 1 f__Rhizobiaceae 0 1 f__Sphingobacteriaceae 0 1 f__Streptococcaceae 0 1 f__UBA1997 0 1 f__UBA3830 0 1 f__Weeksellaceae 0 1 14.4.1.1 Functional capacities of the structural zeros #Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% structural_zeros$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) #Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) #Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% filter(genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(9,10)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(9,10)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT2-Donor)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Donor&quot;,&quot;FMT2&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual( breaks=c(&quot;FMT2&quot;,&quot;Donor&quot;), values=c(&#39;#40714b50&#39;, &quot;#d5b52c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;) 14.4.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT2&quot;, &quot;Donor&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancombc_FMT2_Donor_2803 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancombc_FMT2_Donor_2803, file = &quot;data/ancombc_FMT2_Donor_2803.Rdata&quot;) load(&quot;data/ancombc_FMT2_Donor_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancombc_FMT2_Donor_2803$res %&gt;% dplyr::select(taxon, lfc_treatmentFMT2, p_treatmentFMT2) %&gt;% filter(p_treatmentFMT2 &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentFMT2) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_treatmentFMT2) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() Differential abundance MAGs in each group fmt2_count &lt;- ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT2&lt;0) %&gt;% count(phylum, name = &quot;FMT2&quot;) %&gt;% arrange(desc(FMT2)) ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT2&gt;0) %&gt;% count(phylum, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt2_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) phylum Donor FMT2 1 Bacillota_A 12 3 2 Pseudomonadota 3 0 3 Bacteroidota 2 6 4 Cyanobacteriota 2 0 5 Desulfobacterota 2 1 6 Bacillota 1 2 7 Bacillota_B 1 0 8 Campylobacterota 1 1 9 Spirochaetota 0 1 ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT2&gt;0) %&gt;% count(phylum, name = &quot;Donor&quot;) %&gt;% arrange(desc(Donor)) %&gt;% full_join(.,fmt2_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Donor FMT2 1 24 14 ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentFMT2, y=forcats::fct_reorder(genome,lfc_treatmentFMT2), fill=phylum)) + geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in donor on the left side and in FMT2 on the right side 14.4.3 Differences in the functional capacities sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT2&quot;, &quot;Donor&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_filtered_row,GIFT_db) 14.4.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Donor 0.356 0.0431 2 FMT2 0.355 0.0297 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94571, p-value = 0.259 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 54, p-value = 0.7938 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(9,10)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(9,10)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT2-Donor)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Donor&quot;,&quot;FMT2&quot;)) 14.4.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Donor 0.355 0.0376 2 FMT2 0.346 0.0255 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.86539, p-value = 0.006432 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 56, p-value = 0.896 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(9,10)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) significant_functional # A tibble: 1 × 4 trait p_value p_adjust Function &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; 1 B04 0.00193 0.0387 SCFA biosynthesis "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
