[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1, Carlos Cabido2, Antton Alberdi3 and Ostaizka Aizpurua4 Last update: 2025-02-27 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/lizard_fmt_effectiveness.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) #library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(ANCOMBC) library(lme4) library(nlme) library(hilldiv2) library(emmeans) library(Maaslin2) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Copenhagen antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Remove antibiotics and transplant samples #Counts_raw columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AD16&quot;) %&gt;% filter(Tube_code != &quot;AD23&quot;) %&gt;% filter(Tube_code != &quot;AD25&quot;) %&gt;% filter(Tube_code != &quot;AD91&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) ##Removal of samples of individual LI1_2nd_6 #Counts_raw columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata&lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AFV13&quot;) %&gt;% filter(Tube_code != &quot;AD06&quot;) %&gt;% filter(Tube_code != &quot;AD31&quot;) %&gt;% filter(Tube_code != &quot;AE03&quot;) %&gt;% filter(Tube_code != &quot;AF12&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts&lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard)) %&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample!=&quot;AD16&quot;) %&gt;% filter(sample!=&quot;AFV13&quot;) %&gt;% filter(sample!=&quot;AD23&quot;) %&gt;% filter(sample!= &quot;AD25&quot;) %&gt;% filter(sample!= &quot;AD91&quot;) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats&lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, phylum_colors, data_stats, file = &quot;data/data.Rdata&quot;) save(genome_gifts, file = &quot;data/gifts.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics data_stats$raw_reads %&gt;% sum() [1] 4865846508 data_stats$raw_reads %&gt;% mean() [1] 28963372 data_stats$raw_reads %&gt;% sd() [1] 13440772 3.2 DNA fractions #Overall data_stats %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.448 0.201 data_stats %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% filter(time_point!=&quot;0_Wild&quot;) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% filter(time_point!=&quot;0_Wild&quot;) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, species, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_hkcaaq3nt5u41aki5vmz, .table th.tinytable_css_hkcaaq3nt5u41aki5vmz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9xsz2sz76mexiyetb8x4, .table th.tinytable_css_9xsz2sz76mexiyetb8x4 { border-bottom: solid #d3d8dc 0.1em; } sample damr time_point species type AC79 1.0000000 1_Acclimation Podarcis_muralis Control AC80 1.0000000 1_Acclimation Podarcis_muralis Treatment AC81 0.9813013 1_Acclimation Podarcis_muralis Treatment AC82 0.7490771 1_Acclimation Podarcis_muralis Treatment AC83 1.0000000 1_Acclimation Podarcis_muralis Control AC84 1.0000000 1_Acclimation Podarcis_muralis Control AC85 0.8363777 1_Acclimation Podarcis_muralis Control AC86 0.8800275 1_Acclimation Podarcis_muralis Control AC87 0.9672854 1_Acclimation Podarcis_muralis Treatment AC88 0.3142108 1_Acclimation Podarcis_muralis Control AC89 0.9338962 1_Acclimation Podarcis_muralis Treatment AC90 1.0000000 1_Acclimation Podarcis_muralis Control AC91 1.0000000 1_Acclimation Podarcis_muralis Control AC92 1.0000000 1_Acclimation Podarcis_muralis Control AC93 1.0000000 1_Acclimation Podarcis_muralis Treatment AC94 0.9159348 1_Acclimation Podarcis_muralis Treatment AC95 0.9239904 1_Acclimation Podarcis_muralis Treatment AC96 0.9425962 1_Acclimation Podarcis_muralis Treatment AC97 0.9394886 1_Acclimation Podarcis_liolepis Hot_control AC98 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AC99 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD01 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD02 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD03 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD04 0.8896057 1_Acclimation Podarcis_liolepis Hot_control AD05 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD07 0.9515379 1_Acclimation Podarcis_liolepis Hot_control AD08 0.7045003 2_Antibiotics Podarcis_muralis Control AD09 1.0000000 2_Antibiotics Podarcis_muralis Control AD10 0.9598720 2_Antibiotics Podarcis_muralis Control AD11 0.6230176 2_Antibiotics Podarcis_muralis Control AD12 0.7487463 2_Antibiotics Podarcis_muralis Control AD13 1.0000000 2_Antibiotics Podarcis_muralis Control AD14 0.4536529 2_Antibiotics Podarcis_muralis Control AD15 1.0000000 2_Antibiotics Podarcis_muralis Control AD17 0.8774871 2_Antibiotics Podarcis_muralis Treatment AD18 0.4991585 2_Antibiotics Podarcis_muralis Treatment AD19 0.4060523 2_Antibiotics Podarcis_muralis Treatment AD20 0.5227482 2_Antibiotics Podarcis_muralis Treatment AD21 0.6551882 2_Antibiotics Podarcis_muralis Treatment AD22 0.9106725 2_Antibiotics Podarcis_muralis Treatment AD24 0.5972915 2_Antibiotics Podarcis_muralis Treatment AD26 0.9204825 2_Antibiotics Podarcis_liolepis Hot_control AD27 0.5215059 2_Antibiotics Podarcis_liolepis Hot_control AD28 0.8180607 2_Antibiotics Podarcis_liolepis Hot_control AD29 0.7175978 2_Antibiotics Podarcis_liolepis Hot_control AD30 0.9937574 2_Antibiotics Podarcis_liolepis Hot_control AD32 0.6710817 2_Antibiotics Podarcis_liolepis Hot_control AD33 0.6778368 2_Antibiotics Podarcis_liolepis Hot_control AD34 0.4642326 2_Antibiotics Podarcis_liolepis Hot_control AD36 0.8288365 3_Transplant1 Podarcis_muralis Control AD37 0.9530848 3_Transplant1 Podarcis_muralis Control AD38 0.9247925 3_Transplant1 Podarcis_muralis Control AD39 1.0000000 3_Transplant1 Podarcis_muralis Control AD40 0.9991552 3_Transplant1 Podarcis_muralis Control AD41 0.9550964 3_Transplant1 Podarcis_muralis Control AD42 1.0000000 3_Transplant1 Podarcis_muralis Control AD43 1.0000000 3_Transplant1 Podarcis_muralis Control AD44 0.9108807 3_Transplant1 Podarcis_muralis Control AD46 0.8708468 3_Transplant1 Podarcis_muralis Treatment AD47 0.8328653 3_Transplant1 Podarcis_muralis Treatment AD49 0.8940294 3_Transplant1 Podarcis_muralis Treatment AD50 0.8757711 3_Transplant1 Podarcis_muralis Treatment AD51 0.8479193 3_Transplant1 Podarcis_muralis Treatment AD52 0.8596870 3_Transplant1 Podarcis_muralis Treatment AD53 0.8528974 3_Transplant1 Podarcis_muralis Treatment AD54 1.0000000 3_Transplant1 Podarcis_liolepis Hot_control AD55 1.0000000 4_Transplant2 Podarcis_muralis Control AD56 0.9327538 4_Transplant2 Podarcis_muralis Control AD57 1.0000000 4_Transplant2 Podarcis_muralis Control AD58 1.0000000 4_Transplant2 Podarcis_muralis Control AD59 1.0000000 4_Transplant2 Podarcis_muralis Control AD60 0.7988844 4_Transplant2 Podarcis_muralis Control AD61 1.0000000 4_Transplant2 Podarcis_muralis Control AD62 1.0000000 4_Transplant2 Podarcis_muralis Control AD63 0.8992048 4_Transplant2 Podarcis_muralis Control AD65 1.0000000 4_Transplant2 Podarcis_muralis Treatment AD66 0.8821027 4_Transplant2 Podarcis_muralis Treatment AD68 0.8820274 4_Transplant2 Podarcis_muralis Treatment AD70 0.9590793 4_Transplant2 Podarcis_muralis Treatment AD71 0.8360540 4_Transplant2 Podarcis_muralis Treatment AD72 0.8835253 4_Transplant2 Podarcis_muralis Treatment AD73 1.0000000 4_Transplant2 Podarcis_liolepis Hot_control AD74 0.9017271 5_Post-FMT1 Podarcis_muralis Control AD75 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD76 0.9862581 5_Post-FMT1 Podarcis_muralis Treatment AD77 0.8963376 5_Post-FMT1 Podarcis_muralis Treatment AD78 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD79 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD80 0.8808155 5_Post-FMT1 Podarcis_muralis Treatment AD81 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD82 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD83 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD84 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD85 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD86 0.9889084 5_Post-FMT1 Podarcis_muralis Control AD87 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD88 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD89 0.9562489 5_Post-FMT1 Podarcis_muralis Control AD90 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD93 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AD94 0.7947750 5_Post-FMT1 Podarcis_liolepis Hot_control AD95 0.9506977 5_Post-FMT1 Podarcis_liolepis Hot_control AD96 0.9171413 5_Post-FMT1 Podarcis_liolepis Hot_control AD97 0.9257685 5_Post-FMT1 Podarcis_liolepis Hot_control AD98 0.9048349 5_Post-FMT1 Podarcis_liolepis Hot_control AD99 0.9966152 5_Post-FMT1 Podarcis_liolepis Hot_control AE01 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE02 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE04 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE05 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE06 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE07 0.7797794 6_Post-FMT2 Podarcis_muralis Control AE08 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE09 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE91 0.9259146 6_Post-FMT2 Podarcis_muralis Treatment AE92 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE93 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE94 0.9152960 6_Post-FMT2 Podarcis_muralis Treatment AE95 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE96 0.7786112 6_Post-FMT2 Podarcis_muralis Treatment AE97 0.9365037 6_Post-FMT2 Podarcis_muralis Control AE98 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE99 0.8513354 6_Post-FMT2 Podarcis_muralis Treatment AF01 0.9046369 6_Post-FMT2 Podarcis_muralis Treatment AF02 1.0000000 6_Post-FMT2 Podarcis_muralis Control AF03 0.9030087 6_Post-FMT2 Podarcis_muralis Treatment AF04 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF05 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF06 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF07 0.9526443 6_Post-FMT2 Podarcis_liolepis Hot_control AF08 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF09 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF10 0.9716162 6_Post-FMT2 Podarcis_liolepis Hot_control AF11 0.9654152 6_Post-FMT2 Podarcis_liolepis Hot_control AF13 0.8818742 6_Post-FMT2 Podarcis_liolepis Hot_control AFU87 0.8810513 0_Wild Podarcis_muralis Control AFU88 0.8317800 0_Wild Podarcis_muralis Treatment AFU91 0.8923699 0_Wild Podarcis_muralis Treatment AFU92 0.8094776 0_Wild Podarcis_muralis Treatment AFU93 0.8517368 0_Wild Podarcis_muralis Control AFU94 0.8325385 0_Wild Podarcis_muralis Treatment AFU95 0.8419270 0_Wild Podarcis_muralis Treatment AFU96 0.8326820 0_Wild Podarcis_muralis Control AFU97 0.8107271 0_Wild Podarcis_muralis Treatment AFU98 0.7506522 0_Wild Podarcis_muralis Control AFU99 0.8582371 0_Wild Podarcis_muralis Treatment AFV01 0.9331539 0_Wild Podarcis_muralis Treatment AFV02 0.8316460 0_Wild Podarcis_muralis Treatment AFV03 0.8752591 0_Wild Podarcis_muralis Control AFV04 0.9180285 0_Wild Podarcis_muralis Control AFV05 1.0000000 0_Wild Podarcis_muralis Control AFV06 1.0000000 0_Wild Podarcis_muralis Control AFV07 0.8460805 0_Wild Podarcis_muralis Control AFV08 0.7497043 0_Wild Podarcis_liolepis Hot_control AFV09 0.5412999 0_Wild Podarcis_liolepis Hot_control AFV10 0.8002499 0_Wild Podarcis_liolepis Hot_control AFV11 0.8225298 0_Wild Podarcis_liolepis Hot_control AFV12 0.7925988 0_Wild Podarcis_liolepis Hot_control AFV14 0.8106269 0_Wild Podarcis_liolepis Hot_control AFV15 0.9691106 0_Wild Podarcis_liolepis Hot_control AFV16 0.8218990 0_Wild Podarcis_liolepis Hot_control AFV17 0.8091152 0_Wild Podarcis_liolepis Hot_control "],["diversity-analysis.html", "Chapter 4 Diversity analysis 4.1 Calculate diversities 4.2 Does captivity change the microbial community? 4.3 Does the antibiotic administration change the microbial community? 4.4 Does antibiotic administration remove the differences found in the two populations? 4.5 Are the microbial communities similar in both donor samples? 4.6 Does the donor sample maintain the microbial community found in acclimation? 4.7 Is the donor sample microbiota different to recipient microbiota? 4.8 Does FMT change the microbial community over time? 4.9 Do FMT change the microbial community compared to antibiotics and acclimation? 4.10 Is the gut microbiota similar to the donor after FMT?", " Chapter 4 Diversity analysis load(&quot;data/data.Rdata&quot;) load(&quot;data/gifts.Rdata&quot;) load(&quot;data/beta_27022025.Rdata&quot;) genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% select(where(~ sum(.) &gt; 0)) %&gt;% select(-AC85) %&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) table &lt;- genome_counts_filt %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;) master_table &lt;- sample_metadata %&gt;% mutate(sample=Tube_code) %&gt;% mutate(Tube_code=str_remove_all(Tube_code, &quot;_a&quot;)) %&gt;% filter(Tube_code %in% table$sample) %&gt;% mutate(treatment = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point))%&gt;% left_join(., table, by=join_by(&quot;Tube_code&quot; ==&quot;sample&quot;)) sample_metadata &lt;- master_table %&gt;% select(1:13) genome_counts_filt &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0)))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_counts_filtering &lt;- master_table %&gt;% select(12,14:323) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0))) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) #match_data(genome_counts_filtering,genome_tree) genome_metadata &lt;- genome_metadata %&gt;% filter(genome %in% genome_counts_filt$genome) 4.1 Calculate diversities 4.1.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] genome_counts_filt1 &lt;- genome_counts_filt1 %&gt;% remove_rownames() %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% rownames_to_column(., &quot;genome&quot;) dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt1 %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample))%&gt;% full_join(functional, by = join_by(sample == sample)) treatment_colors &lt;- c(&#39;#008080&#39;, &quot;#d57d2c&quot;) 4.1.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) beta_q1f &lt;- genome_counts_filt1 %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) save(beta_q0n, beta_q1n, beta_q1p, beta_q1f, file = &quot;data/beta_27022025.Rdata&quot;) 4.2 Does captivity change the microbial community? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;0_Wild&quot;) ) 4.2.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;0_Wild&quot;) ) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(7.7073) ( log ) Formula: richness ~ time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 341.1 347.3 -166.5 333.1 31 Scaled residuals: Min 1Q Median 3Q Max -1.88922 -0.29614 0.04658 0.45758 1.21929 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.1706 0.413 Number of obs: 35, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.1983 0.1330 31.564 &lt; 2e-16 *** time_point1_Acclimation -0.4405 0.1344 -3.279 0.00104 ** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pnt1_Acc -0.456 Neutral Model_neutral &lt;- lme(fixed = neutral ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 258.7499 264.7359 -125.3749 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 8.169818 7.178627 Fixed effects: neutral ~ time_point Value Std.Error DF t-value p-value (Intercept) 36.65610 2.563403 17 14.299780 0 time_point1_Acclimation -16.81743 2.447304 16 -6.871818 0 Correlation: (Intr) time_point1_Acclimation -0.456 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.52249470 -0.58253897 -0.03654165 0.58990386 1.40500351 Number of Observations: 35 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 129.7532 135.7392 -60.8766 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.6806603 1.248658 Fixed effects: phylogenetic ~ time_point Value Std.Error DF t-value p-value (Intercept) 5.221589 0.3351985 17 15.577603 0.0000 time_point1_Acclimation 0.135310 0.4236755 16 0.319371 0.7536 Correlation: (Intr) time_point1_Acclimation -0.61 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.18114503 -0.47484996 0.08008291 0.37909497 1.82560478 Number of Observations: 35 Number of Groups: 18 Functional Model_funct &lt;- lme(fixed = functional ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_funct) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -52.38562 -46.39959 30.19281 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.03084103 0.08367718 Fixed effects: functional ~ time_point Value Std.Error DF t-value p-value (Intercept) 1.5154110 0.02101988 17 72.09416 0.0000 time_point1_Acclimation -0.0307069 0.02834791 16 -1.08322 0.2948 Correlation: (Intr) time_point1_Acclimation -0.653 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -3.20739889 -0.40096259 0.05458715 0.62964551 1.42654682 Number of Observations: 35 Number of Groups: 18 4.2.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;0_Wild&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;0_Wild&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.07277 0.072771 7.2819 999 0.012 * Residuals 33 0.32979 0.009993 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ae2tuigi8yx95c7ks6wv, .table th.tinytable_css_ae2tuigi8yx95c7ks6wv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7xfayuim228cqbufebxz, .table th.tinytable_css_7xfayuim228cqbufebxz { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.5295984 0.05492497 1.917862 0.001 Residual 33 9.1126169 0.94507503 NA NA Total 34 9.6422153 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.02764 0.027637 2.2078 999 0.128 Residuals 33 0.41309 0.012518 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_t0d9rc2jcuudggmv4743, .table th.tinytable_css_t0d9rc2jcuudggmv4743 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ieqsc5pcqqjg8707pcty, .table th.tinytable_css_ieqsc5pcqqjg8707pcty { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.7470135 0.08504426 3.067318 0.001 Residual 33 8.0368067 0.91495574 NA NA Total 34 8.7838201 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04119 0.041187 2.897 999 0.089 . Residuals 33 0.46917 0.014217 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xi2y6ojuvelmrx7hebya, .table th.tinytable_css_xi2y6ojuvelmrx7hebya { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7z6qv2zuxo3jp1uhay7m, .table th.tinytable_css_7z6qv2zuxo3jp1uhay7m { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2075719 0.1133094 4.217042 0.001 Residual 33 1.6243310 0.8866906 NA NA Total 34 1.8319029 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00017 0.0001696 0.0078 999 0.931 Residuals 33 0.71884 0.0217831 adonis2(func ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zo5l4bluoar7yd2cjcti, .table th.tinytable_css_zo5l4bluoar7yd2cjcti { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_h5fnjfn1xd8x4hfdtm16, .table th.tinytable_css_h5fnjfn1xd8x4hfdtm16 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.0009227428 0.0009988421 0.03299475 0.615 Residual 33 0.9228897312 0.9990011579 NA NA Total 34 0.9238124740 1.0000000000 NA NA 4.2.3 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;1_Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() wild_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;0_Wild&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_wild= all(c_across(all_of(wild_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_wild = mean(c_across(all_of(wild_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_wild==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_wild ~ &quot;wild&quot;, !all_zeros_acclimation &amp; all_zeros_wild ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_wild ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_wild)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 6 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Pseudomonadota 5 2 p__Bacillota 3 3 p__Bacillota_A 2 4 p__Bacteroidota 2 5 p__Actinomycetota 1 6 p__Chlamydiota 1 Wild structural_zeros %&gt;% filter(present==&quot;wild&quot;) %&gt;% select(1,5:10) # A tibble: 11 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_19:bin_000031 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Lachnotalea s__ 2 AH1_2nd_7:bin_000023 p__Bacillota_A c__Clostridia o__Lachnospirales f__ g__ s__ 3 AH1_2nd_20:bin_000025 p__Bacillota_A c__Clostridia o__Lachnospirales f__CAG-274 g__ s__ 4 AH1_2nd_6:bin_000024 p__Spirochaetota c__Brevinematia o__Brevinematales f__Brevinemataceae g__Brevinema s__ 5 AH1_2nd_10:bin_000097 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Tannerellaceae g__Parabacteroides s__ 6 LI1_2nd_7:bin_000020 p__Bacillota_B c__Peptococcia o__Peptococcales f__Peptococcaceae g__ s__ 7 LI1_2nd_7:bin_000001 p__Bacillota_A c__Clostridia o__Clostridiales f__Clostridiaceae g__Sarcina s__ 8 LI1_2nd_7:bin_000083 p__Bacillota_A c__Clostridia o__Oscillospirales f__Oscillospiraceae g__Pseudoflavonifractor s__ 9 AH1_2nd_7:bin_000055 p__Bacillota c__Bacilli o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma s__ 10 LI1_2nd_1:bin_000052 p__Bacillota_A c__Clostridia o__TANB77 f__CAG-508 g__RGIG8482 s__ 11 AH1_2nd_6:bin_000060 p__Bacillota_A c__Clostridia o__Oscillospirales f__Oscillospiraceae g__Intestinimonas s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 35 × 3 trait p_value p_adjust &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 B0214 0.000261 0.00340 2 B0219 0.00164 0.0111 3 B0302 0.000198 0.00284 4 B0703 0.00306 0.0182 5 B0709 0.000103 0.00284 6 B0712 0.000551 0.00561 7 B0801 0.000198 0.00284 8 B1012 0.00136 0.0102 9 B1028 0.00000837 0.000599 10 D0102 0.00131 0.0102 # ℹ 25 more rows 4.2.4 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;0_Wild&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_wild_accl.Rdata&quot;) load(&quot;data/ancombc_wild_accl.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_time_point1_Acclimation, p_time_point1_Acclimation) %&gt;% filter(p_time_point1_Acclimation &lt; 0.05) %&gt;% dplyr::arrange(p_time_point1_Acclimation) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point1_Acclimation) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point1_Acclimation, y=forcats::fct_reorder(genome,lfc_time_point1_Acclimation), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 16 2 Bacteroidota 9 3 Bacillota_C 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota_A MGBC140009 2 Bacillota_A 3 Bacillota_A 4 Bacillota_A Negativibacillus 5 Bacteroidota Parabacteroides 6 Bacteroidota Bacteroides 7 Bacillota_A Hungatella 8 Bacteroidota Bacteroides 9 Bacteroidota Parabacteroides 10 Bacteroidota Parabacteroides 11 Bacteroidota Bacteroides 12 Bacillota_A 13 Bacteroidota Bacteroides 14 Bacillota_A 15 Bacillota_A Copromonas 16 Bacillota_A Enterocloster 17 Bacillota_A Velocimicrobium 18 Bacillota_A CAG-95 19 Bacillota_C 20 Bacteroidota Bacteroides 21 Bacillota_A 22 Bacillota_A Copromonas 23 Bacteroidota Bacteroides Bacteroides thetaiotaomicron 24 Bacillota_A Pseudoflavonifractor 25 Bacillota_A Enterocloster 26 Bacillota_A JALFVM01 ancombc_rand_table_mag%&gt;% filter(lfc_time_point1_Acclimation&lt;0) %&gt;% count(genus, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) genus sample_count 1 6 2 Bacteroides 6 3 Parabacteroides 3 4 Copromonas 2 5 Enterocloster 2 6 CAG-95 1 7 Hungatella 1 8 JALFVM01 1 9 MGBC140009 1 10 Negativibacillus 1 11 Pseudoflavonifractor 1 12 Velocimicrobium 1 4.2.5 Differences in the functional capacity GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.2.5.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.331 0.0320 2 Wild 0.345 0.0234 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94347, p-value = 0.07144 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 114, p-value = 0.2066 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) 4.2.5.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.329 0.0320 2 Wild 0.346 0.0195 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94492, p-value = 0.07913 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 100, p-value = 0.08313 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_ip1ek8wwg258w2v9i4b7, .table th.tinytable_css_ip1ek8wwg258w2v9i4b7 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_brxxxv140ox2b72cmg4u, .table th.tinytable_css_brxxxv140ox2b72cmg4u { border-bottom: solid #d3d8dc 0.1em; } Code_function Acclimation Wild Function Difference treatment B03 0.1097356 0.1256091 Amino acid derivative biosynthesis -0.0158735 Wild D03 0.2921075 0.3442827 Sugar degradation -0.0521752 Wild 4.3 Does the antibiotic administration change the microbial community? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;) ) 4.3.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;) ) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.6838) ( log ) Formula: richness ~ time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 278.1 283.9 -135.0 270.1 28 Scaled residuals: Min 1Q Median 3Q Max -1.49142 -0.49637 -0.06281 0.55004 1.99619 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.357 0.5975 Number of obs: 32, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.7303 0.1880 19.844 &lt; 2e-16 *** time_point2_Antibiotics -1.1593 0.1966 -5.896 3.72e-09 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pnt2_Ant -0.427 Neutral Model_neutral &lt;- lme(fixed = neutral ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 224.1303 229.7351 -108.0652 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.198228 7.479481 Fixed effects: neutral ~ time_point Value Std.Error DF t-value p-value (Intercept) 19.11841 1.971629 17 9.696759 0e+00 time_point2_Antibiotics -11.46314 2.675428 13 -4.284600 9e-04 Correlation: (Intr) time_point2_Antibiotics -0.63 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.86893024 -0.51778639 -0.08383536 0.57135437 1.94021414 Number of Observations: 32 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 137.9324 143.5371 -64.96618 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.019275 1.66934 Fixed effects: phylogenetic ~ time_point Value Std.Error DF t-value p-value (Intercept) 5.400123 0.4734177 17 11.406677 0.000 time_point2_Antibiotics -0.791476 0.6015713 13 -1.315681 0.211 Correlation: (Intr) time_point2_Antibiotics -0.587 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.65991143 -0.50025273 -0.03029114 0.42477766 1.61395665 Number of Observations: 32 Number of Groups: 18 Functional Model_funct &lt;- lme(fixed = functional ~ time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_funct) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -15.05258 -9.447793 11.52629 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.585329e-06 0.1502428 Fixed effects: functional ~ time_point Value Std.Error DF t-value p-value (Intercept) 1.4848858 0.03643923 17 40.74965 0.000 time_point2_Antibiotics -0.0341744 0.05322290 13 -0.64210 0.532 Correlation: (Intr) time_point2_Antibiotics -0.685 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.2441309 -0.5590927 0.2912519 0.6141833 2.0349226 Number of Observations: 32 Number of Groups: 18 4.3.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.013687 0.0136873 2.0494 999 0.162 Residuals 30 0.200356 0.0066785 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_pnuaetf6frt2zl0albqj, .table th.tinytable_css_pnuaetf6frt2zl0albqj { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_eb9qrajl25us3jducaza, .table th.tinytable_css_eb9qrajl25us3jducaza { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.580367 0.1313608 4.536779 0.001 Residual 30 10.450370 0.8686392 NA NA Total 31 12.030738 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03491 0.034906 2.5203 999 0.136 Residuals 30 0.41549 0.013850 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_quw5vfskf6amw4odqmwl, .table th.tinytable_css_quw5vfskf6amw4odqmwl { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_eradpgsxjz0vimn997ay, .table th.tinytable_css_eradpgsxjz0vimn997ay { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.78013 0.1607184 5.744856 0.001 Residual 30 9.29595 0.8392816 NA NA Total 31 11.07608 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.31336 0.313365 16.503 999 0.002 ** Residuals 30 0.56964 0.018988 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_7dzbv6wvua0onw1lh4is, .table th.tinytable_css_7dzbv6wvua0onw1lh4is { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0dzc9i0kapt8q7zt32o8, .table th.tinytable_css_0dzc9i0kapt8q7zt32o8 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.572915 0.2890287 12.19579 0.001 Residual 30 3.869157 0.7109713 NA NA Total 31 5.442071 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.18493 0.184935 4.9256 999 0.037 * Residuals 30 1.12638 0.037546 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(func ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_wjmjmh73gqzk5tl1wkst, .table th.tinytable_css_wjmjmh73gqzk5tl1wkst { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_c1hwe3ri5buaq0gq34vh, .table th.tinytable_css_c1hwe3ri5buaq0gq34vh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.120331 0.3613445 16.97368 0.001 Residual 30 1.980120 0.6386555 NA NA Total 31 3.100451 1.0000000 NA NA 4.3.3 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;1_Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point == &quot;2_Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 9 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 43 2 p__Bacteroidota 15 3 p__Bacillota 8 4 p__Pseudomonadota 7 5 p__Cyanobacteriota 3 6 p__Verrucomicrobiota 2 7 p__Bacillota_B 1 8 p__Bacillota_C 1 9 p__Fusobacteriota 1 Antibiotics structural_zeros %&gt;% filter(present==&quot;antibiotics&quot;) %&gt;% select(1,5:10) # A tibble: 4 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_7:bin_000003 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 2 LI1_2nd_7:bin_000001 p__Bacillota_A c__Clostridia o__Clostridiales f__Clostridiaceae g__Sarcina s__ 3 AH1_2nd_7:bin_000055 p__Bacillota c__Bacilli o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma s__ 4 AH1_2nd_13:bin_000025 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 4.3.4 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;1_Acclimation&quot;, &quot;2_Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_antib_accl.Rdata&quot;) load(&quot;data/ancombc_antib_accl.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_time_point2_Antibiotics, p_time_point2_Antibiotics) %&gt;% filter(p_time_point2_Antibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_point2_Antibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_point2_Antibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_point2_Antibiotics, y=forcats::fct_reorder(genome,lfc_time_point2_Antibiotics), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 14 2 Bacillota_A 4 3 Bacillota 2 4 Campylobacterota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Campylobacterota Helicobacter_J 2 Bacillota_A 3 Bacteroidota Bacteroides 4 Bacteroidota Odoribacter 5 Bacteroidota Bacteroides 6 Bacillota Coprobacillus 7 Bacillota 8 Bacteroidota Phocaeicola 9 Bacteroidota Bacteroides 10 Bacteroidota Phocaeicola 11 Bacteroidota Odoribacter 12 Bacteroidota Bacteroides 13 Bacteroidota Bacteroides 14 Bacteroidota Parabacteroides 15 Bacteroidota 16 Bacteroidota Parabacteroides 17 Bacillota_A 18 Bacteroidota Alistipes 19 Bacillota_A 20 Bacillota_A 21 Bacteroidota Odoribacter ancombc_rand_table_mag%&gt;% filter(lfc_time_point2_Antibiotics&lt;0) %&gt;% count(genus, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) genus sample_count 1 6 2 Bacteroides 5 3 Odoribacter 3 4 Parabacteroides 2 5 Phocaeicola 2 6 Alistipes 1 7 Coprobacillus 1 8 Helicobacter_J 1 4.3.5 Differences in the functional capacity GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.3.5.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.331 0.0320 2 Antibiotics 0.244 0.134 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94332, p-value = 0.09304 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 190, p-value = 0.01768 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Antibiotics)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Antibiotics&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) 4.3.5.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.329 0.0320 2 Antibiotics 0.255 0.126 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.95737, p-value = 0.2324 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 188, p-value = 0.02195 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_6g7cj74esbxctlfln404, .table th.tinytable_css_6g7cj74esbxctlfln404 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4bhaayaz1uezx0h3kbgy, .table th.tinytable_css_4bhaayaz1uezx0h3kbgy { border-bottom: solid #d3d8dc 0.1em; } Code_function Acclimation Antibiotics Function Difference treatment B06 0.68110280 0.47325490 Organic anion biosynthesis 0.20784790 Acclimation B02 0.59963040 0.41562100 Amino acid biosynthesis 0.18400940 Acclimation D02 0.38587770 0.20636760 Polysaccharide degradation 0.17951010 Acclimation S03 0.27103471 0.09357224 Spore 0.17746247 Acclimation B01 0.84215140 0.69078910 Nucleic acid biosynthesis 0.15136230 Acclimation B07 0.44558700 0.30432910 Vitamin biosynthesis 0.14125790 Acclimation B08 0.44596150 0.32044710 Aromatic compound biosynthesis 0.12551440 Acclimation D09 0.25533360 0.13438350 Antibiotic degradation 0.12095010 Acclimation B04 0.54457570 0.42921780 SCFA biosynthesis 0.11535790 Acclimation D03 0.29210750 0.20698550 Sugar degradation 0.08512200 Acclimation D05 0.28856080 0.22258820 Amino acid degradation 0.06597260 Acclimation B10 0.05947806 0.03621687 Antibiotic biosynthesis 0.02326119 Acclimation 4.4 Does antibiotic administration remove the differences found in the two populations? 4.4.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point == &quot;2_Antibiotics&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(time_point == &quot;2_Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.4.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;2_Antibiotics&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;2_Antibiotics&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.015377 0.0153774 6.8934 999 0.011 * Residuals 21 0.046845 0.0022307 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tktum3wzrxbz1drzqb1k, .table th.tinytable_css_tktum3wzrxbz1drzqb1k { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_fldr61t38wuhalo9253h, .table th.tinytable_css_fldr61t38wuhalo9253h { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.361743 0.1533845 3.80465 0.001 Residual 21 7.516224 0.8466155 NA NA Total 22 8.877966 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.030649 0.0306488 3.8694 999 0.069 . Residuals 21 0.166339 0.0079209 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_m2vhhx8clghk1yhds5ob, .table th.tinytable_css_m2vhhx8clghk1yhds5ob { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_6t8z0tdy43nuvyxfcs0t, .table th.tinytable_css_6t8z0tdy43nuvyxfcs0t { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.787698 0.208772 5.541022 0.001 Residual 21 6.775221 0.791228 NA NA Total 22 8.562919 1.000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.012165 0.012165 0.9979 999 0.354 Residuals 21 0.256012 0.012191 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_gzsn09drtvl3b1f16zxl, .table th.tinytable_css_gzsn09drtvl3b1f16zxl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_bx0olwf10uzucukznnc0, .table th.tinytable_css_bx0olwf10uzucukznnc0 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.8970751 0.1890846 4.896659 0.001 Residual 21 3.8472307 0.8109154 NA NA Total 22 4.7443057 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01804 0.018036 0.4397 999 0.517 Residuals 21 0.86147 0.041023 adonis2(func ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ueb1euw84zk0rc6d9f2o, .table th.tinytable_css_ueb1euw84zk0rc6d9f2o { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ifdup4dwcgdsqrzsj6v5, .table th.tinytable_css_ifdup4dwcgdsqrzsj6v5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.0184103 0.009818749 0.2082384 0.678 Residual 21 1.8566048 0.990181251 NA NA Total 22 1.8750151 1.000000000 NA NA 4.5 Are the microbial communities similar in both donor samples? samples_to_keep &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;3_Transplant1&quot;, &quot;4_Transplant2&quot;))%&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;3_Transplant1&quot;, &quot;4_Transplant2&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type ==&quot;Hot_control&quot; &amp; time_point %in% c( &quot;3_Transplant1&quot;, &quot;4_Transplant2&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=time_point, fill=time_point)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00014 0.0001396 0.0173 999 0.912 Residuals 13 0.10481 0.0080621 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_vqx5mccskwexl57gy986, .table th.tinytable_css_vqx5mccskwexl57gy986 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_lotee9vq6bjspicpxh5y, .table th.tinytable_css_lotee9vq6bjspicpxh5y { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.06889268 0.03010712 0.4035421 0.981 Residual 13 2.21935895 0.96989288 NA NA Total 14 2.28825162 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000655 0.0006546 0.0514 999 0.816 Residuals 13 0.165409 0.0127237 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_jfmekvfsu9n6iq7kkijp, .table th.tinytable_css_jfmekvfsu9n6iq7kkijp { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_78uuq81hd14k0owgj6ig, .table th.tinytable_css_78uuq81hd14k0owgj6ig { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.09294671 0.03882177 0.5250671 0.818 Residual 13 2.30124351 0.96117823 NA NA Total 14 2.39419022 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.003691 0.0036912 0.3071 999 0.673 Residuals 13 0.156266 0.0120205 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_i6b6u3uoeotaqt90hr77, .table th.tinytable_css_i6b6u3uoeotaqt90hr77 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_bte3qpk228dzsglxlpr6, .table th.tinytable_css_bte3qpk228dzsglxlpr6 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.009773631 0.01921019 0.2546239 0.841 Residual 13 0.498999565 0.98078981 NA NA Total 14 0.508773196 1.00000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.013592 0.0135920 1.5644 999 0.195 Residuals 13 0.112945 0.0086881 adonis2(func ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xxzxkxod1dxwye9iq96n, .table th.tinytable_css_xxzxkxod1dxwye9iq96n { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_azi14c4cvna9e5bxbeu9, .table th.tinytable_css_azi14c4cvna9e5bxbeu9 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 -0.003158048 -0.0167584 -0.2142684 0.821 Residual 13 0.191603701 1.0167584 NA NA Total 14 0.188445652 1.0000000 NA NA 4.6 Does the donor sample maintain the microbial community found in acclimation? 4.6.1 Alpha diversity sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Transplant1&quot;, &quot;Transplant2&quot;) ~ &quot;Transplant&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type == &quot;Hot_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Transplant&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.6.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00836 0.0083600 1.4409 999 0.255 Residuals 22 0.12764 0.0058019 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_jyp2ds3g0jdr6tg2iba3, .table th.tinytable_css_jyp2ds3g0jdr6tg2iba3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_jeyobab1kd5xo9pn9ndj, .table th.tinytable_css_jeyobab1kd5xo9pn9ndj { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.2657351 0.06396199 1.503319 0.096 Residual 22 3.8888430 0.93603801 NA NA Total 23 4.1545781 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000661 0.0006614 0.0736 999 0.793 Residuals 22 0.197804 0.0089911 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_yf8e1ceebx1vxsek0r0c, .table th.tinytable_css_yf8e1ceebx1vxsek0r0c { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_erd3b1y7gl6eymdgo6fq, .table th.tinytable_css_erd3b1y7gl6eymdgo6fq { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3164816 0.07596593 1.808646 0.07 Residual 22 3.8496178 0.92403407 NA NA Total 23 4.1660995 1.00000000 NA NA neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + # scale_color_manual(values = treatment_colors,labels=c(&quot;Cold_wet&quot; = &quot;Cold wet&quot;, &quot;Hot_dry&quot; = &quot;Hot dry&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00204 0.0020405 0.2622 999 0.71 Residuals 22 0.17118 0.0077807 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_iwoy70uq38idqaagh2w4, .table th.tinytable_css_iwoy70uq38idqaagh2w4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_gdp241havdvr5mhohe8i, .table th.tinytable_css_gdp241havdvr5mhohe8i { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.0412056 0.056244 1.31111 0.268 Residual 22 0.6914166 0.943756 NA NA Total 23 0.7326222 1.000000 NA NA phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000463 0.0004627 0.0465 999 0.839 Residuals 22 0.219125 0.0099602 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zt13kh8ca2tdqwkh3btn, .table th.tinytable_css_zt13kh8ca2tdqwkh3btn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ro4q9aonxlum97pkg9cd, .table th.tinytable_css_ro4q9aonxlum97pkg9cd { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.08931756 0.2172817 6.107175 0.056 Residual 22 0.32175047 0.7827183 NA NA Total 23 0.41106803 1.0000000 NA NA func %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;Cold_wet&quot; = &quot;Cold wet&quot;, &quot;Hot_dry&quot; = &quot;Hot dry&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) 4.7 Is the donor sample microbiota different to recipient microbiota? 4.7.1 Alpha diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Transplant&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 4.7.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.12795 0.127946 13.179 999 0.001 *** Residuals 20 0.19416 0.009708 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ngsc91q08lm3znp0gv15, .table th.tinytable_css_ngsc91q08lm3znp0gv15 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_60lgs07ibi9gl4fwwvf3, .table th.tinytable_css_60lgs07ibi9gl4fwwvf3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.777815 0.2760196 7.625059 0.001 Residual 20 4.663086 0.7239804 NA NA Total 21 6.440902 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.071502 0.071502 5.4967 999 0.031 * Residuals 20 0.260166 0.013008 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_d9di77et2zb5jhs7exx7, .table th.tinytable_css_d9di77et2zb5jhs7exx7 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_6lax4rcxp3c34802yid5, .table th.tinytable_css_6lax4rcxp3c34802yid5 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 2.112572 0.3210813 9.458609 0.001 Residual 20 4.466983 0.6789187 NA NA Total 21 6.579556 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04731 0.047307 2.6157 999 0.115 Residuals 20 0.36172 0.018086 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_t1qhzbybu2i749txas7j, .table th.tinytable_css_t1qhzbybu2i749txas7j { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_r5ldpz2nodu6b2zn0nz1, .table th.tinytable_css_r5ldpz2nodu6b2zn0nz1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3778248 0.239656 6.303884 0.001 Residual 20 1.1987049 0.760344 NA NA Total 21 1.5765298 1.000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000167 0.0001673 0.0139 999 0.901 Residuals 20 0.241060 0.0120530 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_gdtzv3fz8clevn54qtq1, .table th.tinytable_css_gdtzv3fz8clevn54qtq1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_3q9nqjpxns39jiyb0mgy, .table th.tinytable_css_3q9nqjpxns39jiyb0mgy { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.07837549 0.1797296 4.382204 0.088 Residual 20 0.35769892 0.8202704 NA NA Total 21 0.43607441 1.0000000 NA NA 4.8 Does FMT change the microbial community over time? 4.8.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Post-FMT1&quot;,&quot;Post-FMT2&quot;) ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot; )) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness Model_rich &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Model_rich) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.3876) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 171.0 174.3 -81.5 163.0 13 Scaled residuals: Min 1Q Median 3Q Max -1.73495 -0.71265 -0.07086 0.40744 1.88240 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 1.073e-11 3.275e-06 Number of obs: 17, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9343 0.1759 22.369 &lt;2e-16 *** treatmentPost-FMT2 0.4052 0.2402 1.687 0.0917 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) trtmnP-FMT2 -0.732 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 128.7946 131.6268 -60.3973 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.497472 11.25384 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 24.65947 4.164756 8 5.920988 0.0004 treatmentPost-FMT2 14.87494 5.482531 7 2.713151 0.0301 Correlation: (Intr) treatmentPost-FMT2 -0.7 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.76462323 -0.55701822 -0.04763166 0.55267588 1.30333436 Number of Observations: 17 Number of Groups: 9 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 56.17121 59.00341 -24.0856 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.6979711 0.8383981 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 4.163606 0.3820859 8 10.897043 0.0000 treatmentPost-FMT2 0.916226 0.4122640 7 2.222426 0.0617 Correlation: (Intr) treatmentPost-FMT2 -0.583 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.1362905 -0.5779277 -0.1466831 0.4812394 2.3357705 Number of Observations: 17 Number of Groups: 9 Functional Model_funct &lt;- lme(fixed = functional ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_funct) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -32.72222 -29.89002 20.36111 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.06160077 0.0305115 Fixed effects: functional ~ treatment Value Std.Error DF t-value p-value (Intercept) 1.4877804 0.02341751 8 63.53281 0.0000 treatmentPost-FMT2 0.0320561 0.01517203 7 2.11284 0.0725 Correlation: (Intr) treatmentPost-FMT2 -0.357 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.07361856 -0.66739366 -0.04576292 0.53118788 1.61981397 Number of Observations: 17 Number of Groups: 9 4.8.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.017610 0.017610 2.8225 999 0.102 Residuals 15 0.093585 0.006239 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_kwp623t39jiakwb7fcgw, .table th.tinytable_css_kwp623t39jiakwb7fcgw { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_10h243hqywa5p1lfhm2m, .table th.tinytable_css_10h243hqywa5p1lfhm2m { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3560084 0.07968734 1.298809 0.00390625 Residual 15 4.1115570 0.92031266 NA NA Total 16 4.4675655 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.009828 0.0098278 0.7113 999 0.436 Residuals 15 0.207263 0.0138175 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_yv7fk1940e29efjwudd9, .table th.tinytable_css_yv7fk1940e29efjwudd9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5zajmgjl5vnvtq0jht1s, .table th.tinytable_css_5zajmgjl5vnvtq0jht1s { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3149954 0.08110541 1.323962 0.00390625 Residual 15 3.5687823 0.91889459 NA NA Total 16 3.8837776 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.010955 0.010955 0.6602 999 0.545 Residuals 15 0.248892 0.016593 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_c74mcrmubcvxzrpacfxt, .table th.tinytable_css_c74mcrmubcvxzrpacfxt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_a40u7ojoj52dxu78imuw, .table th.tinytable_css_a40u7ojoj52dxu78imuw { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.06391536 0.09449338 1.565312 0.0703125 Residual 15 0.61248501 0.90550662 NA NA Total 16 0.67640037 1.00000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00151 0.0015101 0.1075 999 0.727 Residuals 15 0.21063 0.0140417 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_769f0lmn6u94zwvrqxs6, .table th.tinytable_css_769f0lmn6u94zwvrqxs6 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0vj90tsqbhul59exfy9k, .table th.tinytable_css_0vj90tsqbhul59exfy9k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.02861781 0.07980286 1.300855 0.3203125 Residual 15 0.32998847 0.92019714 NA NA Total 16 0.35860627 1.00000000 NA NA 4.9 Do FMT change the microbial community compared to antibiotics and acclimation? 4.9.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Antibiotics&quot;, &quot;Acclimation&quot;,&quot;Post-FMT1&quot;) ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% filter(type==&quot;Treatment&quot; &amp; treatment %in% c( &quot;Antibiotics&quot;,&quot;Acclimation&quot;, &quot;Post-FMT1&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + # scale_color_manual(values=treatment_colors)+ # scale_fill_manual(values=treatment_colors) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) Richness: Problems to calculate Model_rich &lt;- glmer.nb(richness ~ treatment + (1|individual), data = alpha_div_meta) #summary(Model_rich) emmeans(Model_rich, pairwise ~ treatment) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_neutral) emmeans(Model_neutral, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 17.31 3.42 8 9.431 25.2 Antibiotics 8.44 3.86 8 -0.451 17.3 Post-FMT1 24.60 3.62 8 16.256 32.9 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 8.87 4.74 13 1.869 0.1868 Acclimation - (Post-FMT1) -7.29 4.55 13 -1.601 0.2800 Antibiotics - (Post-FMT1) -16.16 4.85 13 -3.333 0.0139 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_phylo) emmeans(Model_phylo, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 5.50 0.505 8 4.34 6.67 Antibiotics 4.30 0.571 8 2.98 5.62 Post-FMT1 4.15 0.535 8 2.91 5.38 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 1.203 0.716 13 1.680 0.2496 Acclimation - (Post-FMT1) 1.357 0.688 13 1.973 0.1583 Antibiotics - (Post-FMT1) 0.154 0.733 13 0.210 0.9760 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Functional Model_funct &lt;- lme(fixed = functional ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) #summary(Model_funct) emmeans(Model_funct, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 1.49 0.0437 8 1.39 1.60 Antibiotics 1.47 0.0495 8 1.35 1.58 Post-FMT1 1.49 0.0463 8 1.38 1.60 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 0.02530 0.0660 13 0.383 0.9227 Acclimation - (Post-FMT1) 0.00618 0.0637 13 0.097 0.9948 Antibiotics - (Post-FMT1) -0.01913 0.0678 13 -0.282 0.9572 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates 4.9.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Post-FMT1&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Post-FMT1&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01582 0.0079101 1.05 999 0.383 Residuals 21 0.15821 0.0075336 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ooqkn8q3tj5diis508m1, .table th.tinytable_css_ooqkn8q3tj5diis508m1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_j5nec83pchbom0low1dj, .table th.tinytable_css_j5nec83pchbom0low1dj { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.840841 0.2018508 2.655435 0.001 Residual 21 7.278967 0.7981492 NA NA Total 23 9.119808 1.0000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8287871 2.293722 0.1407734 0.002 0.006 * 2 Acclimation vs Post-FMT1 1 0.9572484 2.939042 0.1638350 0.001 0.003 * 3 Antibiotics vs Post-FMT1 1 0.9764237 2.751191 0.1746656 0.001 0.003 * Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01796 0.0089778 0.5959 999 0.592 Residuals 21 0.31640 0.0150667 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_cm8qbxc8nhz5871dei6g, .table th.tinytable_css_cm8qbxc8nhz5871dei6g { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4svw6kejhflfdennvgzl, .table th.tinytable_css_4svw6kejhflfdennvgzl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 2.357142 0.2699241 3.882065 0.001 Residual 21 6.375470 0.7300759 NA NA Total 23 8.732613 1.0000000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8814932 2.747044 0.1640316 0.001 0.003 * 2 Acclimation vs Post-FMT1 1 1.3133104 4.634354 0.2360329 0.001 0.003 * 3 Antibiotics vs Post-FMT1 1 1.3427497 4.355528 0.2509591 0.002 0.006 * Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.15410 0.077052 2.6434 999 0.08 . Residuals 21 0.61214 0.029149 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_s2wjvsioim0ct62zu8jg, .table th.tinytable_css_s2wjvsioim0ct62zu8jg { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_akaa9blxzme8edj96os0, .table th.tinytable_css_akaa9blxzme8edj96os0 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.327076 0.3647564 6.029092 0.001 Residual 21 2.311178 0.6352436 NA NA Total 23 3.638254 1.0000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.6885926 5.124832 0.2679674 0.005 0.015 . 2 Acclimation vs Post-FMT1 1 0.2548027 3.292748 0.1800029 0.045 0.135 3 Antibiotics vs Post-FMT1 1 1.1000473 9.048069 0.4103792 0.002 0.006 * Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.23408 0.117038 4.3947 999 0.024 * Residuals 21 0.55927 0.026632 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_tk5cfttqj3qi39el8wi9, .table th.tinytable_css_tk5cfttqj3qi39el8wi9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_s7q1lbztyucfansj73d9, .table th.tinytable_css_s7q1lbztyucfansj73d9 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.636530 0.5730275 14.09175 0.001 Residual 21 1.219406 0.4269725 NA NA Total 23 2.855936 1.0000000 NA NA pairwise.adonis(func, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 1.11236925 14.811924 0.5140901 0.003 0.009 * 2 Acclimation vs Post-FMT1 1 0.05914673 2.630593 0.1492061 0.166 0.498 3 Antibiotics vs Post-FMT1 1 1.36488774 16.896102 0.5651607 0.001 0.003 * 4.10 Is the gut microbiota similar to the donor after FMT? 4.10.1 Beta diversity sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment )) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.11100 0.111002 11.752 999 0.001 *** Residuals 28 0.26447 0.009445 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xbroosvpmmrxnfwbk6hd, .table th.tinytable_css_xbroosvpmmrxnfwbk6hd { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8vije9ucs3d0614p86sa, .table th.tinytable_css_8vije9ucs3d0614p86sa { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.184578 0.1548451 5.13002 0.001 Residual 28 6.465508 0.8451549 NA NA Total 29 7.650086 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04408 0.044082 3.1744 999 0.092 . Residuals 28 0.38883 0.013887 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_lpeh7u7gpzguseyl4wv1, .table th.tinytable_css_lpeh7u7gpzguseyl4wv1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_e9rh857ocor4jzgwhhm2, .table th.tinytable_css_e9rh857ocor4jzgwhhm2 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.147077 0.1608783 5.368223 0.001 Residual 28 5.983012 0.8391217 NA NA Total 29 7.130089 1.0000000 NA NA neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + # scale_color_manual(values = treatment_colors) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00007 0.0000689 0.0044 999 0.948 Residuals 28 0.43637 0.0155847 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ob6yapt9xx7o8dob8ycr, .table th.tinytable_css_ob6yapt9xx7o8dob8ycr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_m3t1l0fmfrp2qr9ai5ey, .table th.tinytable_css_m3t1l0fmfrp2qr9ai5ey { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.1298187 0.1018776 3.17615 0.001 Residual 28 1.1444432 0.8981224 NA NA Total 29 1.2742619 1.0000000 NA NA Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00121 0.0012109 0.1039 999 0.78 Residuals 28 0.32638 0.0116565 adonis2(func ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(func))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(func))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_5ddge5efje60rzrg0yuw, .table th.tinytable_css_5ddge5efje60rzrg0yuw { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0uinj11c8tk3qkt9qe3m, .table th.tinytable_css_0uinj11c8tk3qkt9qe3m { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.01515762 0.02696066 0.7758149 0.481 Residual 28 0.54705472 0.97303934 NA NA Total 29 0.56221234 1.00000000 NA NA 4.10.2 Structural zeros FMT_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment == &quot;FMT&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() Transplant_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Treatment&quot; &amp; treatment ==&quot;Transplant&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_FMT = all(c_across(all_of(FMT_samples)) == 0)) %&gt;% mutate(all_zeros_Transplant = all(c_across(all_of(Transplant_samples)) == 0)) %&gt;% mutate(average_FMT = mean(c_across(all_of(FMT_samples)), na.rm = TRUE)) %&gt;% mutate(average_Transplant = mean(c_across(all_of(Transplant_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_FMT == TRUE || all_zeros_Transplant==TRUE) %&gt;% mutate(present = case_when( all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;Transplant&quot;, !all_zeros_FMT &amp; all_zeros_Transplant ~ &quot;FMT&quot;, !all_zeros_FMT &amp; !all_zeros_Transplant ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;FMT&quot;, average_FMT, average_Transplant)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Structural zeros in each group fmt &lt;- structural_zeros %&gt;% filter(present==&quot;FMT&quot;) %&gt;% count(phylum, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) fmt_f &lt;- structural_zeros %&gt;% filter(present==&quot;FMT&quot;) %&gt;% count(family, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Transplant FMT 1 52 55 Phyla to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_ybcrh6dso0kij5scej1n, .table th.tinytable_css_ybcrh6dso0kij5scej1n { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ojpu05qpg3kyhcrx6xi1, .table th.tinytable_css_ojpu05qpg3kyhcrx6xi1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum Transplant FMT p__Bacillota_A 20 21 p__Bacillota 16 10 p__Pseudomonadota 6 11 p__Bacteroidota 3 6 p__Desulfobacterota 2 2 p__Bacillota_B 1 0 p__Chlamydiota 1 0 p__Cyanobacteriota 1 0 p__Fusobacteriota 1 0 p__Verrucomicrobiota 1 2 p__Actinomycetota 0 1 p__Bacillota_C 0 1 p__Campylobacterota 0 1 Families to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Transplant&quot;) %&gt;% count(family, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_f, by=&quot;family&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_yec1xql68vcqfqb28cai, .table th.tinytable_css_yec1xql68vcqfqb28cai { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_vi3mh6acxv8n3yuo3og1, .table th.tinytable_css_vi3mh6acxv8n3yuo3og1 { border-bottom: solid #d3d8dc 0.1em; } family Transplant FMT f__Lachnospiraceae 7 9 f__Erysipelotrichaceae 6 5 f__UBA660 6 0 f__Enterobacteriaceae 5 2 f__CAG-508 3 0 f__Ruminococcaceae 3 3 f__Anaerovoracaceae 2 0 f__Coprobacillaceae 2 0 f__Desulfovibrionaceae 2 2 f__Oscillospiraceae 2 1 f__Tannerellaceae 2 1 f__UBA1242 2 0 f__ 1 3 f__Akkermansiaceae 1 0 f__CAG-239 1 2 f__Chlamydiaceae 1 0 f__Enterococcaceae 1 3 f__Fusobacteriaceae 1 0 f__Gastranaerophilaceae 1 0 f__Marinifilaceae 1 0 f__Mycoplasmoidaceae 1 1 f__Peptococcaceae 1 0 f__Anaerotignaceae 0 2 f__Bacteroidaceae 0 2 f__LL51 0 2 f__UBA3700 0 2 f__Acutalibacteraceae 0 1 f__Arcobacteraceae 0 1 f__CAG-274 0 1 f__CALVMC01 0 1 f__Devosiaceae 0 1 f__Mycobacteriaceae 0 1 f__Pumilibacteraceae 0 1 f__RUG11792 0 1 f__Rhizobiaceae 0 1 f__Rikenellaceae 0 1 f__Sphingobacteriaceae 0 1 f__Streptococcaceae 0 1 f__UBA1997 0 1 f__UBA3830 0 1 f__Weeksellaceae 0 1 4.10.2.1 Functional capacities of the structural zeros #Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% structural_zeros$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) #Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) #Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% filter(genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT-Transplant)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Transplant&quot;,&quot;FMT&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Elevation&quot;) 4.10.3 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output, file = &quot;data/ancombc_FMT_transplant.Rdata&quot;) load(&quot;data/ancombc_FMT_transplant.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_treatmentTransplant, p_treatmentTransplant) %&gt;% filter(p_treatmentTransplant &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentTransplant) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_treatmentTransplant) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() Differential abundance MAGs in each group fmt_count &lt;- ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&lt;0) %&gt;% count(phylum, name = &quot;FMT&quot;) %&gt;% arrange(desc(FMT)) ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&gt;0) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) phylum Transplant FMT 1 Bacteroidota 13 5 2 Bacillota_A 4 17 3 Bacillota 3 1 4 Campylobacterota 1 1 5 Desulfobacterota 1 2 6 Spirochaetota 1 0 7 Pseudomonadota 0 5 8 Cyanobacteriota 0 2 9 Bacillota_B 0 1 10 Bacillota_C 0 1 ancombc_rand_table_mag %&gt;% filter(lfc_treatmentTransplant&gt;0) %&gt;% count(phylum, name = &quot;Transplant&quot;) %&gt;% arrange(desc(Transplant)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Transplant FMT 1 23 35 ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentTransplant, y=forcats::fct_reorder(genome,lfc_treatmentTransplant), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) 4.10.4 Differences in the functional capacities GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) sample_sub &lt;- sample_metadata %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Post-FMT1&quot;, &quot;Post-FMT2&quot;) ~ &quot;FMT&quot;, TRUE ~ treatment ))%&gt;% filter(type == &quot;Treatment&quot; &amp; treatment %in% c(&quot;FMT&quot;, &quot;Transplant&quot;)) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) 4.10.4.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT 0.354 0.0255 2 Transplant 0.351 0.0426 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94871, p-value = 0.1561 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 128, p-value = 0.4826 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(12,13)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(12,13)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT-Transplant)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Transplant&quot;,&quot;FMT&quot;)) means_gift &lt;- element_gift_filt %&gt;% select(-treatment) %&gt;% pivot_longer(!sample, names_to = &quot;Elements&quot;, values_to = &quot;abundance&quot;) %&gt;% left_join(sample_metadata, by=join_by(sample==sample)) %&gt;% group_by(treatment, Elements) %&gt;% summarise(mean=mean(abundance)) log_fold &lt;- means_gift %&gt;% group_by(Elements) %&gt;% summarise( logfc_fmt_transplant = log2(mean[treatment == &quot;FMT&quot;] / mean[treatment == &quot;Transplant&quot;]) ) %&gt;% left_join(., difference_table, by=&quot;Elements&quot;) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Treatment&quot;) log_fold %&gt;% filter(Elements!=&quot;D0611&quot;) %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,logfc_fmt_transplant), y=logfc_fmt_transplant, fill=group_color)) + geom_col() + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Log_fold&quot;)+ labs(fill=&quot;Treatment&quot;) 4.10.4.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT 0.349 0.0221 2 Transplant 0.354 0.0375 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.87207, p-value = 0.001864 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 120, p-value = 0.7106 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(12,13)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
